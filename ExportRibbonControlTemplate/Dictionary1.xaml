<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ExportRibbonControlTemplate">
    <rd:ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:rd="clr-namespace:System.Windows;assembly=PresentationFramework" xmlns:rcp="clr-namespace:System.Windows.Controls.Ribbon;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089" xmlns:d="clr-namespace:System;assembly=mscorlib" xmlns:rsbvc="clr-namespace:System.Windows.Controls.Ribbon.Primitives;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089" xmlns:sdsc="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" xmlns:wc="clr-namespace:System.Windows.Shell;assembly=PresentationFramework">
        <rd:Style x:Key="{x:Type ribbon:RibbonControl}" TargetType="{x:Type ribbon:RibbonControl}">
            <rd:Style.Triggers>
                <rd:DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.MinWidth.RibbonControlLengthUnitType}" Value="Pixel">
                    <rd:Setter Property="windows:FrameworkElement.MinWidth" Value="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.MinWidth.Value}" />
                </rd:DataTrigger>
                <rd:DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.MaxWidth.RibbonControlLengthUnitType}" Value="Pixel">
                    <rd:Setter Property="windows:FrameworkElement.MaxWidth" Value="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.MaxWidth.Value}" />
                </rd:DataTrigger>
                <rd:DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.Width.RibbonControlLengthUnitType}" Value="Pixel">
                    <rd:Setter Property="windows:FrameworkElement.Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.Width.Value}" />
                </rd:DataTrigger>
                <rd:DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.Width.RibbonControlLengthUnitType}" Value="Auto">
                    <rd:Setter Property="windows:FrameworkElement.Width" Value="Auto" />
                </rd:DataTrigger>
            </rd:Style.Triggers>
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonControl}">
                        <rcp:RibbonContentPresenter x:Name="PART_ContentPresenter" />
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <rd:Style x:Key="{x:Type ribbon:RibbonContextualTabGroupItemsControl}" TargetType="{x:Type ribbon:RibbonContextualTabGroupItemsControl}">
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonContextualTabGroupItemsControl}">
                        <Border Background="{TemplateBinding Control.Background}">
                            <ItemsPresenter />
                        </Border>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <RadialGradientBrush x:Key="Đ" GradientOrigin="0.5,1" Center="0.5,1" RadiusY="1">
            <GradientStop Offset="0" Color="#FFFFFFFF" />
            <GradientStop Offset="1" Color="#77FFFFFF" />
        </RadialGradientBrush>
        <rd:Style x:Key="{x:Type ribbon:RibbonContextualTabGroup}" TargetType="{x:Type ribbon:RibbonContextualTabGroup}">
            <rd:Setter Property="windows:FrameworkElement.Height" Value="{Binding Path=(SystemParameters.WindowCaptionHeight)}" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="UIElement.Focusable" Value="False" />
            <rd:Setter Property="TextBlock.TextAlignment" Value="Center" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonContextualTabGroup}">
                        <ControlTemplate.Resources>
                            <rd:DataTemplate DataType="{x:Type system:String}">
                                <rd:DataTemplateKey.Key>{x:Type system:String}</rd:DataTemplateKey.Key>
                                <TextBlock Text="{TemplateBinding ContentPresenter.Content}" TextTrimming="CharacterEllipsis" />
                            </rd:DataTemplate>
                        </ControlTemplate.Resources>
                        <Border Name="OuterBorder" Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2,2,0,0" RenderOptions.ClearTypeHint="Enabled">
                            <Border Name="InnerBorder" Background="{StaticResource Đ}" BorderBrush="{TemplateBinding Control.Background}" BorderThickness="1,1,1,2" CornerRadius="2,2,0,0">
                                <ContentPresenter ContentSource="Header" VerticalAlignment="Center" Margin="2,0,2,0" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="InnerBorder" Property="Border.BorderThickness" Value="2,2,2,3" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter Value="{windows:DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <rd:Style x:Key="{x:Type ribbon:RibbonSeparator}" TargetType="{x:Type ribbon:RibbonSeparator}">
            <rd:Setter Property="UIElement.Focusable" Value="False" />
            <rd:Setter Property="Control.Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.Background}" />
            <rd:Setter Property="Control.BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
                        <Border Name="MainBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}">
                            <TextBlock Name="Text" Text="{TemplateBinding ribbon:RibbonSeparator.Label}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="Text" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextBlock.Foreground" />
                                <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                            </rd:DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Style.Triggers>
                <rd:Trigger Property="ribbon:RibbonSeparator.Label" Value="{x:Null}">
                    <rd:Setter Property="Control.Template">
                        <rd:Setter.Value>
                            <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
                                <StackPanel>
                                    <Line Name="Line" X1="0" Y1="0" X2="1" Y2="0" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" Stretch="Fill" />
                                    <Line Name="HighlightLine" X1="0" Y1="0" X2="1" Y2="0" Stroke="#FFFFFFFF" StrokeThickness="1" Stretch="Fill" />
                                </StackPanel>
                                <ControlTemplate.Triggers>
                                    <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                        <rd:Setter TargetName="Line" Value="{windows:DynamicResource {x:Static SystemColors.InfoTextBrushKey}}" Property="Shape.Stroke" />
                                        <rd:Setter TargetName="HighlightLine" Property="Shape.Stroke" Value="#00FFFFFF" />
                                    </rd:DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </rd:Setter.Value>
                    </rd:Setter>
                </rd:Trigger>
            </rd:Style.Triggers>
        </rd:Style>
        <LinearGradientBrush x:Key="Û" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FFFEFBF4" />
            <GradientStop Offset="0.19" Color="#FFFDE7CE" />
            <GradientStop Offset="0.39" Color="#FFFDDEB8" />
            <GradientStop Offset="0.39" Color="#FFFFCE6B" />
            <GradientStop Offset="0.79" Color="#FFFFDE9A" />
            <GradientStop Offset="1" Color="#FFFFEBAA" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Ú" Color="#FFFFB700" />
        <LinearGradientBrush x:Key="Ý" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FFE3C085" />
            <GradientStop Offset="0.19" Color="#FFF4CC89" />
            <GradientStop Offset="0.36" Color="#FFF5C777" />
            <GradientStop Offset="0.36" Color="#FFF5BB56" />
            <GradientStop Offset="0.79" Color="#FFF4CE9A" />
            <GradientStop Offset="1" Color="#FFF3E28D" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Ü" Color="#FFC29B29" />
        <LinearGradientBrush x:Key="Þ" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FFFFDCA0" />
            <GradientStop Offset="0.18" Color="#FFFFD692" />
            <GradientStop Offset="0.39" Color="#FFFFC45D" />
            <GradientStop Offset="1" Color="#FFFFD178" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ë" Color="#80FFFFFF" />
        <SolidColorBrush x:Key="í" Color="#B8FFFFFF" />
        <SolidColorBrush x:Key="ĉ" Color="#EEFFFFFF" />
        <SolidColorBrush x:Key="Ë" Color="#FF9E9E9E" />
        <LinearGradientBrush x:Key="Ă" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FFE7CBAD" />
            <GradientStop Offset="0.1" Color="#FFF7D7B5" />
            <GradientStop Offset="0.36" Color="#FFFFD38C" />
            <GradientStop Offset="0.36" Color="#FFFFC75A" />
            <GradientStop Offset="1" Color="#FFFFEFA5" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ď" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#40FFFEFE" />
            <GradientStop Offset="0.39" Color="#40FFFEFE" />
            <GradientStop Offset="0.39" Color="#20FFCE68" />
            <GradientStop Offset="0.69" Color="#20FFCE68" />
            <GradientStop Offset="1" Color="#10FFFFFF" />
        </LinearGradientBrush>
        <d:Double x:Key="ą">20.0</d:Double>
        <d:Double x:Key="Ć">22.0</d:Double>
        <d:Double x:Key="ß">91.0</d:Double>
        <d:Double x:Key="á">94.0</d:Double>
        <d:Int32 x:Key="Í">900</d:Int32>
        <d:Int32 x:Key="Î">20000</d:Int32>
        <d:Int32 x:Key="Ï">0</d:Int32>
        <Color x:Key="Ö">#71000000</Color>
        <BooleanToVisibilityConverter x:Key="à" />
        <Geometry x:Key="Ð">M 0 0 L 2.5 3 L 5 0 Z</Geometry>
        <Geometry x:Key="ï">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
        <Geometry x:Key="ñ">M10,1.2L4.5,7.3 1.5,5 1.5,7.5 4.5,10 4.5,10 10,4Z</Geometry>
        <Geometry x:Key="ð">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
        <SolidColorBrush x:Key="Ñ" Color="#F0FFFFFF" />
        <SolidColorBrush x:Key="Ò" Color="#FFE5EFF9" />
        <SolidColorBrush x:Key="ħ" Color="#FF6C747D" />
        <DrawingBrush x:Key="Ĩ" Viewbox="0,0,3,3" Viewport="0,0,3,3" TileMode="Tile" ViewportUnits="Absolute" ViewboxUnits="Absolute">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <DrawingGroup.Children>
                        <GeometryDrawing Brush="{StaticResource ħ}" Geometry="M0,0L2,0 2,2 0,2z" />
                    </DrawingGroup.Children>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <rd:Style x:Key="Ó" TargetType="{x:Type Thumb}">
            <rd:Setter Property="windows:FrameworkElement.Width" Value="11" />
            <rd:Setter Property="windows:FrameworkElement.Height" Value="11" />
            <rd:Setter Property="windows:FrameworkElement.VerticalAlignment" Value="Bottom" />
            <rd:Setter Property="windows:FrameworkElement.HorizontalAlignment" Value="Right" />
            <rd:Setter Property="windows:FrameworkElement.Cursor" Value="SizeNWSE" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="#00FFFFFF">
                            <Path Margin="0,0,2,2" Data="M9,0L11,0 11,11 0,11 0,9 3,9 3,6 6,6 6,3 9,3z" Fill="{StaticResource Ĩ}" />
                        </Border>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Style.Triggers>
                <rd:Trigger Property="windows:FrameworkElement.FlowDirection" Value="RightToLeft">
                    <rd:Setter Property="windows:FrameworkElement.Cursor" Value="SizeNESW" />
                </rd:Trigger>
            </rd:Style.Triggers>
        </rd:Style>
        <rd:Style x:Key="ó" TargetType="{x:Type Thumb}">
            <rd:Setter Property="windows:FrameworkElement.Width" Value="11" />
            <rd:Setter Property="windows:FrameworkElement.Height" Value="11" />
            <rd:Setter Property="windows:FrameworkElement.VerticalAlignment" Value="Bottom" />
            <rd:Setter Property="windows:FrameworkElement.HorizontalAlignment" Value="Left" />
            <rd:Setter Property="windows:FrameworkElement.Cursor" Value="SizeNESW" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="#00FFFFFF">
                            <Path Margin="2,0,0,2" Data="M0,0L2,0 2,3 5,3 5,6 8,6 8,9 11,9 11,11 0,11z" Fill="{StaticResource Ĩ}" />
                        </Border>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Style.Triggers>
                <rd:Trigger Property="windows:FrameworkElement.FlowDirection" Value="RightToLeft">
                    <rd:Setter Property="windows:FrameworkElement.Cursor" Value="SizeNWSE" />
                </rd:Trigger>
            </rd:Style.Triggers>
        </rd:Style>
        <rd:Style x:Key="Õ" TargetType="{x:Type Thumb}">
            <rd:Setter Property="windows:FrameworkElement.Width" Value="11" />
            <rd:Setter Property="windows:FrameworkElement.Height" Value="11" />
            <rd:Setter Property="windows:FrameworkElement.VerticalAlignment" Value="Top" />
            <rd:Setter Property="windows:FrameworkElement.HorizontalAlignment" Value="Right" />
            <rd:Setter Property="windows:FrameworkElement.Cursor" Value="SizeNESW" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="#00FFFFFF">
                            <Path Margin="0,2,2,0" Data="M0,0L0,3 3,3 3,6 6,6 6,9 9,9 9,11 11,11 11,0z" Fill="{StaticResource Ĩ}" />
                        </Border>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Style.Triggers>
                <rd:Trigger Property="windows:FrameworkElement.FlowDirection" Value="RightToLeft">
                    <rd:Setter Property="windows:FrameworkElement.Cursor" Value="SizeNWSE" />
                </rd:Trigger>
            </rd:Style.Triggers>
        </rd:Style>
        <rd:Style x:Key="Ô" TargetType="{x:Type Thumb}">
            <rd:Setter Property="windows:FrameworkElement.Height" Value="11" />
            <rd:Setter Property="windows:FrameworkElement.Cursor" Value="SizeNS" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="#00FFFFFF">
                            <Path Margin="0,0,2,2" HorizontalAlignment="Center" VerticalAlignment="Bottom" Fill="{StaticResource Ĩ}">
                                <Path.Data>
                                    <RectangleGeometry Rect="0,0,11,3" />
                                </Path.Data>
                            </Path>
                        </Border>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <SolidColorBrush x:Key="ī" Color="#88FFFFFF" />
        <LinearGradientBrush x:Key="Ĭ" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#AAFFFFFF" Offset="0" />
            <GradientStop Color="#FFFFFF" Offset="1.0" />
        </LinearGradientBrush>
        <rd:Style x:Key="{x:Type ribbon:RibbonTabHeader}" TargetType="{x:Type ribbon:RibbonTabHeader}">
            <rd:Setter Property="windows:FrameworkElement.Margin" Value="0,1,0,0" />
            <rd:Setter Property="Control.Padding" Value="9,1,9,0" />
            <rd:Setter Property="windows:FrameworkElement.MinHeight" Value="22" />
            <rd:Setter Property="Control.Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.Background}" />
            <rd:Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="ribbon:RibbonTabHeader.CheckedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}" />
            <rd:Setter Property="ribbon:RibbonTabHeader.CheckedBackground" Value="{StaticResource Ĭ}" />
            <rd:Setter Property="ribbon:RibbonTabHeader.MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonTabHeader.FocusedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonTabHeader}">
                        <Grid Name="MainGrid" SnapsToDevicePixels="True">
                            <Border Name="PART_OuterBorder" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" Margin="2,-1,2.5,0">
                                <Border Name="InnerBorder" RenderOptions.ClearTypeHint="Enabled" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" Padding="{TemplateBinding Control.Padding}">
                                    <ContentPresenter ContentSource="Content" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </Border>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                                <rd:Setter TargetName="MainGrid" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="PART_OuterBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="PART_OuterBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="PART_OuterBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False" />
                                    <rd:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="False" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{x:Null}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="False" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{x:Null}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{x:Null}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False" />
                                    <rd:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="False" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{x:Null}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False" />
                                    <rd:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ī}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False" />
                                    <rd:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="False" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ī}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="False" />
                                    <rd:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="False" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ī}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ī}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="False" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ī}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="False" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ī}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="False" />
                                    <rd:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.Background}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ī}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.Background}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ī}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.Background}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ī}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False" />
                                    <rd:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.Background}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ī}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsContextualTab}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False" />
                                    <rd:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="False" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.Background}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ī}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="False" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Property="Border.Background" Value="#00FFFFFF" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="False" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Property="Border.Background" Value="#00FFFFFF" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsMinimized}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.IsDropDownOpen}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsRibbonTabSelected}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding ElementName=MainGrid, Path=IsMouseOver}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="InnerBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="InnerBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Style.Triggers>
                <rd:Trigger Property="ribbon:RibbonTabHeader.IsRibbonTabSelected" Value="True">
                    <rd:Setter Property="Control.TabIndex" Value="-1" />
                </rd:Trigger>
            </rd:Style.Triggers>
        </rd:Style>
        <rd:Style x:Key="ĭ" TargetType="{x:Type RepeatButton}">
            <rd:Setter Property="windows:FrameworkElement.OverridesDefaultStyle" Value="True" />
            <rd:Setter Property="UIElement.Focusable" Value="False" />
            <rd:Setter Property="windows:FrameworkElement.Width" Value="14" />
            <rd:Setter Property="Control.Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(ribbon:RibbonControlService.Ribbon).Background}" />
            <rd:Setter Property="Control.BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(ribbon:RibbonControlService.Ribbon).BorderBrush}" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="OuterBorder" CornerRadius="3,0,0,3" BorderThickness="1" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}">
                            <Border Name="InnerBorder" CornerRadius="3,0,0,3" Background="#80FFFFFF">
                                <Path Name="GlyphPath" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="#FF808080" Data="M4,0L0,3.5 4,7" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <rd:Trigger Property="Control.HorizontalContentAlignment" Value="Right">
                                <rd:Setter TargetName="GlyphPath" Property="Path.Data" Value="M0,0L4,3.5 0,7" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0,3,3,0" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0,3,3,0" />
                            </rd:Trigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="InnerBorder" Value="{Binding RelativeSource={RelativeSource Self}, Path=(ribbon:RibbonControlService.Ribbon).MouseOverBackground}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="InnerBorder" Value="{Binding RelativeSource={RelativeSource Self}, Path=(ribbon:RibbonControlService.Ribbon).PressedBackground}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="GlyphPath" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Property="Shape.Fill" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="InnerBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <rsbvc:RibbonScrollButtonVisibilityConverter x:Key="Į" />
        <ControlTemplate x:Key="į" TargetType="{x:Type ScrollViewer}">
            <Grid Name="Grid" Background="{TemplateBinding Control.Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ScrollContentPresenter Name="PART_ScrollContentPresenter" Margin="{TemplateBinding Control.Padding}" Grid.ColumnSpan="3" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" />
                <RepeatButton Style="{StaticResource ĭ}" HorizontalContentAlignment="Left" Grid.Column="0" Command="{x:Static ScrollBar.LineLeftCommand}" Focusable="False" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                    <RepeatButton.Visibility>
                        <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource Į}" ConverterParameter="0">
                            <Binding Path="ComputedHorizontalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="HorizontalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="ExtentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="ViewportWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                        </MultiBinding>
                    </RepeatButton.Visibility>
                </RepeatButton>
                <RepeatButton Style="{StaticResource ĭ}" HorizontalContentAlignment="Right" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" Focusable="False" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                    <RepeatButton.Visibility>
                        <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource Į}" ConverterParameter="100">
                            <Binding Path="ComputedHorizontalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="HorizontalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="ExtentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="ViewportWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                        </MultiBinding>
                    </RepeatButton.Visibility>
                </RepeatButton>
            </Grid>
        </ControlTemplate>
        <rd:Style x:Key="Ī" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
            <rd:Setter Property="UIElement.Focusable" Value="False" />
            <rd:Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
            <rd:Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <rd:Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <rd:Setter Property="Control.Template" Value="{StaticResource į}" />
        </rd:Style>
        <ControlTemplate x:Key="Ħ" TargetType="{x:Type ribbon:RibbonToggleButton}">
            <Grid Name="MainGrid" SnapsToDevicePixels="True">
                <Border Name="OuterBorder" CornerRadius="{TemplateBinding ribbon:RibbonToggleButton.CornerRadius}" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" />
                <Border Name="MiddleBorder" CornerRadius="{TemplateBinding ribbon:RibbonToggleButton.CornerRadius}" Background="#00FFFFFF" BorderBrush="#00FFFFFF" BorderThickness="{TemplateBinding Control.BorderThickness}">
                    <Border Name="InnerBorder" Background="#00FFFFFF" BorderBrush="#00FFFFFF" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" CornerRadius="{TemplateBinding ribbon:RibbonToggleButton.CornerRadius}">
                        <StackPanel Name="StackPanel" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                            <Image Name="PART_Image" Source="{TemplateBinding ribbon:RibbonToggleButton.LargeImageSource}" Width="32" Height="32" RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=LargeImageMargin}}" />
                            <Grid Name="Grid" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <rcp:RibbonTwoLineText x:Name="TwoLineText" Text="{TemplateBinding ribbon:RibbonToggleButton.Label}" TextAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Center" LineHeight="13px" LineStackingStrategy="BlockLineHeight" RibbonTwoLineText.HasTwoLines="{TemplateBinding ribbon:RibbonTwoLineText.HasTwoLines}" RibbonTwoLineText.PathData="{TemplateBinding ribbon:RibbonTwoLineText.PathData}" PathFill="{TemplateBinding Control.Foreground}" Margin="1,1,1,0" />
                            </Grid>
                        </StackPanel>
                    </Border>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <rd:DataTrigger Value="Large" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                    <rd:Setter Property="windows:FrameworkElement.MinWidth" Value="44" />
                    <rd:Setter Property="windows:FrameworkElement.Height" Value="66" />
                    <rd:Setter TargetName="Grid" Property="windows:FrameworkElement.MinHeight" Value="26" />
                    <rd:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="True" />
                </rd:DataTrigger>
                <rd:DataTrigger Value="Small" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                    <rd:Setter Value="{StaticResource Ć}" Property="windows:FrameworkElement.Height" />
                    <rd:Setter TargetName="PART_Image" Property="windows:FrameworkElement.Margin" Value="1,0,1,0" />
                    <rd:Setter TargetName="PART_Image" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallImageSource}" Property="Image.Source" />
                    <rd:Setter TargetName="PART_Image" Property="windows:FrameworkElement.Width" Value="16" />
                    <rd:Setter TargetName="PART_Image" Property="windows:FrameworkElement.Height" Value="16" />
                    <rd:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.HorizontalAlignment" Value="Left" />
                    <rd:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.Margin" Value="1" />
                    <rd:Setter TargetName="StackPanel" Property="StackPanel.Orientation" Value="Horizontal" />
                </rd:DataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Small" />
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInQuickAccessToolBar}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter Property="windows:FrameworkElement.Height" Value="Auto" />
                </rd:MultiDataTrigger>
                <rd:DataTrigger Value="False" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}">
                    <rd:Setter TargetName="TwoLineText" Value="{x:Null}" Property="ribbon:RibbonTwoLineText.Text" />
                    <rd:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.Margin" Value="0" />
                </rd:DataTrigger>
                <rd:DataTrigger Value="Collapsed" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                    <rd:Setter TargetName="PART_Image" Property="UIElement.Visibility" Value="Collapsed" />
                </rd:DataTrigger>
                <rd:Trigger Property="UIElement.IsMouseOver" Value="True">
                    <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="InnerBorder" Value="{StaticResource ë}" Property="Border.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                    <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="InnerBorder" Value="{StaticResource ë}" Property="Border.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="PART_Image" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="MainGrid" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="TwoLineText" Value="{StaticResource Ë}" Property="ribbon:RibbonTwoLineText.PathFill" />
                </rd:Trigger>
                <rd:Trigger Property="ToggleButton.IsChecked" Value="True">
                    <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="InnerBorder" Value="{StaticResource Ă}" Property="Border.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="ButtonBase.IsPressed" Value="True">
                    <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ToggleButton.IsChecked" Value="True" />
                        <rd:Condition Property="UIElement.IsMouseOver" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="MiddleBorder" Value="{StaticResource ď}" Property="Border.Background" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ToggleButton.IsChecked" Value="True" />
                        <rd:Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="MiddleBorder" Value="{StaticResource ď}" Property="Border.Background" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ButtonBase.IsPressed" Value="True" />
                        <rd:Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="MiddleBorder" Value="{StaticResource ď}" Property="Border.Background" />
                </rd:MultiTrigger>
                <rd:Trigger Property="ribbon:RibbonToggleButton.IsInControlGroup" Value="True">
                    <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="OuterBorder" Property="Border.BorderThickness" Value="0,0,1,0" />
                    <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0" />
                </rd:Trigger>
                <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="TwoLineText" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="ribbon:RibbonTwoLineText.PathFill" />
                    <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="OuterBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="OuterBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                </rd:DataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="MiddleBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="TwoLineText" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="ribbon:RibbonTwoLineText.PathFill" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="TwoLineText" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="ribbon:RibbonTwoLineText.PathFill" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver}" Value="True" />
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver}" Value="True" />
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, FallbackValue=false}" Value="True" />
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="TwoLineText" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="ribbon:RibbonTwoLineText.PathFill" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="TwoLineText" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="ribbon:RibbonTwoLineText.PathFill" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="TwoLineText" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="ribbon:RibbonTwoLineText.PathFill" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="MiddleBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="TwoLineText" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="ribbon:RibbonTwoLineText.PathFill" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInControlGroup}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="TwoLineText" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="ribbon:RibbonTwoLineText.PathFill" />
                </rd:MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <rd:Style x:Key="{x:Type ribbon:RibbonToggleButton}" TargetType="{x:Type ribbon:RibbonToggleButton}">
            <rd:Setter Property="Control.Background" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="ribbon:RibbonToggleButton.CornerRadius" Value="2" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <rd:Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <rd:Setter Property="ribbon:RibbonToggleButton.MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.MouseOverBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.PressedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.PressedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.CheckedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.CheckedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.FocusedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.FocusedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}" />
            <rd:Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.ShowDuration" Value="{StaticResource Î}" />
            <rd:Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource Ï}" />
            <rd:Setter Property="Control.Template" Value="{StaticResource Ħ}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.QuickAccessToolBarControlSizeDefinition">
                <rd:Setter.Value>
                    <rcp:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="False" />
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Style.Resources>
                <rd:Thickness Left="1" Top="1" Right="1" Bottom="2" />
            </rd:Style.Resources>
        </rd:Style>
        <SolidColorBrush x:Key="Ĉ" Color="#90B1BBC6" />
        <SolidColorBrush x:Key="ć" Color="#90DEDEDE" />
        <rd:Style x:Key="{x:Type ribbon:RibbonTextBox}" TargetType="{x:Type ribbon:RibbonTextBox}">
            <rd:Setter Property="Control.Background" Value="{StaticResource ĉ}" />
            <rd:Setter Property="Control.BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="UIElement.AllowDrop" Value="True" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="ribbon:RibbonTextBox.TextBoxWidth" Value="80" />
            <rd:Setter Property="ribbon:RibbonTextBox.MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}" />
            <rd:Setter Property="ribbon:RibbonTextBox.MouseOverBackground" Value="#FFFFFFFF" />
            <rd:Setter Property="ribbon:RibbonTextBox.FocusedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}" />
            <rd:Setter Property="ribbon:RibbonTextBox.FocusedBackground" Value="#FFFFFFFF" />
            <rd:Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.ShowDuration" Value="{StaticResource Î}" />
            <rd:Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource Ï}" />
            <rd:Setter Property="ribbon:RibbonTextBox.QuickAccessToolBarControlSizeDefinition">
                <rd:Setter.Value>
                    <rcp:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="True" />
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonTextBox}">
                        <Border Name="MainBorder" Margin="1">
                            <Grid Margin="1,0,1,0" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Name="OuterTextColumn" Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Image Name="Image" Source="{TemplateBinding ribbon:RibbonTextBox.LargeImageSource}" RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Grid.Column="1" Margin="1" Width="32" Height="32" />
                                <Grid Name="Grid" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Grid Name="InnerGrid" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Name="TextColumn" Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid Name="TwoLineTextPanel" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                                            <rcp:RibbonTwoLineText x:Name="TwoLineText" Text="{TemplateBinding ribbon:RibbonTextBox.Label}" TextAlignment="Center" LineHeight="13px" LineStackingStrategy="BlockLineHeight" Margin="2,0,2,0" />
                                            <Rectangle Name="FocusVisual" Margin="1" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" Visibility="Collapsed" />
                                        </Grid>
                                        <Border Name="Border" Grid.Column="1" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" Height="{StaticResource ą}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2,0,2,0">
                                            <ScrollViewer Name="PART_ContentHost" Margin="0,1,0,1" Width="{TemplateBinding ribbon:RibbonTextBox.TextBoxWidth}" VerticalAlignment="Center" />
                                        </Border>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <rd:DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.Width.IsStar}">
                                <rd:Setter TargetName="TextColumn" Property="ColumnDefinition.Width" Value="*" />
                                <rd:Setter TargetName="OuterTextColumn" Property="ColumnDefinition.Width" Value="*" />
                                <rd:Setter TargetName="PART_ContentHost" Property="windows:FrameworkElement.Width" Value="Auto" />
                                <rd:Setter TargetName="Border" Property="windows:FrameworkElement.HorizontalAlignment" Value="Stretch" />
                                <rd:Setter TargetName="Grid" Property="windows:FrameworkElement.HorizontalAlignment" Value="Stretch" />
                                <rd:Setter TargetName="InnerGrid" Property="windows:FrameworkElement.HorizontalAlignment" Value="Stretch" />
                            </rd:DataTrigger>
                            <rd:DataTrigger Value="Large" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                                <rd:Setter Property="windows:FrameworkElement.MinWidth" Value="44" />
                                <rd:Setter Property="windows:FrameworkElement.Height" Value="66" />
                                <rd:Setter TargetName="Image" Property="windows:FrameworkElement.Height" Value="32" />
                                <rd:Setter TargetName="Image" Property="windows:FrameworkElement.Width" Value="32" />
                                <rd:Setter TargetName="Grid" Property="windows:FrameworkElement.MinHeight" Value="26" />
                                <rd:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="True" />
                            </rd:DataTrigger>
                            <rd:DataTrigger Value="Small" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                                <rd:Setter Value="{StaticResource Ć}" Property="windows:FrameworkElement.Height" />
                                <rd:Setter TargetName="Image" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallImageSource}" Property="Image.Source" />
                                <rd:Setter TargetName="Image" Property="windows:FrameworkElement.Height" Value="16" />
                                <rd:Setter TargetName="Image" Property="windows:FrameworkElement.Width" Value="16" />
                                <rd:Setter TargetName="Image" Property="windows:FrameworkElement.HorizontalAlignment" Value="Left" />
                                <rd:Setter TargetName="Image" Property="windows:FrameworkElement.Margin" Value="2,0,1,0" />
                                <rd:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.Margin" Value="2,0,1,0" />
                                <rd:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="False" />
                                <rd:Setter TargetName="Image" Property="Grid.Column" Value="0" />
                                <rd:Setter TargetName="Image" Property="Grid.Row" Value="1" />
                                <rd:Setter TargetName="InnerGrid" Property="windows:FrameworkElement.Margin" Value="0" />
                            </rd:DataTrigger>
                            <rd:DataTrigger Value="Collapsed" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                                <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                            </rd:DataTrigger>
                            <rd:DataTrigger Value="False" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}">
                                <rd:Setter TargetName="TwoLineTextPanel" Property="UIElement.Visibility" Value="Collapsed" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:Trigger Property="ribbon:RibbonTextBox.ShowKeyboardCues" Value="True">
                                <rd:Setter TargetName="FocusVisual" Property="UIElement.Visibility" Value="Visible" />
                            </rd:Trigger>
                            <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                                <rd:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5" />
                                <rd:Setter TargetName="Border" Value="{StaticResource ć}" Property="Border.Background" />
                                <rd:Setter TargetName="Border" Value="{StaticResource Ĉ}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MainBorder" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                            </rd:Trigger>
                            <rd:Trigger Property="ribbon:RibbonTextBox.IsInControlGroup" Value="True">
                                <rd:Setter TargetName="MainBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MainBorder" Property="Border.BorderThickness" Value="0,0,1,0" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter Value="{windows:DynamicResource {x:Static SystemColors.WindowBrushKey}}" Property="Control.Background" />
                                <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="Border" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="FocusVisual" Value="{windows:DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Property="Shape.Stroke" />
                                <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInControlGroup}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Style.Resources>
                <rd:Style TargetType="{x:Type ScrollViewer}">
                    <rd:Setter Property="ContentControl.ContentTemplate">
                        <rd:Setter.Value>
                            <rd:DataTemplate>
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                        <Rectangle Name="OpaqueRect" Height="{Binding ElementName=PART_ContentHost, Path=ActualHeight}" Width="{Binding ElementName=PART_ContentHost, Path=ActualWidth}" Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:Ribbon}}, Path=Background}" />
                                        <Rectangle Name="OverlayRect" Height="{Binding ElementName=PART_ContentHost, Path=ActualHeight}" Width="{Binding ElementName=PART_ContentHost, Path=ActualWidth}" Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonTextBox}}, Path=Background}" />
                                    </Canvas>
                                    <ContentPresenter Content="{Binding}" />
                                </Grid>
                                <rd:DataTemplate.Triggers>
                                    <rd:DataTrigger Value="false" Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollViewer}}, Path=(ScrollViewer.CanContentScroll)}">
                                        <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                        <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                                        <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                        <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                                    </rd:DataTrigger>
                                    <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                        <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                                    </rd:DataTrigger>
                                </rd:DataTemplate.Triggers>
                            </rd:DataTemplate>
                        </rd:Setter.Value>
                    </rd:Setter>
                </rd:Style>
            </rd:Style.Resources>
        </rd:Style>
        <LinearGradientBrush x:Key="Ê" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="#CAFFFFFF" Offset="0" />
                <GradientStop Color="#20FFFFFF" Offset="1" />
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <rd:Style x:Key="{x:Type ribbon:RibbonToolTip}" TargetType="{x:Type ribbon:RibbonToolTip}">
            <rd:Setter Property="Control.Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.Background}" />
            <rd:Setter Property="Control.BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="Control.FontSize" Value="{windows:DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}" />
            <rd:Setter Property="Control.FontStyle" Value="{windows:DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}" />
            <rd:Setter Property="Control.FontWeight" Value="{windows:DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}" />
            <rd:Setter Property="Control.FontFamily" Value="{windows:DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}" />
            <rd:Setter Property="Control.Foreground" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <rd:Setter Property="ToolTip.HasDropShadow" Value="{windows:DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
            <rd:Setter Property="Control.HorizontalContentAlignment" Value="Left" />
            <rd:Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <rd:Setter Property="Control.Padding" Value="5,5,5,4" />
            <rd:Setter Property="ToolTip.Placement" Value="Mouse" />
            <rd:Setter Property="windows:FrameworkElement.Width" Value="318" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonToolTip}">
                        <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" SnapsToDevicePixels="True" CornerRadius="2" RenderOptions.ClearTypeHint="Enabled">
                            <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" MinHeight="50" CornerRadius="2">
                                <Border Name="InnerBorder" Background="{StaticResource Ê}" BorderThickness="0" BorderBrush="#00FFFFFF" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="{TemplateBinding Control.Padding}" CornerRadius="2">
                                    <StackPanel>
                                        <Grid Name="Header">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <TextBlock Name="Title" Text="{TemplateBinding ribbon:RibbonToolTip.Title}" TextBlock.FontWeight="Bold" TextWrapping="Wrap" Grid.ColumnSpan="2" />
                                            <Image Name="Image" Margin="7,9,6,4" Source="{TemplateBinding ribbon:RibbonToolTip.ImageSource}" Grid.Row="1" Stretch="None" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" />
                                            <TextBlock Name="Description" Margin="8,8,0,0" Text="{TemplateBinding ribbon:RibbonToolTip.Description}" Grid.Row="1" Grid.Column="1" TextWrapping="Wrap" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" />
                                        </Grid>
                                        <rcp:RibbonSeparator x:Name="Separator" Margin="0,6,0,0" BorderBrush="{TemplateBinding Control.BorderBrush}" Visibility="Collapsed" />
                                        <Grid Name="Footer" Margin="0,4,0,0" Visibility="Collapsed">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <Image Name="FooterImage" Margin="0,0,7,0" Stretch="None" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Source="{TemplateBinding ribbon:RibbonToolTip.FooterImageSource}" />
                                            <TextBlock Name="FooterTitle" Text="{TemplateBinding ribbon:RibbonToolTip.FooterTitle}" TextBlock.FontWeight="Bold" TextWrapping="Wrap" Grid.Column="1" />
                                            <TextBlock Name="FooterDescription" Margin="0,0,6,0" Text="{TemplateBinding ribbon:RibbonToolTip.FooterDescription}" TextWrapping="Wrap" Grid.Column="1" Grid.Row="1" />
                                        </Grid>
                                    </StackPanel>
                                </Border>
                            </Border>
                        </sdsc:SystemDropShadowChrome>
                        <ControlTemplate.Triggers>
                            <rd:Trigger Property="ribbon:RibbonToolTip.HasHeader" Value="False">
                                <rd:Setter TargetName="Header" Property="UIElement.Visibility" Value="Collapsed" />
                            </rd:Trigger>
                            <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonToolTip.ImageSource">
                                <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="Description" Property="Grid.Column" Value="0" />
                                <rd:Setter TargetName="Description" Property="Grid.ColumnSpan" Value="2" />
                                <rd:Setter Property="windows:FrameworkElement.Width" Value="210" />
                            </rd:Trigger>
                            <rd:Trigger Property="ribbon:RibbonToolTip.HasFooter" Value="True">
                                <rd:Setter TargetName="Separator" Property="UIElement.Visibility" Value="Visible" />
                                <rd:Setter TargetName="Footer" Property="UIElement.Visibility" Value="Visible" />
                            </rd:Trigger>
                            <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonToolTip.FooterDescription">
                                <rd:Setter TargetName="FooterDescription" Property="UIElement.Visibility" Value="Collapsed" />
                            </rd:Trigger>
                            <rd:Trigger Property="ToolTip.HasDropShadow" Value="True">
                                <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                                <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.InfoBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.InfoTextBrushKey}}" Property="TextElement.Foreground" />
                                <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.InfoTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                            </rd:DataTrigger>
                            <rd:Trigger Property="ribbon:RibbonToolTip.IsPlacementTargetInRibbonGroup" Value="True">
                                <rd:Setter Property="ToolTip.Placement" Value="Custom" />
                            </rd:Trigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Value="{x:Null}" Property="ribbon:RibbonToolTip.ImageSource" />
                                    <rd:Condition Value="{x:Null}" Property="ribbon:RibbonToolTip.Description" />
                                    <rd:Condition Property="ribbon:RibbonToolTip.HasFooter" Value="False" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="Border" Property="windows:FrameworkElement.MinHeight" Value="0" />
                                <rd:Setter TargetName="Title" Property="TextBlock.FontWeight" Value="Normal" />
                                <rd:Setter TargetName="Description" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter Property="windows:FrameworkElement.Width" Value="Auto" />
                            </rd:MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <rd:Style x:Key="{x:Type ribbon:RibbonTwoLineText}" TargetType="{x:Type ribbon:RibbonTwoLineText}">
            <rd:Setter Property="windows:FrameworkElement.VerticalAlignment" Value="Center" />
            <rd:Setter Property="windows:FrameworkElement.HorizontalAlignment" Value="Center" />
            <rd:Setter Property="Control.Background" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonTwoLineText}">
                        <Grid SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock Name="PART_TextBlock1" TextBlock.BaselineOffset="{TemplateBinding ribbon:RibbonTwoLineText.BaselineOffset}" TextBlock.LineHeight="{TemplateBinding ribbon:RibbonTwoLineText.LineHeight}" TextBlock.LineStackingStrategy="{TemplateBinding ribbon:RibbonTwoLineText.LineStackingStrategy}" Padding="{TemplateBinding ribbon:RibbonTwoLineText.Padding}" TextBlock.TextAlignment="{TemplateBinding ribbon:RibbonTwoLineText.TextAlignment}" TextDecorations="{TemplateBinding ribbon:RibbonTwoLineText.TextDecorations}" TextEffects="{TemplateBinding ribbon:RibbonTwoLineText.TextEffects}" TextTrimming="None" TextWrapping="NoWrap" VerticalAlignment="{TemplateBinding windows:FrameworkElement.VerticalAlignment}" Grid.Row="0" />
                            <DockPanel Grid.Row="1" HorizontalAlignment="{TemplateBinding windows:FrameworkElement.HorizontalAlignment}">
                                <Grid Name="pathGrid" MinHeight="{TemplateBinding ribbon:RibbonTwoLineText.LineHeight}" Margin="2,0,0,0" DockPanel.Dock="Right">
                                    <Path Name="PART_Path" VerticalAlignment="Center" Data="{TemplateBinding ribbon:RibbonTwoLineText.PathData}" Fill="{TemplateBinding ribbon:RibbonTwoLineText.PathFill}" Stroke="{TemplateBinding ribbon:RibbonTwoLineText.PathStroke}" />
                                </Grid>
                                <TextBlock Name="PART_TextBlock2" Margin="0,0,2,0" TextBlock.BaselineOffset="{TemplateBinding ribbon:RibbonTwoLineText.BaselineOffset}" TextBlock.LineHeight="{TemplateBinding ribbon:RibbonTwoLineText.LineHeight}" TextBlock.LineStackingStrategy="{TemplateBinding ribbon:RibbonTwoLineText.LineStackingStrategy}" Padding="{TemplateBinding ribbon:RibbonTwoLineText.Padding}" TextBlock.TextAlignment="{TemplateBinding ribbon:RibbonTwoLineText.TextAlignment}" TextDecorations="{TemplateBinding ribbon:RibbonTwoLineText.TextDecorations}" TextEffects="{TemplateBinding ribbon:RibbonTwoLineText.TextEffects}" TextTrimming="{TemplateBinding ribbon:RibbonTwoLineText.TextTrimming}" TextWrapping="NoWrap" VerticalAlignment="{TemplateBinding windows:FrameworkElement.VerticalAlignment}" DockPanel.Dock="Left" />
                            </DockPanel>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonTwoLineText.PathData">
                                <rd:Setter TargetName="pathGrid" Property="UIElement.Visibility" Value="Collapsed" />
                            </rd:Trigger>
                            <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonTwoLineText.Text">
                                <rd:Setter TargetName="PART_TextBlock2" Property="windows:FrameworkElement.Margin" Value="0" />
                            </rd:Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <rd:Style x:Key="{x:Type ribbon:RibbonQuickAccessToolBar}" TargetType="{x:Type ribbon:RibbonQuickAccessToolBar}">
            <rd:Setter Property="shell:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <rd:Setter Property="windows:FrameworkElement.Height" Value="{windows:DynamicResource {x:Static SystemParameters.CaptionHeightKey}}" />
            <rd:Setter Property="windows:FrameworkElement.Margin" Value="3,-0.5,3,-1.4" />
            <rd:Setter Property="Control.Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.Background}" />
            <rd:Setter Property="Control.BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonQuickAccessToolBar}">
                        <Grid SnapsToDevicePixels="True" Margin="{TemplateBinding windows:FrameworkElement.Margin}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="1" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.Effect>
                                <DropShadowEffect Color="White" BlurRadius="15.0" ShadowDepth="0" />
                            </Grid.Effect>
                            <rsbvc:RibbonQuickAccessToolBarPanel x:Name="PART_MainPanel" IsItemsHost="True" Grid.Column="0" />
                            <ContentPresenter Name="MainCustomizeMenuHost" Grid.Column="2" Content="{Binding Path=CustomizeMenuButton, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Grid Name="OverflowButtonHost" Grid.Column="2" Visibility="Collapsed">
                                <rcp:RibbonToggleButton x:Name="PART_OverflowButton" Style="{StaticResource {x:Type ribbon:RibbonToggleButton}}" Width="12" ClickMode="Press" KeyTip="00" IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <rcp:RibbonToggleButton.ControlSizeDefinition>
                                        <rcp:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="True" />
                                    </rcp:RibbonToggleButton.ControlSizeDefinition>
                                </rcp:RibbonToggleButton>
                                <Path HorizontalAlignment="Center" VerticalAlignment="Center" Margin="1,0,0,0" IsHitTestVisible="False" Width="7" Height="5" Fill="{TemplateBinding Control.Foreground}" Stretch="Fill" Stroke="{TemplateBinding Control.Foreground}" Data="M0,0L2,2 0,4 M4,0L6,2 4,4" />
                                <Popup Name="PART_OverflowPopup" AllowsTransparency="True" Placement="Bottom" Focusable="False" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                    <sdsc:SystemDropShadowChrome Name="Shdw" Color="Transparent" Focusable="True" RenderOptions.ClearTypeHint="Enabled" FocusVisualStyle="{x:Null}">
                                        <Border Name="PopupBorder" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="2" BorderThickness="1" Padding="2">
                                            <DockPanel>
                                                <rsbvc:RibbonQuickAccessToolBarOverflowPanel x:Name="PART_OverflowPanel" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                <ContentPresenter Name="OverflowCustomizeMenuHost" DockPanel.Dock="Right" />
                                            </DockPanel>
                                        </Border>
                                    </sdsc:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <rd:DataTrigger Value="false" Binding="{Binding RelativeSource={RelativeSource AncestorType=ribbon:Ribbon}, Path=ShowQuickAccessToolBarOnTop}">
                                <rd:Setter TargetName="PART_MainPanel" Property="windows:FrameworkElement.Margin" Value="2,0,2,0" />
                            </rd:DataTrigger>
                            <rd:Trigger Property="ribbon:RibbonQuickAccessToolBar.HasOverflowItems" Value="True">
                                <rd:Setter TargetName="OverflowButtonHost" Property="UIElement.Visibility" Value="Visible" />
                                <rd:Setter TargetName="MainCustomizeMenuHost" Value="{x:Null}" Property="ContentPresenter.Content" />
                                <rd:Setter TargetName="OverflowCustomizeMenuHost" Value="{Binding Path=CustomizeMenuButton, RelativeSource={RelativeSource TemplatedParent}}" Property="ContentPresenter.Content" />
                            </rd:Trigger>
                            <rd:Trigger SourceName="PART_OverflowPopup" Property="Popup.IsOpen" Value="False">
                                <rd:Setter TargetName="PART_OverflowPopup" Property="Popup.PopupAnimation" Value="None" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="PART_OverflowPopup" Property="Popup.PopupAnimation" Value="None" />
                                <rd:Setter TargetName="PopupBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="PopupBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="PopupBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="Shdw" Property="classic:SystemDropShadowChrome.CornerRadius" Value="0" />
                            </rd:DataTrigger>
                            <rd:Trigger SourceName="PART_OverflowPopup" Property="Popup.HasDropShadow" Value="True">
                                <rd:Setter TargetName="Shdw" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                                <rd:Setter TargetName="Shdw" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                            </rd:Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Style.Triggers>
                <rd:DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
                    <rd:Setter Property="windows:FrameworkElement.Margin" Value="4,0,6,0" />
                </rd:DataTrigger>
            </rd:Style.Triggers>
        </rd:Style>
        <wc:WindowChrome x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=WindowChromeGeneric}" />
        <wc:WindowChrome x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=WindowChromeAeroLiteWithGlass}" NonClientFrameEdges="Bottom" />
        <wc:WindowChrome x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=WindowChromeAeroLiteBasic}" />
        <wc:WindowChrome x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=WindowChromeAeroWithGlass}" NonClientFrameEdges="Bottom" />
        <wc:WindowChrome x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=WindowChromeAeroBasic}" CornerRadius="9,9,0,0" />
        <LinearGradientBrush x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=ActiveCaptionGradient}" EndPoint="0,0" StartPoint="1,0">
            <GradientStop Color="{windows:DynamicResource {x:Static SystemColors.GradientActiveCaptionColorKey}}" Offset="0" />
            <GradientStop Color="{windows:DynamicResource {x:Static SystemColors.ActiveCaptionColorKey}}" Offset="1" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=InactiveCaptionGradient}" EndPoint="0,0" StartPoint="1,0">
            <GradientStop Color="{windows:DynamicResource {x:Static SystemColors.GradientInactiveCaptionColorKey}}" Offset="0" />
            <GradientStop Color="{windows:DynamicResource {x:Static SystemColors.InactiveCaptionColorKey}}" Offset="1" />
        </LinearGradientBrush>
        <rsbvc:RibbonWindowSmallIconConverter x:Key="İ" />
        <rd:Style x:Key="{windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=RibbonWindowStyle}" TargetType="{x:Type ribbon:RibbonWindow}">
            <rd:Setter Property="shell:WindowChrome.WindowChrome" Value="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=WindowChromeGeneric}}" />
            <rd:Setter Property="Control.Background" Value="{windows:DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <rd:Setter Property="Control.BorderBrush" Value="{x:Null}" />
            <rd:Setter Property="Control.BorderThickness" Value="0" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonWindow}">
                        <ControlTemplate.Resources>
                            <rd:Style TargetType="{x:Type Button}" x:Key="ı">
                                <rd:Setter Property="Control.Template">
                                    <rd:Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid Background="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                                                <Border Name="OuterTopLeftBorder" BorderThickness="1,1,0,0" BorderBrush="{windows:DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                                                <Border Name="OuterBottomRightBorder" BorderThickness="0,0,1,1" BorderBrush="{windows:DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                                                <Border Name="InnerTopLeftBorder" BorderThickness="1,1,0,0" Margin="1" BorderBrush="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                                                <Border Name="InnerBottomRightBorder" BorderThickness="0,0,1,1" Margin="1" BorderBrush="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <rd:Trigger Property="ButtonBase.IsPressed" Value="True">
                                                    <rd:Setter TargetName="OuterTopLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Property="Border.BorderBrush" />
                                                    <rd:Setter TargetName="OuterBottomRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Property="Border.BorderBrush" />
                                                    <rd:Setter TargetName="InnerTopLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                                                    <rd:Setter TargetName="InnerBottomRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Border.BorderBrush" />
                                                </rd:Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </rd:Setter.Value>
                                </rd:Setter>
                            </rd:Style>
                        </ControlTemplate.Resources>
                        <Grid>
                            <Border Name="NonClientAreaBorder" BorderBrush="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" BorderThickness="{Binding Path=(SystemParameters.WindowNonClientFrameThickness)}">
                                <Border Name="PART_ClientAreaBorder" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" />
                            </Border>
                            <Border BorderThickness="1,1,0,0" BorderBrush="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                            <Border BorderThickness="0,0,1,1" BorderBrush="{windows:DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            <Border Name="WindowHighlightBorder" BorderThickness="1,1,0,0" Margin="1" BorderBrush="{windows:DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            <Border Name="WindowShadowBorder" BorderThickness="0,0,1,1" Margin="1" BorderBrush="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                            <Border Name="MiddleBorder" BorderThickness="1" Margin="2" BorderBrush="{windows:DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
                            <Grid Name="ButtonPanel" VerticalAlignment="Top" Margin="{Binding Path=(shell:WindowChrome.WindowChrome).ResizeBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=(shell:WindowChrome.WindowChrome).CaptionHeight, RelativeSource={RelativeSource TemplatedParent}}" Background="{windows:DynamicResource {windows:ComponentResourceKey ResourceId=ActiveCaptionGradient, TypeInTargetAssembly={x:Type ribbon:Ribbon}}}">
                                <Image Name="PART_Icon" wc:WindowChrome.IsHitTestVisibleInChrome="True" Margin="3,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon, Converter={StaticResource İ}}" Width="{Binding Path=(SystemParameters.SmallIconWidth)}" Height="{Binding Path=(SystemParameters.SmallIconHeight)}" />
                                <Grid HorizontalAlignment="Right" Height="{Binding Path=(SystemParameters.WindowCaptionButtonHeight)}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="{Binding Path=(SystemParameters.WindowCaptionButtonWidth)}" />
                                        <ColumnDefinition Width="{Binding Path=(SystemParameters.WindowCaptionButtonWidth)}" />
                                        <ColumnDefinition Width="2" />
                                        <ColumnDefinition Width="{Binding Path=(SystemParameters.WindowCaptionButtonWidth)}" />
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.Column="0" Margin="4,2,-4,3" Padding="0,0,2,0">
                                        <Button Name="PART_MinimizeWindowButton" wc:WindowChrome.IsHitTestVisibleInChrome="True" Command="windows:SystemCommands.MinimizeWindowCommand" Focusable="False" Style="{StaticResource ı}">
                                            <Path Name="MinimizeWindowButtonGlyph" Stroke="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" StrokeThickness="2">
                                                <Path.Data>
                                                    <PathGeometry>
                                                        <PathFigure StartPoint="0,6">
                                                            <LineSegment Point="6,6" />
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </Path.Data>
                                            </Path>
                                        </Button>
                                    </Border>
                                    <Border Grid.Column="1" Margin="2,2,-2,3" Padding="0,0,2,0">
                                        <Grid>
                                            <Button Name="PART_RestoreWindowButton" wc:WindowChrome.IsHitTestVisibleInChrome="True" Command="windows:SystemCommands.RestoreWindowCommand" Focusable="False" Style="{StaticResource ı}" Visibility="Collapsed">
                                                <Path Name="RestoreWindowButtonGlyph" Stroke="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" StrokeThickness="1">
                                                    <Path.Data>
                                                        <PathGeometry>
                                                            <PathFigure StartPoint="0,3" IsClosed="False">
                                                                <LineSegment Point="0,8" />
                                                                <LineSegment Point="5,8" />
                                                                <LineSegment Point="5,3" />
                                                                <LineSegment Point="0,3" />
                                                                <LineSegment Point="0,4" />
                                                                <LineSegment Point="5,4" />
                                                                <LineSegment Point="5,5" />
                                                                <LineSegment Point="7,5" />
                                                                <LineSegment Point="7,0" />
                                                                <LineSegment Point="2,0" />
                                                                <LineSegment Point="2,1" />
                                                                <LineSegment Point="7,1" />
                                                            </PathFigure>
                                                            <PathFigure StartPoint="2,1" IsClosed="False">
                                                                <LineSegment Point="2,3" />
                                                            </PathFigure>
                                                        </PathGeometry>
                                                    </Path.Data>
                                                </Path>
                                            </Button>
                                            <Button Name="PART_MaximizeWindowButton" wc:WindowChrome.IsHitTestVisibleInChrome="True" Command="windows:SystemCommands.MaximizeWindowCommand" Focusable="False" Style="{StaticResource ı}">
                                                <Path Name="MaximizeWindowButtonGlyph" Stroke="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" StrokeThickness="1">
                                                    <Path.Data>
                                                        <PathGeometry>
                                                            <PathFigure StartPoint="0,0" IsClosed="False">
                                                                <LineSegment Point="0,8" />
                                                                <LineSegment Point="8,8" />
                                                                <LineSegment Point="8,0" />
                                                                <LineSegment Point="0,0" />
                                                            </PathFigure>
                                                            <PathFigure StartPoint="0.5,1">
                                                                <LineSegment Point="7.5,1" />
                                                            </PathFigure>
                                                        </PathGeometry>
                                                    </Path.Data>
                                                </Path>
                                            </Button>
                                        </Grid>
                                    </Border>
                                    <Border Grid.Column="3" Margin="0,2,0,3" Padding="0,0,2,0">
                                        <Button Name="PART_CloseWindowButton" wc:WindowChrome.IsHitTestVisibleInChrome="True" Command="windows:SystemCommands.CloseWindowCommand" Focusable="False" Style="{StaticResource ı}">
                                            <Path Name="CloseWindowButtonGlyph" Stroke="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" StrokeThickness="1.5">
                                                <Path.Data>
                                                    <PathGeometry>
                                                        <PathFigure StartPoint="0,0">
                                                            <LineSegment Point="8,7" />
                                                        </PathFigure>
                                                        <PathFigure StartPoint="8,0">
                                                            <LineSegment Point="0,7" />
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </Path.Data>
                                            </Path>
                                        </Button>
                                    </Border>
                                </Grid>
                            </Grid>
                            <Border BorderThickness="{Binding Path=(shell:WindowChrome.WindowChrome).ResizeBorderThickness, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid>
                                    <AdornerDecorator>
                                        <ContentPresenter Name="PART_RootContentPresenter" />
                                    </AdornerDecorator>
                                    <ResizeGrip Name="WindowResizeGrip" wc:WindowChrome.ResizeGripDirection="BottomRight" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed" IsTabStop="False" />
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <rd:Trigger Property="windows:Window.IsActive" Value="False">
                                <rd:Setter TargetName="ButtonPanel" Value="{windows:DynamicResource {windows:ComponentResourceKey ResourceId=InactiveCaptionGradient, TypeInTargetAssembly={x:Type ribbon:Ribbon}}}" Property="Panel.Background" />
                                <rd:Setter TargetName="MiddleBorder" Value="{windows:DynamicResource {x:Static SystemColors.InactiveBorderBrushKey}}" Property="Border.BorderBrush" />
                            </rd:Trigger>
                            <rd:Trigger Property="windows:Window.WindowState" Value="Maximized">
                                <rd:Setter TargetName="PART_MaximizeWindowButton" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="PART_RestoreWindowButton" Property="UIElement.Visibility" Value="Visible" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="PART_MinimizeWindowButton" Property="windows:FrameworkElement.Width" Value="18" />
                                <rd:Setter TargetName="PART_MaximizeWindowButton" Property="windows:FrameworkElement.Width" Value="18" />
                                <rd:Setter TargetName="PART_RestoreWindowButton" Property="windows:FrameworkElement.Width" Value="18" />
                                <rd:Setter TargetName="PART_CloseWindowButton" Property="windows:FrameworkElement.Width" Value="18" />
                            </rd:DataTrigger>
                            <rd:Trigger Value="{x:Null}" Property="windows:Window.Icon">
                                <rd:Setter TargetName="PART_Icon" Property="Image.Source" Value="/System.Windows.Controls.Ribbon;component/Images/DefaultSystemIcon.png" />
                            </rd:Trigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="windows:Window.ResizeMode" Value="CanResizeWithGrip" />
                                    <rd:Condition Property="windows:Window.WindowState" Value="Normal" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="WindowResizeGrip" Property="UIElement.Visibility" Value="Visible" />
                            </rd:MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <SolidColorBrush x:Key="Ø" Color="#60FFFFFF" />
        <SolidColorBrush x:Key="È" Color="#DFE9F5" />
        <SolidColorBrush x:Key="É" Color="#B9C9DA" />
        <LinearGradientBrush x:Key="Ù" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
            <GradientStop Color="#EEFFFFFF" Offset="0.0" />
            <GradientStop Color="#BBFFFFFF" Offset="0.1" />
            <GradientStop Color="#05FFFFFF" Offset="0.5" />
            <GradientStop Color="#20FFFFFF" Offset="1.0" />
        </LinearGradientBrush>
        <rd:Style x:Key="{x:Type ribbon:Ribbon}" TargetType="{x:Type ribbon:Ribbon}">
            <rd:Style.Resources>
                <PopupAnimation>Fade</PopupAnimation>
            </rd:Style.Resources>
            <rd:Setter Property="Control.HorizontalContentAlignment" Value="Left" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="Control.Background" Value="{StaticResource È}" />
            <rd:Setter Property="Control.BorderBrush" Value="{StaticResource É}" />
            <rd:Setter Property="ribbon:Ribbon.MouseOverBorderBrush" Value="{StaticResource Ú}" />
            <rd:Setter Property="ribbon:Ribbon.MouseOverBackground" Value="{StaticResource Û}" />
            <rd:Setter Property="ribbon:Ribbon.PressedBorderBrush" Value="{StaticResource Ü}" />
            <rd:Setter Property="ribbon:Ribbon.PressedBackground" Value="{StaticResource Ý}" />
            <rd:Setter Property="ribbon:Ribbon.CheckedBorderBrush" Value="{StaticResource Ü}" />
            <rd:Setter Property="ribbon:Ribbon.CheckedBackground" Value="{StaticResource Þ}" />
            <rd:Setter Property="ribbon:Ribbon.FocusedBorderBrush" Value="{StaticResource Ú}" />
            <rd:Setter Property="ribbon:Ribbon.FocusedBackground" Value="{StaticResource Û}" />
            <rd:Setter Property="Control.FontSize" Value="{windows:DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
            <rd:Setter Property="Control.FontStyle" Value="{windows:DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
            <rd:Setter Property="Control.FontWeight" Value="{windows:DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
            <rd:Setter Property="Control.FontFamily" Value="{windows:DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
            <rd:Setter Property="Control.Foreground" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:Ribbon}">
                        <Grid SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border Name="BackgroundBorder" Grid.Row="1" Grid.ColumnSpan="3" Grid.RowSpan="3" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" />
                            <Border Grid.ColumnSpan="3" Grid.Row="1">
                                <Popup Name="PART_ITEMSPRESENTERPOPUP" AllowsTransparency="True" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                    <sdsc:SystemDropShadowChrome Name="Shdw" Focusable="True" Color="Transparent" Margin="0,0,5,5" RenderOptions.ClearTypeHint="Enabled" FocusVisualStyle="{x:Null}">
                                        <Border Name="CollapsedPopupBackgroundBorder" Background="{TemplateBinding Control.Background}">
                                            <ContentControl Name="popupItemsPresenterHost" Margin="0,1,0,0" Focusable="False" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </Border>
                                    </sdsc:SystemDropShadowChrome>
                                </Popup>
                            </Border>
                            <ContentControl Name="mainItemsPresenterHost" Grid.ColumnSpan="3" Grid.Row="2" Focusable="False">
                                <Border Name="groupsBorder" Background="{StaticResource Ù}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1,0,1,1" Height="{StaticResource ß}" SnapsToDevicePixels="True">
                                    <Border BorderThickness="0,0,0,1" Margin="0,0,0,1" BorderBrush="{StaticResource Ø}" SnapsToDevicePixels="True">
                                        <ItemsPresenter Name="ItemsPresenter" />
                                    </Border>
                                </Border>
                            </ContentControl>
                            <Border Name="QatBottomHost" Grid.Row="3" Grid.ColumnSpan="3" BorderBrush="{TemplateBinding Control.BorderBrush}">
                                <ContentPresenter Name="QatBottomHostContentPresenter" HorizontalAlignment="Left" VerticalAlignment="Center" IsHitTestVisible="True" />
                            </Border>
                            <Border Name="titleBarBackground" Grid.ColumnSpan="3" Background="{StaticResource Ù}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0,0,0,1" Visibility="Collapsed" />
                            <DockPanel Grid.Column="0" Grid.ColumnSpan="3" LastChildFill="True" Height="{Binding Path=(SystemParameters.WindowCaptionHeight)}">
                                <ContentControl Name="windowButtonPlaceHolder" IsHitTestVisible="False" DockPanel.Dock="Right" Focusable="False" Margin="3,0,0,0" Width="{Binding Path=(SystemParameters.WindowCaptionButtonWidth)}" Visibility="{windows:TemplateBinding IsHostedInRibbonWindow, Converter={StaticResource à}}" />
                                <ContentControl Name="windowIconPadding" Margin="0,0,3,0" IsHitTestVisible="False" DockPanel.Dock="Left" Focusable="False" Width="{Binding Path=(SystemParameters.SmallIconWidth)}" />
                                <rsbvc:RibbonTitlePanel x:Name="PART_TitlePanel">
                                    <Grid Name="QatTopHost">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Border Name="QatTopHostLeftBorder" Grid.Column="0" Margin="8,2,0,2" Width="3" Background="#77222222" BorderBrush="#66CCCCCC" BorderThickness="1,0,1,0.9" CornerRadius="0,0,2,2" />
                                        <ContentPresenter Name="QatTopHostContentPresenter" Grid.Column="1" Content="{TemplateBinding ribbon:Ribbon.QuickAccessToolBar}" IsHitTestVisible="True" />
                                        <Border Name="QatTopHostRightBorder" Grid.Column="2" Margin="0,2,1,2" Width="3" Background="#77222222" BorderBrush="#66CCCCCC" BorderThickness="1,0,1,0.9" CornerRadius="0,0,2,2" />
                                    </Grid>
                                    <ContentPresenter Name="PART_TitleHost" ContentSource="Title" ContentTemplate="{TemplateBinding ribbon:Ribbon.TitleTemplate}" TextBlock.FontSize="{windows:DynamicResource {x:Static SystemFonts.CaptionFontSizeKey}}" TextBlock.FontFamily="{windows:DynamicResource {x:Static SystemFonts.CaptionFontFamilyKey}}" TextBlock.FontWeight="{windows:DynamicResource {x:Static SystemFonts.CaptionFontWeightKey}}" TextElement.Foreground="{windows:DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="3,0" MinWidth="75" IsHitTestVisible="False" MinHeight="{Binding Path=(SystemParameters.WindowCaptionHeight)}">
                                        <ContentPresenter.Resources>
                                            <rd:DataTemplate DataType="{x:Type system:String}">
                                                <rd:DataTemplateKey.Key>{x:Type system:String}</rd:DataTemplateKey.Key>
                                                <TextBlock Name="titleTextBlock" Margin="0,-2,0,0" Text="{TemplateBinding ContentPresenter.Content}" TextTrimming="CharacterEllipsis" HorizontalAlignment="{TemplateBinding windows:FrameworkElement.HorizontalAlignment}" />
                                                <rd:DataTemplate.Triggers>
                                                    <rd:MultiDataTrigger>
                                                        <rd:MultiDataTrigger.Conditions>
                                                            <rd:Condition Binding="{Binding Path=(SystemParameters.IsGlassEnabled)}" Value="True" />
                                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ribbon:Ribbon}, Path=IsHostedInRibbonWindow}" Value="True" />
                                                        </rd:MultiDataTrigger.Conditions>
                                                        <rd:Setter TargetName="titleTextBlock" Property="UIElement.Effect">
                                                            <rd:Setter.Value>
                                                                <DropShadowEffect Color="White" BlurRadius="5.0" ShadowDepth="0" />
                                                            </rd:Setter.Value>
                                                        </rd:Setter>
                                                    </rd:MultiDataTrigger>
                                                    <rd:DataTrigger Value="False" Binding="{Binding Path=(SystemParameters.IsGlassEnabled)}">
                                                        <rd:Setter TargetName="titleTextBlock" Property="windows:FrameworkElement.Margin" Value="0" />
                                                        <rd:Setter TargetName="titleTextBlock" Property="windows:FrameworkElement.VerticalAlignment" Value="Center" />
                                                    </rd:DataTrigger>
                                                    <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                                        <rd:Setter TargetName="titleTextBlock" Property="windows:FrameworkElement.Margin" Value="0,1,0,0" />
                                                    </rd:DataTrigger>
                                                    <rd:MultiDataTrigger>
                                                        <rd:MultiDataTrigger.Conditions>
                                                            <rd:Condition Binding="{Binding Path=(SystemParameters.UxThemeName)}" Value="AeroLite" />
                                                            <rd:Condition Binding="{Binding Path=(SystemParameters.IsGlassEnabled)}" Value="False" />
                                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ribbon:Ribbon}, Path=IsHostedInRibbonWindow}" Value="True" />
                                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ribbon:RibbonWindow}, Path=WindowState}" Value="Normal" />
                                                        </rd:MultiDataTrigger.Conditions>
                                                        <rd:Setter TargetName="titleTextBlock" Property="windows:FrameworkElement.Margin" Value="0,0,0,7" />
                                                    </rd:MultiDataTrigger>
                                                </rd:DataTemplate.Triggers>
                                            </rd:DataTemplate>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                    <rcp:RibbonContextualTabGroupItemsControl x:Name="PART_ContextualTabGroupItemsControl" IsHitTestVisible="True" wc:WindowChrome.IsHitTestVisibleInChrome="True" HorizontalAlignment="Center" />
                                </rsbvc:RibbonTitlePanel>
                            </DockPanel>
                            <ContentPresenter Name="applicationMenu" Grid.Row="1" Content="{TemplateBinding ribbon:Ribbon.ApplicationMenu}" VerticalAlignment="Top" />
                            <rcp:RibbonTabHeaderItemsControl x:Name="TabHeaderItemsControl" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Row="1" Grid.Column="1" Margin="1,1,1,0" />
                            <ContentPresenter Name="PART_HelpPane" ContentSource="HelpPaneContent" ContentTemplate="{TemplateBinding ribbon:Ribbon.HelpPaneContentTemplate}" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <rd:Trigger Property="ribbon:Ribbon.IsCollapsed" Value="True">
                                <rd:Setter TargetName="applicationMenu" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="QatBottomHost" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="QatTopHost" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="mainItemsPresenterHost" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="TabHeaderItemsControl" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="PART_HelpPane" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="PART_ContextualTabGroupItemsControl" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="PART_TitleHost" Property="windows:FrameworkElement.MinWidth" Value="0" />
                            </rd:Trigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:Ribbon.IsCollapsed" Value="True" />
                                    <rd:Condition Property="ribbon:Ribbon.IsHostedInRibbonWindow" Value="False" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter Property="UIElement.Visibility" Value="Collapsed" />
                            </rd:MultiTrigger>
                            <rd:Trigger Property="ribbon:Ribbon.ShowQuickAccessToolBarOnTop" Value="False">
                                <rd:Setter TargetName="QatTopHostContentPresenter" Value="{x:Null}" Property="ContentPresenter.Content" />
                                <rd:Setter TargetName="QatTopHost" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="QatBottomHostContentPresenter" Value="{Binding Path=QuickAccessToolBar, RelativeSource={RelativeSource TemplatedParent}}" Property="ContentPresenter.Content" />
                                <rd:Setter TargetName="BackgroundBorder" Property="Border.BorderThickness" Value="0,0,0,1" />
                            </rd:Trigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=QuickAccessToolBar.HasItems}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=QuickAccessToolBar.CustomizeMenuButton}" Value="{x:Null}" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="QatTopHost" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="QatBottomHost" Property="UIElement.Visibility" Value="Collapsed" />
                            </rd:MultiDataTrigger>
                            <rd:Trigger Property="ribbon:Ribbon.IsMinimized" Value="True">
                                <rd:Setter TargetName="mainItemsPresenterHost" Value="{x:Null}" Property="ContentControl.Content" />
                                <rd:Setter TargetName="mainItemsPresenterHost" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="popupItemsPresenterHost" Value="{Binding ElementName=groupsBorder}" Property="ContentControl.Content" />
                                <rd:Setter TargetName="BackgroundBorder" Property="Border.BorderThickness" Value="0,0,0,1" />
                            </rd:Trigger>
                            <rd:Trigger Property="ribbon:Ribbon.WindowIconVisibility" Value="Collapsed">
                                <rd:Setter TargetName="windowIconPadding" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="QatTopHostLeftBorder" Property="UIElement.Visibility" Value="Collapsed" />
                            </rd:Trigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:Ribbon.IsMinimized" Value="True" />
                                    <rd:Condition Property="ribbon:Ribbon.ShowQuickAccessToolBarOnTop" Value="False" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="QatBottomHost" Property="Border.BorderThickness" Value="0,1,0,0" />
                            </rd:MultiTrigger>
                            <rd:Trigger Property="ribbon:Ribbon.IsHostedInRibbonWindow" Value="False">
                                <rd:Setter TargetName="BackgroundBorder" Property="Grid.Row" Value="0" />
                                <rd:Setter TargetName="BackgroundBorder" Property="Grid.RowSpan" Value="4" />
                                <rd:Setter TargetName="titleBarBackground" Property="UIElement.Visibility" Value="Visible" />
                                <rd:Setter TargetName="windowIconPadding" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="QatTopHostLeftBorder" Property="UIElement.Visibility" Value="Collapsed" />
                            </rd:Trigger>
                            <rd:Trigger Property="ribbon:Ribbon.IsDropDownOpen" Value="True">
                                <rd:Setter TargetName="BackgroundBorder" Property="Border.BorderThickness" Value="0" />
                            </rd:Trigger>
                            <rd:Trigger SourceName="PART_ITEMSPRESENTERPOPUP" Property="Popup.HasDropShadow" Value="True">
                                <rd:Setter TargetName="Shdw" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                            </rd:Trigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ribbon:RibbonWindow}, Path=IsActive}" Value="False" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.IsGlassEnabled)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHostedInRibbonWindow}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_TitleHost" Value="{windows:DynamicResource {x:Static SystemColors.InactiveCaptionTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="BackgroundBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="BackgroundBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="groupsBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="groupsBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="groupsBorder" Value="{StaticResource á}" Property="windows:FrameworkElement.Height" />
                                <rd:Setter TargetName="QatBottomHost" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="titleBarBackground" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="titleBarBackground" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="CollapsedPopupBackgroundBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="PART_ITEMSPRESENTERPOPUP" Property="Popup.PopupAnimation" Value="None" />
                                <rd:Setter TargetName="QatTopHostLeftBorder" Property="windows:FrameworkElement.Margin" Value="10,1,2,2" />
                                <rd:Setter TargetName="QatTopHostLeftBorder" Property="windows:FrameworkElement.Width" Value="1" />
                                <rd:Setter TargetName="QatTopHostLeftBorder" Property="Border.BorderThickness" Value="0" />
                                <rd:Setter TargetName="QatTopHostLeftBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="QatTopHostLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="QatTopHostRightBorder" Property="windows:FrameworkElement.Margin" Value="0,1,2,2" />
                                <rd:Setter TargetName="QatTopHostRightBorder" Property="windows:FrameworkElement.Width" Value="1" />
                                <rd:Setter TargetName="QatTopHostRightBorder" Property="Border.BorderThickness" Value="0" />
                                <rd:Setter TargetName="QatTopHostRightBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="QatTopHostRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Property="Border.Background" />
                            </rd:DataTrigger>
                            <rd:DataTrigger Value="Aero" Binding="{Binding Path=(SystemParameters.UxThemeName)}">
                                <rd:Setter TargetName="QatTopHost" Property="windows:FrameworkElement.Margin" Value="0,-3,0,0" />
                                <rd:Setter TargetName="QatTopHostLeftBorder" Property="windows:FrameworkElement.Margin" Value="3,3,0,5" />
                                <rd:Setter TargetName="QatTopHostLeftBorder" Property="Border.Background" Value="#81444444" />
                                <rd:Setter TargetName="QatTopHostLeftBorder" Property="Border.BorderBrush" Value="#69EEEEEE" />
                                <rd:Setter TargetName="QatTopHostRightBorder" Property="windows:FrameworkElement.Margin" Value="0,3,1,5" />
                                <rd:Setter TargetName="QatTopHostRightBorder" Property="Border.Background" Value="#81444444" />
                                <rd:Setter TargetName="QatTopHostRightBorder" Property="Border.BorderBrush" Value="#69EEEEEE" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.UxThemeName)}" Value="Aero" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ribbon:RibbonWindow}, Path=WindowState}" Value="Maximized" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="QatTopHost" Property="windows:FrameworkElement.Margin" Value="0" />
                            </rd:MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <ControlTemplate x:Key="î" TargetType="{x:Type ribbon:RibbonApplicationMenuItem}">
            <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="2" SnapsToDevicePixels="True">
                <Grid Margin="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                        <ColumnDefinition Width="*" MinWidth="44" />
                        <ColumnDefinition Width="22" />
                    </Grid.ColumnDefinitions>
                    <Image Name="Image" Margin="6,4,6,4" Width="32" Height="32" Source="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" VerticalAlignment="Center" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                    <Border Name="CheckMarkBorder" Background="{TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}" BorderBrush="{TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}" BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1" Width="30" Height="30" CornerRadius="2">
                        <Path Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Data="{StaticResource ï}">
                            <Path.RenderTransform>
                                <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ContentPresenter Grid.Column="1" ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" />
                    <Path Name="Arrow" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" Data="{StaticResource ð}" Visibility="{windows:TemplateBinding HasItems, Converter={StaticResource à}}" />
                    <Popup Name="PART_Popup" AllowsTransparency="True" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Relative" Focusable="False" SnapsToDevicePixels="True" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                        <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p14:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" xmlns:p14="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                            <Grid>
                                <Border Name="PopupBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding Path=Ribbon.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=Ribbon.Background, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Border Name="PopupOverlayBorder" BorderBrush="{StaticResource ë}" Background="{StaticResource í}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <ScrollViewer Name="PART_SubMenuScrollViewer" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                    <Rectangle Name="OpaqueRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" Fill="{Binding ElementName=PopupBorder, Path=Background}" />
                                                    <Rectangle Name="OverlayRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" Fill="{Binding ElementName=PopupOverlayBorder, Path=Background}" />
                                                </Canvas>
                                                <ItemsPresenter Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
                                            </Grid>
                                        </ScrollViewer>
                                        <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{StaticResource Ò}" BorderThickness="0,1,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                            <Thumb Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                        </Border>
                                    </Grid>
                                </Border>
                            </Grid>
                        </sdsc:SystemDropShadowChrome>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <rd:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                </rd:Trigger>
                <rd:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="True">
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="False" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsCheckable" Value="True">
                    <rd:Setter TargetName="Arrow" Property="UIElement.Visibility" Value="Hidden" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                    <rd:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                    <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                    <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsHighlighted" Value="True">
                    <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsPressed" Value="True">
                    <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="Arrow" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="Border" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                    <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                    <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="Border" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="Border" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="Border" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="Arrow" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="Shape.Fill" />
                    <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="Shape.Fill" />
                    <rd:Setter TargetName="CheckMark" Value="{StaticResource ñ}" Property="Path.Data" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                    <rd:Setter TargetName="PopupBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="PopupBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PopupOverlayBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="PopupOverlayBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                </rd:DataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="Arrow" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Shape.Fill" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                </rd:MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ò" TargetType="{x:Type ribbon:RibbonApplicationMenuItem}">
            <Grid Name="MainGrid" SnapsToDevicePixels="True">
                <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="2">
                    <Grid Margin="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="44" SharedSizeGroup="MenuItemIconColumnGroup" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="22" />
                        </Grid.ColumnDefinitions>
                        <Image Name="Image" Margin="6,4,6,4" Width="32" Height="32" Source="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" VerticalAlignment="Center" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                        <Border Name="CheckMarkBorder" Background="{TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}" BorderBrush="{TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}" BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1" Width="30" Height="30" CornerRadius="2">
                            <Path Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Data="{StaticResource ï}">
                                <Path.RenderTransform>
                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ContentPresenter Grid.Column="1" ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" />
                        <Path Name="Arrow" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" Data="{StaticResource ð}" Visibility="{windows:TemplateBinding HasItems, Converter={StaticResource à}}" />
                    </Grid>
                </Border>
                <Popup Name="PART_Popup" AllowsTransparency="True" VerticalOffset="-1" Placement="Custom" Focusable="False" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" SnapsToDevicePixels="True" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                    <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p13:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" xmlns:p13="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                        <Grid>
                            <Border Name="PopupBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding Path=Ribbon.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=Ribbon.Background, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Border Name="PopupOverlayBorder" BorderBrush="{StaticResource ë}" Background="{StaticResource í}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ScrollViewer Name="PART_SubMenuScrollViewer" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                <Rectangle Name="OpaqueRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" Fill="{Binding ElementName=PopupBorder, Path=Background}" />
                                                <Rectangle Name="OverlayRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" Fill="{Binding ElementName=PopupOverlayBorder, Path=Background}" />
                                                <Rectangle Name="InnerOverlayRect" Fill="{StaticResource Ñ}" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" />
                                            </Canvas>
                                            <ItemsPresenter Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
                                        </Grid>
                                    </ScrollViewer>
                                    <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{StaticResource Ò}" BorderThickness="0,1,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                        <Thumb Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                    </Border>
                                </Grid>
                            </Border>
                        </Grid>
                    </sdsc:SystemDropShadowChrome>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <rd:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                    <rd:Setter TargetName="InnerOverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="InnerOverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                </rd:Trigger>
                <rd:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="True">
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="False" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.IsDropDownPositionedLeft" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource ó}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsCheckable" Value="True">
                    <rd:Setter TargetName="Arrow" Property="UIElement.Visibility" Value="Hidden" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                    <rd:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                    <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                    <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsHighlighted" Value="True">
                    <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsPressed" Value="True">
                    <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="Arrow" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="MainGrid" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                    <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="Border" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="Border" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="Border" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="Arrow" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="Shape.Fill" />
                    <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="Shape.Fill" />
                    <rd:Setter TargetName="CheckMark" Value="{StaticResource ñ}" Property="Path.Data" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                    <rd:Setter TargetName="PopupBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="PopupBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PopupOverlayBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="PopupOverlayBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                </rd:DataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="Arrow" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Shape.Fill" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                </rd:MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ô" TargetType="{x:Type ribbon:RibbonApplicationMenuItem}">
            <Grid Name="MainGrid" SnapsToDevicePixels="True">
                <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="2">
                    <Grid Margin="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="37" />
                            <ColumnDefinition Width="17" />
                        </Grid.ColumnDefinitions>
                        <Image Name="Image" Margin="1" Width="16" Height="16" Source="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" VerticalAlignment="Center" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                        <Border Name="CheckMarkBorder" Background="{TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}" BorderBrush="{TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}" BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1" Width="20" Height="20" CornerRadius="2">
                            <Path Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Data="{StaticResource ï}" />
                        </Border>
                        <ContentPresenter Grid.Column="2" ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" />
                        <Path Name="Arrow" Grid.Column="5" VerticalAlignment="Center" Margin="4,0,0,0" Fill="{TemplateBinding Control.Foreground}" Data="{StaticResource ð}" Visibility="{windows:TemplateBinding HasItems, Converter={StaticResource à}}" />
                    </Grid>
                </Border>
                <Popup Name="PART_Popup" AllowsTransparency="True" VerticalOffset="-1" Placement="Custom" Focusable="False" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" SnapsToDevicePixels="True" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                    <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p13:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" xmlns:p13="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                        <Grid>
                            <Border Name="PopupBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding Path=Ribbon.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=Ribbon.Background, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Border Name="PopupOverlayBorder" BorderBrush="{StaticResource ë}" Background="{StaticResource í}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ScrollViewer Name="PART_SubMenuScrollViewer" ScrollViewer.CanContentScroll="True" Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                <Rectangle Name="OpaqueRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" Fill="{Binding ElementName=PopupBorder, Path=Background}" />
                                                <Rectangle Name="OverlayRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" Fill="{Binding ElementName=PopupOverlayBorder, Path=Background}" />
                                                <Rectangle Name="InnerOverlayRect" Fill="{StaticResource Ñ}" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" />
                                            </Canvas>
                                            <ItemsPresenter Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
                                        </Grid>
                                    </ScrollViewer>
                                    <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{StaticResource Ò}" BorderThickness="0,1,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                        <Thumb Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                    </Border>
                                </Grid>
                            </Border>
                        </Grid>
                    </sdsc:SystemDropShadowChrome>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <rd:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                    <rd:Setter TargetName="InnerOverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="InnerOverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                </rd:Trigger>
                <rd:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="True">
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="False" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.IsDropDownPositionedLeft" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource ó}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsCheckable" Value="True">
                    <rd:Setter TargetName="Arrow" Property="UIElement.Visibility" Value="Hidden" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                    <rd:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                    <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                    <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsHighlighted" Value="True">
                    <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsPressed" Value="True">
                    <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="Arrow" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="MainGrid" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                    <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="Border" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="Border" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="Border" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="Arrow" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="Shape.Fill" />
                    <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="Shape.Fill" />
                    <rd:Setter TargetName="CheckMark" Value="{StaticResource ñ}" Property="Path.Data" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                    <rd:Setter TargetName="PopupBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="PopupBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PopupOverlayBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="PopupOverlayBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                </rd:DataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="Arrow" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Shape.Fill" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                </rd:MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <rd:Style x:Key="{x:Type ribbon:RibbonApplicationMenuItem}" TargetType="{x:Type ribbon:RibbonApplicationMenuItem}">
            <rd:Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <rd:Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <rd:Setter Property="Control.Background" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="Control.Padding" Value="3,2,3,2" />
            <rd:Setter Property="ribbon:RibbonMenuItem.MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.MouseOverBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.PressedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.PressedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.CheckedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.CheckedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}" />
            <rd:Setter Property="ribbon:RibbonControlService.FocusedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonControlService.FocusedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}" />
            <rd:Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.ShowDuration" Value="{StaticResource Î}" />
            <rd:Setter Property="Control.Template" Value="{StaticResource î}" />
            <rd:Style.Triggers>
                <rd:Trigger Property="ribbon:RibbonApplicationMenuItem.Level" Value="Middle">
                    <rd:Setter Property="Control.Template" Value="{StaticResource ò}" />
                </rd:Trigger>
                <rd:Trigger Property="ribbon:RibbonApplicationMenuItem.Level" Value="Sub">
                    <rd:Setter Property="Control.Template" Value="{StaticResource ô}" />
                </rd:Trigger>
            </rd:Style.Triggers>
        </rd:Style>
        <ControlTemplate x:Key="þ" TargetType="{x:Type ribbon:RibbonButton}">
            <Border Name="OuterBorder" CornerRadius="{TemplateBinding ribbon:RibbonButton.CornerRadius}" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
                <Border Name="InnerBorder" BorderBrush="#00FFFFFF" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" CornerRadius="{TemplateBinding ribbon:RibbonButton.CornerRadius}">
                    <StackPanel Name="StackPanel">
                        <Image Name="PART_Image" Source="{TemplateBinding ribbon:RibbonButton.LargeImageSource}" Width="32" Height="32" RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon}, ResourceId=LargeImageMargin}}" />
                        <Grid Name="Grid" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <rcp:RibbonTwoLineText x:Name="TwoLineText" Text="{TemplateBinding ribbon:RibbonButton.Label}" TextAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Center" LineHeight="13px" LineStackingStrategy="BlockLineHeight" Margin="1,1,1,0" />
                        </Grid>
                    </StackPanel>
                </Border>
            </Border>
            <ControlTemplate.Triggers>
                <rd:DataTrigger Value="Large" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                    <rd:Setter Property="windows:FrameworkElement.MinWidth" Value="44" />
                    <rd:Setter Property="windows:FrameworkElement.Height" Value="66" />
                    <rd:Setter TargetName="Grid" Property="windows:FrameworkElement.MinHeight" Value="26" />
                    <rd:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="True" />
                </rd:DataTrigger>
                <rd:DataTrigger Value="Small" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                    <rd:Setter Property="windows:FrameworkElement.Height" Value="22" />
                    <rd:Setter TargetName="PART_Image" Property="windows:FrameworkElement.Margin" Value="1,0,1,0" />
                    <rd:Setter TargetName="PART_Image" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallImageSource}" Property="Image.Source" />
                    <rd:Setter TargetName="PART_Image" Property="windows:FrameworkElement.Width" Value="16" />
                    <rd:Setter TargetName="PART_Image" Property="windows:FrameworkElement.Height" Value="16" />
                    <rd:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.HorizontalAlignment" Value="Left" />
                    <rd:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.Margin" Value="1" />
                    <rd:Setter TargetName="StackPanel" Property="StackPanel.Orientation" Value="Horizontal" />
                </rd:DataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Small" />
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInQuickAccessToolBar}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter Property="windows:FrameworkElement.Height" Value="Auto" />
                </rd:MultiDataTrigger>
                <rd:DataTrigger Value="False" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}">
                    <rd:Setter TargetName="TwoLineText" Property="UIElement.Visibility" Value="Collapsed" />
                </rd:DataTrigger>
                <rd:DataTrigger Value="Collapsed" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                    <rd:Setter TargetName="PART_Image" Property="UIElement.Visibility" Value="Collapsed" />
                </rd:DataTrigger>
                <rd:Trigger Property="UIElement.IsMouseOver" Value="True">
                    <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="InnerBorder" Value="{StaticResource ë}" Property="Border.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                    <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="InnerBorder" Value="{StaticResource ë}" Property="Border.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="ButtonBase.IsPressed" Value="True">
                    <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                </rd:Trigger>
                <rd:Trigger Property="ribbon:RibbonButton.IsInControlGroup" Value="True">
                    <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="OuterBorder" Property="Border.BorderThickness" Value="0,0,1,0" />
                    <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0" />
                </rd:Trigger>
                <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="PART_Image" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="OuterBorder" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="OuterBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="OuterBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0" />
                </rd:DataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver}" Value="True" />
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, FallbackValue=false}" Value="True" />
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInControlGroup}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                </rd:MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <rd:Style x:Key="{x:Type ribbon:RibbonButton}" TargetType="{x:Type ribbon:RibbonButton}">
            <rd:Setter Property="Control.Background" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="ribbon:RibbonButton.CornerRadius" Value="2" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <rd:Setter Property="ribbon:RibbonButton.MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonButton.MouseOverBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}" />
            <rd:Setter Property="ribbon:RibbonButton.PressedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonButton.PressedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}" />
            <rd:Setter Property="ribbon:RibbonButton.FocusedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonButton.FocusedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}" />
            <rd:Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.ShowDuration" Value="{StaticResource Î}" />
            <rd:Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource Ï}" />
            <rd:Setter Property="Control.Template" Value="{StaticResource þ}" />
            <rd:Setter Property="ribbon:RibbonButton.QuickAccessToolBarControlSizeDefinition">
                <rd:Setter.Value>
                    <rcp:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="False" />
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Style.Resources>
                <rd:Thickness Left="1" Top="1" Right="1" Bottom="2" />
            </rd:Style.Resources>
        </rd:Style>
        <rd:Style x:Key="{x:Type ribbon:RibbonControlGroup}" TargetType="{x:Type ribbon:RibbonControlGroup}">
            <rd:Setter Property="windows:FrameworkElement.HorizontalAlignment" Value="Center" />
            <rd:Setter Property="Control.BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}" />
            <rd:Setter Property="Control.Background" Value="#00FFFFFF" />
            <rd:Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.ShowDuration" Value="{StaticResource Î}" />
            <rd:Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource Ï}" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonControlGroup}">
                        <Border Name="MainBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1,1,0,1" CornerRadius="2" SnapsToDevicePixels="True">
                            <ItemsPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MainBorder" Property="Border.CornerRadius" Value="0" />
                            </rd:DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <SolidColorBrush x:Key="Ċ" Color="#FFB5BEDE" />
        <LinearGradientBrush x:Key="ċ" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Offset="0" Color="#FFE7E7F7" />
            <GradientStop Offset="1" Color="White" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="Č" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Offset="0" Color="#80F7F7FF" />
            <GradientStop Offset="1" Color="#F0F7F7FF" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="č" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Offset="0" Color="{windows:DynamicResource {x:Static SystemColors.ControlDarkColorKey}}" />
            <GradientStop Offset="0.5" Color="{windows:DynamicResource {x:Static SystemColors.ControlDarkColorKey}}" />
            <GradientStop Offset="0.5" Color="{windows:DynamicResource {x:Static SystemColors.ControlLightLightColorKey}}" />
            <GradientStop Offset="1" Color="{windows:DynamicResource {x:Static SystemColors.ControlLightLightColorKey}}" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="Ď" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Offset="0" Color="{windows:DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}" />
            <GradientStop Offset="0.5" Color="{windows:DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}" />
            <GradientStop Offset="0.5" Color="{windows:DynamicResource {x:Static SystemColors.ControlLightColorKey}}" />
            <GradientStop Offset="1" Color="{windows:DynamicResource {x:Static SystemColors.ControlLightColorKey}}" />
        </LinearGradientBrush>
        <rd:Style x:Key="{x:Type ribbon:RibbonCheckBox}" TargetType="{x:Type ribbon:RibbonCheckBox}">
            <rd:Setter Property="Control.Background" Value="{StaticResource ċ}" />
            <rd:Setter Property="Control.BorderBrush" Value="{StaticResource Ċ}" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="ribbon:RibbonCheckBox.MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonCheckBox.MouseOverBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}" />
            <rd:Setter Property="ribbon:RibbonCheckBox.PressedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonCheckBox.PressedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}" />
            <rd:Setter Property="ribbon:RibbonCheckBox.CheckedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonCheckBox.CheckedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}" />
            <rd:Setter Property="ribbon:RibbonCheckBox.FocusedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonCheckBox.FocusedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}" />
            <rd:Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <rd:Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.ShowDuration" Value="{StaticResource Î}" />
            <rd:Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource Ï}" />
            <rd:Setter Property="ribbon:RibbonCheckBox.QuickAccessToolBarControlSizeDefinition">
                <rd:Setter.Value>
                    <rcp:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="True" />
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonCheckBox}">
                        <Border Name="MainBorder" Margin="1">
                            <StackPanel Name="StackPanel" Background="#00FFFFFF" Orientation="Vertical" Margin="1" SnapsToDevicePixels="True">
                                <Image Name="Image" Source="{TemplateBinding ribbon:RibbonCheckBox.LargeImageSource}" RenderOptions.BitmapScalingMode="NearestNeighbor" Height="32" Width="32" Margin="1" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" />
                                <Grid Name="Grid" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="Center">
                                    <Grid VerticalAlignment="Top" HorizontalAlignment="Center" Margin="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                                            <Border Name="PART_CheckBorder" Background="#FFFFFFFF" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Height="13" Width="13">
                                                <Grid>
                                                    <Border Name="MiddleBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" BorderThickness="1" Margin="1" />
                                                    <Border Name="InnerBorder" Background="#00FFFFFF" BorderBrush="{StaticResource Č}" BorderThickness="1" Margin="1" />
                                                    <Path Name="CheckMark" Stroke="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Fill="{TemplateBinding Control.Foreground}" StrokeThickness="0.4" Data="{StaticResource ï}" FlowDirection="LeftToRight" Opacity="0" />
                                                </Grid>
                                            </Border>
                                        </Grid>
                                        <Image Name="SmallImage" Grid.Column="1" Source="{TemplateBinding ribbon:RibbonCheckBox.SmallImageSource}" RenderOptions.BitmapScalingMode="NearestNeighbor" Height="16" Width="16" Margin="2,0,1,0" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Visibility="Collapsed" />
                                        <Grid Name="TwoLineTextPanel" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center">
                                            <rcp:RibbonTwoLineText x:Name="TwoLineText" Text="{TemplateBinding ribbon:RibbonCheckBox.Label}" TextAlignment="Center" LineHeight="13px" LineStackingStrategy="BlockLineHeight" Margin="5,0,5,0" />
                                            <Rectangle Name="FocusVisual" Margin="1" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" Visibility="Collapsed" />
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <rd:DataTrigger Value="Large" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                                <rd:Setter Property="windows:FrameworkElement.MinWidth" Value="44" />
                                <rd:Setter Property="windows:FrameworkElement.Height" Value="66" />
                                <rd:Setter TargetName="Grid" Property="windows:FrameworkElement.MinHeight" Value="26" />
                                <rd:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="True" />
                            </rd:DataTrigger>
                            <rd:DataTrigger Value="Small" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                                <rd:Setter Property="windows:FrameworkElement.MinWidth" Value="22" />
                                <rd:Setter Value="{StaticResource Ć}" Property="windows:FrameworkElement.Height" />
                                <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="SmallImage" Property="UIElement.Visibility" Value="Visible" />
                                <rd:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.Margin" Value="2,0,2,0" />
                                <rd:Setter TargetName="StackPanel" Property="StackPanel.Orientation" Value="Horizontal" />
                                <rd:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="False" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Small" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInQuickAccessToolBar}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter Property="windows:FrameworkElement.Height" Value="Auto" />
                            </rd:MultiDataTrigger>
                            <rd:DataTrigger Value="False" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}">
                                <rd:Setter TargetName="TwoLineTextPanel" Property="UIElement.Visibility" Value="Collapsed" />
                            </rd:DataTrigger>
                            <rd:DataTrigger Value="Collapsed" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                                <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="SmallImage" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter Value="{StaticResource Ć}" Property="windows:FrameworkElement.Height" />
                            </rd:DataTrigger>
                            <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                                <rd:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5" />
                                <rd:Setter TargetName="SmallImage" Property="UIElement.Opacity" Value="0.5" />
                                <rd:Setter TargetName="PART_CheckBorder" Property="UIElement.Opacity" Value="0.5" />
                                <rd:Setter TargetName="MainBorder" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="PART_CheckBorder" Value="{windows:DynamicResource č}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="PART_CheckBorder" Value="{windows:DynamicResource Ď}" Property="Border.Background" />
                                <rd:Setter TargetName="MiddleBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MiddleBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" Property="Shape.Fill" />
                                <rd:Setter TargetName="CheckMark" Value="{StaticResource ñ}" Property="Path.Data" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="FocusVisual" Value="{windows:DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Property="Shape.Stroke" />
                                <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_CheckBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MiddleBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MiddleBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </rd:MultiDataTrigger.EnterActions>
                                <rd:MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.4" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </rd:MultiDataTrigger.ExitActions>
                                <rd:Setter TargetName="PART_CheckBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MiddleBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MiddleBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_CheckBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MiddleBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MiddleBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:Trigger Property="ribbon:RibbonCheckBox.ShowKeyboardCues" Value="True">
                                <rd:Setter TargetName="FocusVisual" Property="UIElement.Visibility" Value="Visible" />
                            </rd:Trigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_CheckBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MiddleBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MiddleBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ToggleButton.IsChecked" Value="True" />
                                    <rd:Condition Property="UIElement.IsMouseOver" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ď}" Property="Border.Background" />
                            </rd:MultiTrigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ToggleButton.IsChecked" Value="True" />
                                    <rd:Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ď}" Property="Border.Background" />
                            </rd:MultiTrigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ButtonBase.IsPressed" Value="True" />
                                    <rd:Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ď}" Property="Border.Background" />
                            </rd:MultiTrigger>
                            <rd:Trigger Property="ribbon:RibbonCheckBox.IsInControlGroup" Value="True">
                                <rd:Setter TargetName="MainBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MainBorder" Property="Border.BorderThickness" Value="0,0,1,0" />
                            </rd:Trigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="CheckMark" Property="UIElement.Opacity" Value="1" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInControlGroup}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <rd:Style x:Key="{x:Type ribbon:RibbonFilterMenuButton}" TargetType="{x:Type ribbon:RibbonFilterMenuButton}">
            <rd:Style.Resources>
                <SolidColorBrush x:Key="đ" Color="#959595" />
                <SolidColorBrush x:Key="Ē" Color="#FFD232" />
            </rd:Style.Resources>
            <rd:Setter Property="Control.Foreground" Value="#FFFFFFFF" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="Control.Background" Value="{StaticResource đ}" />
            <rd:Setter Property="ribbon:RibbonMenuButton.MouseOverBorderBrush" Value="{x:Null}" />
            <rd:Setter Property="ribbon:RibbonMenuButton.MouseOverBackground" Value="{x:Null}" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="windows:FrameworkElement.HorizontalAlignment" Value="Stretch" />
            <rd:Setter Property="Control.Padding" Value="6,0,0,0" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonFilterMenuButton}">
                        <ControlTemplate.Resources>
                            <ControlTemplate x:Key="ē" TargetType="{x:Type ribbon:RibbonToggleButton}">
                                <Grid SnapsToDevicePixels="True">
                                    <Border Name="OuterBorder" CornerRadius="2,2,0,0" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                                        <Grid Margin="{TemplateBinding Control.Padding}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <rcp:RibbonMenuItem x:Name="PART_CurrentFilterItem" IsHitTestVisible="False" Focusable="False">
                                                <rcp:RibbonMenuItem.Template>
                                                    <ControlTemplate TargetType="{x:Type ribbon:RibbonMenuItem}">
                                                        <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
                                                            <ContentPresenter ContentSource="Header" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </rcp:RibbonMenuItem.Template>
                                            </rcp:RibbonMenuItem>
                                            <rcp:RibbonTwoLineText x:Name="TwoLineText" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Left" LineHeight="13px" LineStackingStrategy="BlockLineHeight" RibbonTwoLineText.PathData="{TemplateBinding ribbon:RibbonTwoLineText.PathData}" PathFill="{TemplateBinding Control.Foreground}" PathStroke="{TemplateBinding Control.Foreground}" Margin="1" />
                                        </Grid>
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </ControlTemplate.Resources>
                        <Grid SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <rcp:RibbonToggleButton x:Name="PART_ToggleButton" RibbonTwoLineText.PathData="{StaticResource Ð}" Label="{TemplateBinding ribbon:RibbonMenuButton.Label}" LargeImageSource="{TemplateBinding ribbon:RibbonMenuButton.LargeImageSource}" SmallImageSource="{TemplateBinding ribbon:RibbonMenuButton.SmallImageSource}" Foreground="{TemplateBinding Control.Foreground}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" Background="{TemplateBinding Control.Background}" MouseOverBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.MouseOverBorderBrush}" MouseOverBackground="{TemplateBinding ribbon:RibbonMenuButton.MouseOverBackground}" CheckedBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}" CheckedBackground="{TemplateBinding ribbon:RibbonMenuButton.PressedBackground}" FocusedBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.FocusedBorderBrush}" FocusedBackground="{TemplateBinding ribbon:RibbonMenuButton.FocusedBackground}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Padding="{TemplateBinding Control.Padding}" ClickMode="Press" Template="{StaticResource ē}" Style="{x:Null}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}" />
                            <Popup Name="PART_Popup" HorizontalOffset="1" VerticalOffset="-1" AllowsTransparency="True" Placement="Bottom" Focusable="False" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" TextElement.Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ribbon:RibbonGallery}}, Path=Foreground}" IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen}">
                                <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p16:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" xmlns:p16="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                                    <Border Name="MenuBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                                        <Border Name="SubMenuInnerBorder" Background="{StaticResource Ñ}" BorderThickness="0" CornerRadius="2">
                                            <ScrollViewer Name="PART_SubMenuScrollViewer" Margin="1" Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                        <Rectangle Name="OpaqueRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=MenuBorder, Path=ActualHeight}" Width="{Binding ElementName=MenuBorder, Path=ActualWidth}" Fill="{Binding ElementName=MenuBorder, Path=Background}" />
                                                        <Rectangle Name="OverlayRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=SubMenuInnerBorder, Path=ActualHeight}" Width="{Binding ElementName=SubMenuInnerBorder, Path=ActualWidth}" Fill="{Binding ElementName=SubMenuInnerBorder, Path=Background}" />
                                                    </Canvas>
                                                    <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Border>
                                </sdsc:SystemDropShadowChrome>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <rd:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                                <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                                <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                            </rd:Trigger>
                            <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                                <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                                <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                            </rd:Trigger>
                            <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                                <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                                <rd:Setter TargetName="PART_SubMenuScrollViewer" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
                                <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                                <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                            </rd:DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Style.Triggers>
                <rd:DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
                    <rd:Setter Property="Control.Background" Value="{windows:DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                    <rd:Setter Property="Control.Foreground" Value="{windows:DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                </rd:DataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                        <rd:Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                        <rd:Condition Binding="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Self}}" Value="False" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter Property="Control.Foreground" Value="{StaticResource Ē}" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                        <rd:Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                        <rd:Condition Binding="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Self}}" Value="False" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter Property="Control.Background" Value="{windows:DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                    <rd:Setter Property="Control.Foreground" Value="{windows:DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                        <rd:Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}}" Value="True" />
                        <rd:Condition Binding="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Self}}" Value="False" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter Property="Control.Foreground" Value="{StaticResource Ē}" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                        <rd:Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}}" Value="True" />
                        <rd:Condition Binding="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Self}}" Value="False" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter Property="Control.Background" Value="{windows:DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                    <rd:Setter Property="Control.Foreground" Value="{windows:DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                </rd:MultiDataTrigger>
            </rd:Style.Triggers>
        </rd:Style>
        <rd:Style x:Key="{x:Type ribbon:RibbonGallery}" TargetType="{x:Type ribbon:RibbonGallery}">
            <rd:Setter Property="Control.BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}" />
            <rd:Setter Property="Control.Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.Background}" />
            <rd:Setter Property="Control.BorderThickness" Value="0,1" />
            <rd:Setter Property="UIElement.Focusable" Value="False" />
            <rd:Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
            <rd:Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <rd:Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
            <rd:Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <rd:Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <rd:Setter Property="ribbon:RibbonGallery.CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem}" />
            <rd:Setter Property="ribbon:RibbonGallery.PreviewCommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Path=HighlightedItem}" />
            <rd:Setter Property="ItemsControl.ItemsPanel">
                <rd:Setter.Value>
                    <ItemsPanelTemplate>
                        <rsbvc:RibbonGalleryCategoriesPanel x:Name="ItemsHostPanel" IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonGallery}">
                        <Border Name="Border" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
                            <Border Name="InnerBorder" Background="{StaticResource Ñ}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid Name="FilterHost">
                                        <ContentPresenter Name="PART_FilterContentPane" ContentSource="FilterPaneContent" />
                                        <rcp:RibbonFilterMenuButton x:Name="PART_FilterMenuButton" Style="{TemplateBinding ribbon:RibbonGallery.FilterMenuButtonStyle}" ItemContainerStyleSelector="{TemplateBinding ribbon:RibbonGallery.FilterItemContainerStyleSelector}" ItemTemplateSelector="{TemplateBinding ribbon:RibbonGallery.FilterItemTemplateSelector}" HorizontalContentAlignment="Left" Visibility="Collapsed" />
                                    </Grid>
                                    <ScrollViewer Name="PART_ScrollViewer" Grid.Row="1" Padding="{TemplateBinding Control.Padding}" Focusable="False">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                <Rectangle Name="OpaqueRect" Height="{Binding ElementName=Border, Path=ActualHeight}" Width="{Binding ElementName=Border, Path=ActualWidth}" Fill="{Binding ElementName=Border, Path=Background}" />
                                                <Rectangle Name="OverlayRect" Fill="{StaticResource Ñ}" Height="{Binding ElementName=Border, Path=ActualHeight}" Width="{Binding ElementName=Border, Path=ActualWidth}" />
                                            </Canvas>
                                            <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Continue" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <rd:Trigger SourceName="PART_ScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                                <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_ScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_ScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                                <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_ScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_ScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                            </rd:Trigger>
                            <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                                <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.WindowBrushKey}}" Property="Border.Background" />
                            </rd:Trigger>
                            <rd:Trigger Property="ribbon:RibbonGallery.CanUserFilter" Value="False">
                                <rd:Setter TargetName="FilterHost" Property="UIElement.Visibility" Value="Collapsed" />
                            </rd:Trigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Value="{x:Null}" Property="ribbon:RibbonGallery.FilterPaneContent" />
                                    <rd:Condition Value="{x:Null}" Property="ribbon:RibbonGallery.FilterPaneContentTemplate" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="PART_FilterMenuButton" Property="UIElement.Visibility" Value="Visible" />
                                <rd:Setter TargetName="PART_FilterContentPane" Property="UIElement.Visibility" Value="Collapsed" />
                            </rd:MultiTrigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="Border" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                            </rd:DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <SolidColorBrush x:Key="Ĕ" Color="#0C000000" />
        <rd:Style x:Key="{x:Type ribbon:RibbonGalleryCategory}" TargetType="{x:Type ribbon:RibbonGalleryCategory}">
            <rd:Setter Property="Control.Background" Value="{StaticResource Ĕ}" />
            <rd:Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderThickness" Value="0" />
            <rd:Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <rd:Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <rd:Setter Property="ItemsControl.ItemsPanel">
                <rd:Setter.Value>
                    <ItemsPanelTemplate>
                        <rsbvc:RibbonGalleryItemsPanel x:Name="ItemsHostPanel" IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonGalleryCategory}">
                        <Grid Name="MainGrid" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border Name="HeaderBorder" CornerRadius="2" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" Visibility="{TemplateBinding ribbon:RibbonGalleryCategory.HeaderVisibility}">
                                <ContentPresenter Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                            <ItemsPresenter Name="ItemsHost" Grid.Row="1" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                                <rd:Setter TargetName="MainGrid" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                                <rd:Setter TargetName="HeaderBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="HeaderBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="HeaderBorder" Property="Border.CornerRadius" Value="0" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <SolidColorBrush x:Key="ĕ" Color="#30FFFFFF" />
        <SolidColorBrush x:Key="Ė" Color="#FF3F3F3F" />
        <rd:Style x:Key="{x:Type ribbon:RibbonGalleryItem}" TargetType="{x:Type ribbon:RibbonGalleryItem}">
            <rd:Setter Property="Control.Background" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="ribbon:RibbonGalleryItem.MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonGalleryItem.MouseOverBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}" />
            <rd:Setter Property="ribbon:RibbonGalleryItem.PressedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonGalleryItem.PressedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}" />
            <rd:Setter Property="ribbon:RibbonGalleryItem.CheckedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonGalleryItem.CheckedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}" />
            <rd:Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.ShowDuration" Value="{StaticResource Î}" />
            <rd:Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource Ï}" />
            <rd:Setter Property="UIElement.Focusable" Value="True" />
            <rd:Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <rd:Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <rd:Setter Property="Control.Padding" Value="0" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonGalleryItem}">
                        <Grid Name="MainGrid" SnapsToDevicePixels="True">
                            <Border Name="OuterBorder" CornerRadius="2" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}">
                                <Border Name="InnerBorder" CornerRadius="2" Background="#00FFFFFF" BorderBrush="#00FFFFFF" BorderThickness="{TemplateBinding Control.BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="2" RecognizesAccessKey="True" />
                                </Border>
                            </Border>
                            <Border Name="PressedStateOverlay" CornerRadius="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                                <rd:Setter Property="UIElement.Opacity" Value="0.5" />
                                <rd:Setter TargetName="MainGrid" Value="{StaticResource Ė}" Property="TextElement.Foreground" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="PressedStateOverlay" Property="Border.CornerRadius" Value="0" />
                            </rd:DataTrigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:RibbonGalleryItem.IsHighlighted" Value="True" />
                                    <rd:Condition Property="ribbon:RibbonGalleryItem.IsPressed" Value="False" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                            </rd:MultiTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                            <rd:Trigger Property="ribbon:RibbonGalleryItem.IsPressed" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="PressedStateOverlay" Value="{StaticResource ĕ}" Property="Border.Background" />
                            </rd:Trigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="PressedStateOverlay" Value="{StaticResource ĕ}" Property="Border.Background" />
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                            <rd:Trigger Property="ribbon:RibbonGalleryItem.IsSelected" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Border.BorderBrush" />
                            </rd:Trigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:RibbonGalleryItem.IsHighlighted" Value="True" />
                                    <rd:Condition Property="ribbon:RibbonGalleryItem.IsSelected" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ď}" Property="Border.Background" />
                            </rd:MultiTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="InnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="InnerBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <SolidColorBrush x:Key="ė" Color="#50FFFFFF" />
        <RadialGradientBrush x:Key="Ę" GradientOrigin="0.5,1" Center="0.5,0.5" RadiusX="1" RadiusY="0.5">
            <GradientStop Offset="0" Color="#30FFFFFF" />
            <GradientStop Offset="1" Color="#08808080" />
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="ę" GradientOrigin="0.5,0.95" Center="0.5,1" RadiusX="0.9" RadiusY="0.5">
            <GradientStop Offset="0" Color="#AAFFFFFF" />
            <GradientStop Offset="1" Color="#40BBBBBB" />
        </RadialGradientBrush>
        <SolidColorBrush x:Key="Ě" Color="#40FFFFFF" />
        <LinearGradientBrush x:Key="ě" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#88FFFFFF" Offset="0.0" />
            <GradientStop Color="#88DBE7F4" Offset="1.0" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Ĝ" Color="#AEBECF" />
        <SolidColorBrush x:Key="ĝ" Color="#FCFCFC" />
        <LinearGradientBrush x:Key="Ğ" StartPoint="0.0,0.5" EndPoint="1.0,0.5">
            <GradientStop Color="#01FFFFFF" Offset="0.0" />
            <GradientStop Color="#80FFFFFF" Offset="0.5" />
            <GradientStop Color="#01FFFFFF" Offset="1.0" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ğ" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#F5F9FD" Offset="0" />
            <GradientStop Color="#EDF1F5" Offset="1" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="Ġ" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Offset="0" Color="#80FFFFFF" />
            <GradientStop Offset="0.5" Color="#60FFFFFF" />
            <GradientStop Offset="1" Color="#40808080" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ġ" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Offset="0" Color="#80808080" />
            <GradientStop Offset="1" Color="#80FFFFFF" />
        </LinearGradientBrush>
        <rd:Style x:Key="Ģ" TargetType="{x:Type ribbon:RibbonToggleButton}">
            <rd:Setter Property="UIElement.Focusable" Value="True" />
            <rd:Setter Property="Control.BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonGroup}}, Path=BorderBrush}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.MouseOverBorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="ribbon:RibbonToggleButton.MouseOverBackground" Value="{StaticResource Ě}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.FocusedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.FocusedBorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="ribbon:RibbonToggleButton.CheckedBackground" Value="#00FFFFFF" />
            <rd:Setter Property="ribbon:RibbonToggleButton.CheckedBorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="ButtonBase.ClickMode" Value="Press" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonToggleButton}">
                        <ControlTemplate.Resources>
                            <rd:DataTemplate DataType="{x:Type system:String}">
                                <rd:DataTemplateKey.Key>{x:Type system:String}</rd:DataTemplateKey.Key>
                                <rcp:RibbonTwoLineText Margin="2,4,2,0" TextAlignment="Center" VerticalAlignment="Top" LineHeight="13px" LineStackingStrategy="BlockLineHeight" RibbonTwoLineText.HasTwoLines="{TemplateBinding ribbon:RibbonTwoLineText.HasTwoLines}" PathFill="{TemplateBinding TextElement.Foreground}" RibbonTwoLineText.PathData="{TemplateBinding ribbon:RibbonTwoLineText.PathData}" Text="{Binding}" />
                            </rd:DataTemplate>
                        </ControlTemplate.Resources>
                        <Grid Name="MainGrid" SnapsToDevicePixels="True">
                            <Border Name="ButtonInnerBorder" CornerRadius="2" BorderThickness="1" Margin="1" BorderBrush="#FFEAF1FB" />
                            <Border Name="ButtonOuterBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" CornerRadius="2" BorderThickness="1" />
                            <Border Name="PART_HotBackground" Opacity="0" CornerRadius="2" BorderThickness="1" Background="{TemplateBinding ribbon:RibbonToggleButton.MouseOverBackground}" BorderBrush="{TemplateBinding ribbon:RibbonToggleButton.MouseOverBorderBrush}" />
                            <Grid Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border Name="ImageOuterBorder" Grid.Row="0">
                                    <Border Name="ImageMiddleBorder" Margin="3" VerticalAlignment="Top" HorizontalAlignment="Center" BorderBrush="{StaticResource Ĝ}" BorderThickness="0" Width="32" Height="32" CornerRadius="3">
                                        <Grid>
                                            <Border Name="ImageInnerBorder" BorderBrush="{StaticResource ĝ}" BorderThickness="0" CornerRadius="3" />
                                            <Image Name="GroupImage" Source="{TemplateBinding ribbon:RibbonToggleButton.LargeImageSource}" Width="32" Height="32" HorizontalAlignment="Center" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                        </Grid>
                                    </Border>
                                </Border>
                                <Border Name="LabelBorder" Grid.Row="1" Grid.RowSpan="2" Background="{StaticResource Ę}">
                                    <ContentPresenter rcp:RibbonTwoLineText.HasTwoLines="True" rcp:RibbonTwoLineText.PathData="{StaticResource Ð}" />
                                </Border>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonToggleButton.LargeImageSource">
                                <rd:Setter TargetName="GroupImage" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallImageSource}" Property="Image.Source" />
                                <rd:Setter TargetName="GroupImage" Property="windows:FrameworkElement.Width" Value="16" />
                                <rd:Setter TargetName="GroupImage" Property="windows:FrameworkElement.Height" Value="16" />
                                <rd:Setter TargetName="ImageMiddleBorder" Property="Border.BorderThickness" Value="1" />
                                <rd:Setter TargetName="ImageMiddleBorder" Value="{StaticResource ě}" Property="Border.Background" />
                                <rd:Setter TargetName="ImageInnerBorder" Property="Border.BorderThickness" Value="1" />
                                <rd:Setter TargetName="ImageInnerBorder" Value="{StaticResource ė}" Property="Border.Background" />
                            </rd:Trigger>
                            <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                                <rd:Setter TargetName="GroupImage" Property="UIElement.Opacity" Value="0.5" />
                                <rd:Setter TargetName="MainGrid" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                                <rd:Setter TargetName="ImageMiddleBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="ImageMiddleBorder" Property="Border.BorderThickness" Value="0" />
                                <rd:Setter TargetName="ImageInnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="ImageInnerBorder" Property="Border.BorderThickness" Value="0" />
                                <rd:Setter TargetName="PART_HotBackground" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="LabelBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="ButtonOuterBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="ButtonOuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="ButtonOuterBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="ButtonInnerBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="ButtonInnerBorder" Property="Border.BorderThickness" Value="0,1,0,0" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="ButtonInnerBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="ButtonInnerBorder" Property="Border.BorderThickness" Value="1" />
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="ButtonInnerBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="ButtonInnerBorder" Property="Border.BorderThickness" Value="1" />
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="ButtonOuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="UIElement.IsMouseOver" Value="True" />
                                    <rd:Condition Property="ToggleButton.IsChecked" Value="False" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="PART_HotBackground" Property="UIElement.Opacity" Value="1" />
                            </rd:MultiTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="False" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_HotBackground" Property="UIElement.Opacity" Value="1" />
                                <rd:Setter TargetName="PART_HotBackground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="PART_HotBackground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_HotBackground" Property="UIElement.Opacity" Value="1" />
                                <rd:Setter TargetName="PART_HotBackground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="PART_HotBackground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="ImageOuterBorder" Property="Border.Background" Value="#20BBBBBB" />
                                <rd:Setter TargetName="LabelBorder" Value="{StaticResource ę}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <rd:Style x:Key="ģ" TargetType="{x:Type ribbon:RibbonToggleButton}">
            <rd:Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
            <rd:Setter Property="UIElement.Focusable" Value="True" />
            <rd:Setter Property="Control.BorderBrush" Value="#80808080" />
            <rd:Setter Property="Control.Background" Value="#AAFFFFFF" />
            <rd:Setter Property="ribbon:RibbonToggleButton.MouseOverBorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="ribbon:RibbonToggleButton.MouseOverBackground" Value="{StaticResource Ġ}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.FocusedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.FocusedBorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="ribbon:RibbonToggleButton.CheckedBackground" Value="{StaticResource ġ}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.CheckedBorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="windows:FrameworkElement.Margin" Value="0,-1,0,0" />
            <rd:Setter Property="ButtonBase.ClickMode" Value="Press" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonToggleButton}">
                        <Border Name="OuterBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" CornerRadius="3" Background="{TemplateBinding Control.Background}">
                            <Grid>
                                <Border Name="InnerBorder" CornerRadius="3" Background="{TemplateBinding ribbon:RibbonToggleButton.MouseOverBackground}" BorderBrush="{TemplateBinding ribbon:RibbonToggleButton.MouseOverBorderBrush}" Opacity="0" />
                                <Image Name="GroupImage" Margin="3,2" Source="{TemplateBinding ribbon:RibbonToggleButton.SmallImageSource}" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="{TemplateBinding RenderOptions.BitmapScalingMode}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                                <rd:Setter TargetName="GroupImage" Property="UIElement.Opacity" Value="0.5" />
                            </rd:Trigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding Path=Background, RelativeSource={RelativeSource Self}}" Value="Transparent" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="False" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="InnerBorder" Property="UIElement.Opacity" Value="1" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.Background" Value="#00FFFFFF" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="False" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="InnerBorder" Property="UIElement.Opacity" Value="1" />
                                <rd:Setter TargetName="InnerBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="InnerBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.Background" Value="#00FFFFFF" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="InnerBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="InnerBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Property="UIElement.Opacity" Value="1" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.BorderBrush" Value="#AA808080" />
                            </rd:MultiDataTrigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.Background" Value="#00FFFFFF" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <ControlTemplate x:Key="Ĥ" TargetType="{x:Type ribbon:RibbonGroup}">
            <Border Name="GroupBorder" Background="{TemplateBinding Control.Background}" Margin="1,2,0,0">
                <Grid Name="MainGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" MinHeight="16" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border Name="PART_HotBackground" Background="{TemplateBinding ribbon:RibbonGroup.MouseOverBackground}" BorderBrush="{TemplateBinding ribbon:RibbonGroup.MouseOverBorderBrush}" Opacity="0" Grid.RowSpan="3" CornerRadius="2" BorderThickness="1" SnapsToDevicePixels="True" />
                    <Border Name="SeparatorBorder" Background="{TemplateBinding Control.BorderBrush}" Grid.Column="1" Grid.RowSpan="3" Height="75" Width="1" VerticalAlignment="Center" SnapsToDevicePixels="True" />
                    <Border Margin="2,1,2,0" Padding="3,0,3,0">
                        <Grid>
                            <ItemsPresenter Name="ItemsPresenter" />
                            <ContentControl Name="PART_TemplateContentControl" Visibility="Collapsed" Focusable="False" />
                        </Grid>
                    </Border>
                    <Border Name="LabelSeparatorBorder" Grid.Row="1" Height="1" Margin="5,1,5,-1" />
                    <Grid Margin="2,0,2,0" Grid.Row="2">
                        <ContentPresenter Name="PART_Header" TextElement.Foreground="{StaticResource Ë}" ContentSource="Header" Margin="2,0,2,0" MaxHeight="16" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="MainGrid" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="PART_HotBackground" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="SeparatorBorder" Property="UIElement.Visibility" Value="Collapsed" />
                    <rd:Setter TargetName="GroupBorder" Property="Border.BorderThickness" Value="1" />
                    <rd:Setter TargetName="GroupBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="GroupBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="LabelSeparatorBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.Background" />
                </rd:DataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                </rd:MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ĥ" TargetType="{x:Type ribbon:RibbonGroup}">
            <Grid Name="MainGrid">
                <rcp:RibbonToggleButton x:Name="PART_ToggleButton" Margin="0,3,0,0" Style="{StaticResource Ģ}" Content="{TemplateBinding HeaderedItemsControl.Header}" ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" Background="{TemplateBinding Control.Background}" LargeImageSource="{TemplateBinding ribbon:RibbonGroup.LargeImageSource}" SmallImageSource="{TemplateBinding ribbon:RibbonGroup.SmallImageSource}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <Popup Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" Focusable="False" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" PlacementTarget="{Binding ElementName=PART_ToggleButton}" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                    <sdsc:SystemDropShadowChrome Name="Shdw" Color="Transparent" SnapsToDevicePixels="True" CornerRadius="2" Focusable="True" p13:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" FocusVisualStyle="{x:Null}" xmlns:p13="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                        <Grid Name="PART_PopupGrid" Height="{TemplateBinding windows:FrameworkElement.ActualHeight}" Margin="0,1.5,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" MinHeight="16" />
                            </Grid.RowDefinitions>
                            <Border Name="PopupBorder" Grid.RowSpan="2" Background="{TemplateBinding Control.Background}" BorderThickness="1" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" />
                            <Border Name="PART_HotBackground" Background="{TemplateBinding ribbon:RibbonGroup.MouseOverBackground}" BorderBrush="{TemplateBinding ribbon:RibbonGroup.MouseOverBorderBrush}" Opacity="0" Grid.RowSpan="2" CornerRadius="2" BorderThickness="1" SnapsToDevicePixels="True" />
                            <Border Margin="2,3.5,2,0" Padding="3,0,3,0">
                                <Grid>
                                    <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="True" Grid.IsSharedSizeScope="True" />
                                    <ContentControl Name="PART_TemplateContentControl" Visibility="Collapsed" Focusable="False" />
                                </Grid>
                            </Border>
                            <Grid Margin="2,0,2,1" Grid.Row="1">
                                <ContentPresenter Name="PART_Header" TextElement.Foreground="{StaticResource Ë}" ContentSource="Header" Margin="2,0,2,0" MaxHeight="15" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </Grid>
                    </sdsc:SystemDropShadowChrome>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                        <rd:Condition Binding="{Binding Path=Background, RelativeSource={RelativeSource Self}}" Value="Transparent" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="PopupBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}" Property="Border.Background" />
                </rd:MultiDataTrigger>
                <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="MainGrid" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="PART_HotBackground" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                    <rd:Setter TargetName="PopupBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PopupBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="Shdw" Property="classic:SystemDropShadowChrome.CornerRadius" Value="0" />
                </rd:DataTrigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                    <rd:Setter TargetName="Shdw" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                    <rd:Setter TargetName="Shdw" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                </rd:Trigger>
                <rd:Trigger Property="ribbon:RibbonGroup.IsInQuickAccessToolBar" Value="True">
                    <rd:Setter TargetName="PART_PopupGrid" Value="{StaticResource ß}" Property="windows:FrameworkElement.Height" />
                    <rd:Setter TargetName="PART_ToggleButton" Value="{StaticResource ģ}" Property="windows:FrameworkElement.Style" />
                    <rd:Setter TargetName="PART_ToggleButton" Property="windows:FrameworkElement.Margin" Value="0" />
                </rd:Trigger>
                <rd:Trigger Property="ribbon:RibbonGroup.IsDropDownOpen" Value="True">
                    <rd:Setter TargetName="MainGrid" Property="ToolTipService.IsEnabled" Value="False" />
                </rd:Trigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                </rd:MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <rd:Style x:Key="{x:Type ribbon:RibbonGroup}" TargetType="{x:Type ribbon:RibbonGroup}">
            <rd:Setter Property="windows:FrameworkElement.Margin" Value="1" />
            <rd:Setter Property="Control.Padding" Value="3,0,3,0" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="Control.Template" Value="{StaticResource Ĥ}" />
            <rd:Setter Property="Control.Background" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}" />
            <rd:Setter Property="ribbon:RibbonGroup.MouseOverBackground" Value="{StaticResource Ğ}" />
            <rd:Setter Property="ribbon:RibbonGroup.MouseOverBorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.ShowDuration" Value="{StaticResource Î}" />
            <rd:Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource Ï}" />
            <rd:Style.Triggers>
                <rd:Trigger Property="ribbon:RibbonGroup.IsCollapsed" Value="True">
                    <rd:Setter Property="Control.Template" Value="{StaticResource ĥ}" />
                </rd:Trigger>
            </rd:Style.Triggers>
        </rd:Style>
        <LinearGradientBrush x:Key="ì" StartPoint="0,0" EndPoint="1,0">
            <GradientStop Offset="0" Color="#A0FFFFFF" />
            <GradientStop Offset="0.4" Color="#80FFFFFF" />
            <GradientStop Offset="0.8" Color="#0AFFFFFF" />
            <GradientStop Offset="1" Color="#08FFFFFF" />
        </LinearGradientBrush>
        <rd:Style x:Key="{x:Type ribbon:RibbonMenuItem}" TargetType="{x:Type ribbon:RibbonMenuItem}">
            <rd:Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <rd:Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <rd:Setter Property="Control.Background" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="Control.Padding" Value="3,2,3,2" />
            <rd:Setter Property="ribbon:RibbonMenuItem.MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.MouseOverBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.PressedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.PressedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.CheckedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.CheckedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}" />
            <rd:Setter Property="ribbon:RibbonControlService.FocusedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonControlService.FocusedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}" />
            <rd:Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.ShowDuration" Value="{StaticResource Î}" />
            <rd:Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource Ï}" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonMenuItem}">
                        <Grid Name="MainGrid" SnapsToDevicePixels="True">
                            <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="22" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="14" />
                                    </Grid.ColumnDefinitions>
                                    <Border Name="PART_SideBarBorder" Margin="0,-1,0,-1" BorderThickness="0,0,1,0" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                        <Grid Name="SideBarOverlay" Background="{StaticResource ì}">
                                            <Image Name="Image" Width="16" Height="16" Margin="4,3,6,1" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" />
                                            <Border Name="CheckMarkBorder" Background="{TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}" BorderBrush="{TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}" BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1" Width="20" Height="20" CornerRadius="2">
                                                <Path Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Data="{StaticResource ï}" />
                                            </Border>
                                        </Grid>
                                    </Border>
                                    <ContentPresenter Grid.Column="1" ContentSource="Header" VerticalAlignment="Center" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" />
                                    <Path Name="Arrow" Visibility="Collapsed" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" Data="{StaticResource ð}" />
                                </Grid>
                            </Border>
                            <Popup Name="PART_Popup" AllowsTransparency="True" VerticalOffset="-1" Placement="Custom" Focusable="False" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p16:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" xmlns:p16="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                                    <Border Name="MenuBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                                        <Border Name="SubMenuInnerBorder" Background="{StaticResource Ñ}" CornerRadius="2">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <ScrollViewer Name="PART_SubMenuScrollViewer" Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                            <Rectangle Name="OpaqueRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=MenuBorder, Path=ActualHeight}" Width="{Binding ElementName=MenuBorder, Path=ActualWidth}" Fill="{Binding ElementName=MenuBorder, Path=Background}" />
                                                            <Rectangle Name="OverlayRect" Fill="{StaticResource Ñ}" RadiusX="2" RadiusY="2" Height="{Binding ElementName=MenuBorder, Path=ActualHeight}" Width="{Binding ElementName=MenuBorder, Path=ActualWidth}" />
                                                        </Canvas>
                                                        <ItemsPresenter Name="ItemsPresenter" Margin="2" Grid.IsSharedSizeScope="True" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                    </Grid>
                                                </ScrollViewer>
                                                <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{StaticResource Ò}" BorderThickness="0,1,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                                    <Thumb Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                                </Border>
                                            </Grid>
                                        </Border>
                                    </Border>
                                </sdsc:SystemDropShadowChrome>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <rd:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                                <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                                <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                            </rd:Trigger>
                            <rd:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="True">
                                <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                                <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                            </rd:Trigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ItemsControl.HasItems" Value="True" />
                                    <rd:Condition Property="MenuItem.IsCheckable" Value="False" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="Arrow" Property="UIElement.Visibility" Value="Visible" />
                            </rd:MultiTrigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                                    <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                            </rd:MultiTrigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="False" />
                                    <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                                <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}" Property="windows:FrameworkElement.Style" />
                            </rd:MultiTrigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:RibbonMenuItem.IsDropDownPositionedLeft" Value="True" />
                                    <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                                    <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource ó}" Property="windows:FrameworkElement.Style" />
                            </rd:MultiTrigger>
                            <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
                                <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                            </rd:Trigger>
                            <rd:Trigger Property="MenuItem.IsCheckable" Value="True">
                                <rd:Setter TargetName="Arrow" Property="UIElement.Visibility" Value="Hidden" />
                            </rd:Trigger>
                            <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                                <rd:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible" />
                                <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible" />
                                <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden" />
                            </rd:Trigger>
                            <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                                <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                                <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                            </rd:Trigger>
                            <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                                <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                            </rd:Trigger>
                            <rd:Trigger Property="MenuItem.IsHighlighted" Value="True">
                                <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="#00FFFFFF" />
                            </rd:Trigger>
                            <rd:Trigger Property="MenuItem.IsPressed" Value="True">
                                <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="#00FFFFFF" />
                            </rd:Trigger>
                            <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                                <rd:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5" />
                                <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5" />
                                <rd:Setter TargetName="Arrow" Property="UIElement.Opacity" Value="0.5" />
                                <rd:Setter TargetName="MainGrid" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                                <rd:Setter TargetName="Arrow" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="Shape.Fill" />
                                <rd:Setter TargetName="Border" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="Border" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="Border" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="Shape.Fill" />
                                <rd:Setter TargetName="CheckMark" Value="{StaticResource ñ}" Property="Path.Data" />
                                <rd:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                                <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                                <rd:Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="PART_SideBarBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="PART_SubMenuScrollViewer" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
                                <rd:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="SubMenuInnerBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                                <rd:Setter TargetName="Arrow" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Shape.Fill" />
                                <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Shape.Fill" />
                                <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                                <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                                <rd:Setter TargetName="Arrow" Property="UIElement.Opacity" Value="1" />
                                <rd:Setter TargetName="Arrow" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Shape.Fill" />
                                <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1" />
                                <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Shape.Fill" />
                            </rd:MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <rd:Style x:Key="{x:Type ribbon:RibbonRadioButton}" TargetType="{x:Type ribbon:RibbonRadioButton}">
            <rd:Setter Property="Control.Background" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="ribbon:RibbonRadioButton.CornerRadius" Value="2" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <rd:Setter Property="ribbon:RibbonRadioButton.MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonRadioButton.MouseOverBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}" />
            <rd:Setter Property="ribbon:RibbonRadioButton.PressedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonRadioButton.PressedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}" />
            <rd:Setter Property="ribbon:RibbonRadioButton.CheckedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonRadioButton.CheckedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}" />
            <rd:Setter Property="ribbon:RibbonRadioButton.FocusedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonRadioButton.FocusedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}" />
            <rd:Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.ShowDuration" Value="{StaticResource Î}" />
            <rd:Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource Ï}" />
            <rd:Setter Property="ribbon:RibbonRadioButton.QuickAccessToolBarControlSizeDefinition">
                <rd:Setter.Value>
                    <rcp:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="False" />
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonRadioButton}">
                        <Grid SnapsToDevicePixels="True">
                            <Border Name="OuterBorder" CornerRadius="{TemplateBinding ribbon:RibbonRadioButton.CornerRadius}" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" />
                            <Border Name="MiddleBorder" CornerRadius="{TemplateBinding ribbon:RibbonRadioButton.CornerRadius}" Background="#00FFFFFF" BorderBrush="#00FFFFFF" BorderThickness="{TemplateBinding Control.BorderThickness}">
                                <Border Name="InnerBorder" Background="#00FFFFFF" BorderBrush="#00FFFFFF" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" CornerRadius="{TemplateBinding ribbon:RibbonRadioButton.CornerRadius}">
                                    <StackPanel Name="StackPanel" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}">
                                        <Image Name="PART_Image" Source="{TemplateBinding ribbon:RibbonRadioButton.LargeImageSource}" Width="32" Height="32" Margin="1,1,1,2" RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" />
                                        <Grid Name="Grid" VerticalAlignment="Center" HorizontalAlignment="Center">
                                            <rcp:RibbonTwoLineText x:Name="TwoLineText" Text="{TemplateBinding ribbon:RibbonRadioButton.Label}" TextAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Center" LineHeight="13px" LineStackingStrategy="BlockLineHeight" Margin="1,1,1,0" />
                                        </Grid>
                                    </StackPanel>
                                </Border>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <rd:DataTrigger Value="Large" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                                <rd:Setter Property="windows:FrameworkElement.MinWidth" Value="44" />
                                <rd:Setter Property="windows:FrameworkElement.Height" Value="66" />
                                <rd:Setter TargetName="Grid" Property="windows:FrameworkElement.MinHeight" Value="26" />
                                <rd:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="True" />
                            </rd:DataTrigger>
                            <rd:DataTrigger Value="Small" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                                <rd:Setter Value="{StaticResource Ć}" Property="windows:FrameworkElement.Height" />
                                <rd:Setter TargetName="PART_Image" Property="windows:FrameworkElement.Margin" Value="1,0,1,0" />
                                <rd:Setter TargetName="PART_Image" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallImageSource}" Property="Image.Source" />
                                <rd:Setter TargetName="PART_Image" Property="windows:FrameworkElement.Width" Value="16" />
                                <rd:Setter TargetName="PART_Image" Property="windows:FrameworkElement.Height" Value="16" />
                                <rd:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.HorizontalAlignment" Value="Left" />
                                <rd:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.Margin" Value="1" />
                                <rd:Setter TargetName="StackPanel" Property="StackPanel.Orientation" Value="Horizontal" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Small" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInQuickAccessToolBar}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter Property="windows:FrameworkElement.Height" Value="Auto" />
                            </rd:MultiDataTrigger>
                            <rd:DataTrigger Value="False" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}">
                                <rd:Setter TargetName="TwoLineText" Value="{x:Null}" Property="ribbon:RibbonTwoLineText.Text" />
                            </rd:DataTrigger>
                            <rd:DataTrigger Value="Collapsed" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                                <rd:Setter TargetName="PART_Image" Property="UIElement.Visibility" Value="Collapsed" />
                            </rd:DataTrigger>
                            <rd:Trigger Property="UIElement.IsMouseOver" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ë}" Property="Border.BorderBrush" />
                            </rd:Trigger>
                            <rd:Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ë}" Property="Border.BorderBrush" />
                            </rd:Trigger>
                            <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                                <rd:Setter TargetName="PART_Image" Property="UIElement.Opacity" Value="0.5" />
                                <rd:Setter TargetName="OuterBorder" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                            </rd:Trigger>
                            <rd:Trigger Property="ToggleButton.IsChecked" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource Ă}" Property="Border.BorderBrush" />
                            </rd:Trigger>
                            <rd:Trigger Property="ButtonBase.IsPressed" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                            </rd:Trigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ToggleButton.IsChecked" Value="True" />
                                    <rd:Condition Property="UIElement.IsMouseOver" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="MiddleBorder" Value="{StaticResource ď}" Property="Border.Background" />
                            </rd:MultiTrigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ToggleButton.IsChecked" Value="True" />
                                    <rd:Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="MiddleBorder" Value="{StaticResource ď}" Property="Border.Background" />
                            </rd:MultiTrigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ButtonBase.IsPressed" Value="True" />
                                    <rd:Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="MiddleBorder" Value="{StaticResource ď}" Property="Border.Background" />
                            </rd:MultiTrigger>
                            <rd:Trigger Property="ribbon:RibbonRadioButton.IsInControlGroup" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.BorderThickness" Value="0,0,1,0" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="MiddleBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="MiddleBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MiddleBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInControlGroup}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <LinearGradientBrush x:Key="ĩ" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FFFFFFFF" />
            <GradientStop Offset="0.19" Color="#AAFFFFFF" />
            <GradientStop Offset="0.39" Color="#77FFFFFF" />
            <GradientStop Offset="0.39" Color="#77FFFFFF" />
            <GradientStop Offset="0.79" Color="#AAFFFFFF" />
            <GradientStop Offset="1" Color="#FFFFFFFF" />
        </LinearGradientBrush>
        <rd:Style x:Key="{x:Type ribbon:RibbonSplitButton}" TargetType="{x:Type ribbon:RibbonSplitButton}">
            <rd:Style.Resources>
                <rd:Style TargetType="{x:Type ribbon:RibbonSeparator}">
                    <rd:Setter Property="windows:FrameworkElement.OverridesDefaultStyle" Value="True" />
                    <rd:Setter Property="UIElement.Focusable" Value="False" />
                    <rd:Setter Property="Control.BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.BorderBrush}" />
                    <rd:Setter Property="Control.Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.Background}" />
                    <rd:Setter Property="Control.FontWeight" Value="Bold" />
                    <rd:Setter Property="Control.Template">
                        <rd:Setter.Value>
                            <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
                                <Border Name="MainBorder" BorderThickness="0,1,0,1" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}">
                                    <Border Name="Overlay" Background="{StaticResource ì}">
                                        <TextBlock Name="Text" Margin="2,1,2,1" Text="{TemplateBinding ribbon:RibbonSeparator.Label}" />
                                    </Border>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                        <rd:Setter TargetName="Text" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextBlock.Foreground" />
                                        <rd:Setter TargetName="Overlay" Property="Border.Background" Value="#00FFFFFF" />
                                        <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                                        <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                                    </rd:DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </rd:Setter.Value>
                    </rd:Setter>
                    <rd:Style.Triggers>
                        <rd:Trigger Property="ribbon:RibbonSeparator.Label" Value="{x:Null}">
                            <rd:Setter Property="Control.Template">
                                <rd:Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
                                        <Grid Name="Grid" SnapsToDevicePixels="True" Margin="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="22" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="14" />
                                            </Grid.ColumnDefinitions>
                                            <Border Name="SideBarBorder" BorderThickness="0,0,1,0" Margin="0,-1,0,-1" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}">
                                                <Border Name="SideBarOverlay" Background="{StaticResource ì}" />
                                            </Border>
                                            <Line Name="Line" Grid.Column="1" Grid.ColumnSpan="2" Margin="2,0,0,0" X1="0" Y1="0" X2="1" Y2="0" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" Stretch="Fill" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                                <rd:Setter TargetName="SideBarBorder" Property="Border.Background" Value="#00FFFFFF" />
                                                <rd:Setter TargetName="SideBarBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                                <rd:Setter TargetName="SideBarOverlay" Property="Border.Background" Value="#00FFFFFF" />
                                                <rd:Setter TargetName="Line" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Shape.Stroke" />
                                            </rd:DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </rd:Setter.Value>
                            </rd:Setter>
                        </rd:Trigger>
                    </rd:Style.Triggers>
                </rd:Style>
            </rd:Style.Resources>
            <rd:Setter Property="Control.Background" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <rd:Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <rd:Setter Property="Control.Padding" Value="2,0,2,0" />
            <rd:Setter Property="ribbon:RibbonMenuButton.MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuButton.MouseOverBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}" />
            <rd:Setter Property="ribbon:RibbonMenuButton.PressedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuButton.PressedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}" />
            <rd:Setter Property="ribbon:RibbonSplitButton.CheckedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonSplitButton.CheckedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}" />
            <rd:Setter Property="ribbon:RibbonMenuButton.FocusedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuButton.FocusedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}" />
            <rd:Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.ShowDuration" Value="{StaticResource Î}" />
            <rd:Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource Ï}" />
            <rd:Setter Property="ToolTipService.IsEnabled" Value="False" />
            <rd:Setter Property="ribbon:RibbonMenuButton.QuickAccessToolBarControlSizeDefinition">
                <rd:Setter.Value>
                    <rcp:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="False" />
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonSplitButton}">
                        <Grid Name="MainGrid" SnapsToDevicePixels="True">
                            <Border Name="OuterBorder" Background="{TemplateBinding Control.Background}" CornerRadius="2">
                                <Border Name="InnerBorder" Background="#00FFFFFF" CornerRadius="2">
                                    <StackPanel Name="StackPanel" Orientation="Horizontal">
                                        <rcp:RibbonButton x:Name="PART_HeaderButton" Template="{StaticResource þ}" Label="{TemplateBinding ribbon:RibbonMenuButton.Label}" LargeImageSource="{TemplateBinding ribbon:RibbonMenuButton.LargeImageSource}" SmallImageSource="{TemplateBinding ribbon:RibbonMenuButton.SmallImageSource}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="#00FFFFFF" CornerRadius="2,0,0,2" Focusable="False" ToolTipTitle="{TemplateBinding ribbon:RibbonMenuButton.ToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonMenuButton.ToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonMenuButton.ToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonMenuButton.ToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonMenuButton.ToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonMenuButton.ToolTipFooterImageSource}" MouseOverBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.MouseOverBorderBrush}" MouseOverBackground="{TemplateBinding ribbon:RibbonMenuButton.MouseOverBackground}" PressedBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}" PressedBackground="{TemplateBinding ribbon:RibbonMenuButton.PressedBackground}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" Padding="{TemplateBinding Control.Padding}" Command="{TemplateBinding ribbon:RibbonSplitButton.Command}" CommandParameter="{TemplateBinding ribbon:RibbonSplitButton.CommandParameter}" CommandTarget="{TemplateBinding ribbon:RibbonSplitButton.CommandTarget}" KeyTip="{TemplateBinding ribbon:RibbonSplitButton.HeaderKeyTip}" QuickAccessToolBarId="{TemplateBinding ribbon:RibbonSplitButton.HeaderQuickAccessToolBarId}" CanAddToQuickAccessToolBarDirectly="True" ToolTipService.InitialShowDelay="{StaticResource Í}" ToolTipService.ShowDuration="{StaticResource Î}" ToolTipService.BetweenShowDelay="{StaticResource Ï}" Style="{x:Null}">
                                            <rcp:RibbonButton.ControlSizeDefinition>
                                                <rcp:RibbonControlSizeDefinition ImageSize="Large" IsLabelVisible="False" />
                                            </rcp:RibbonButton.ControlSizeDefinition>
                                            <rcp:RibbonButton.QuickAccessToolBarControlSizeDefinition>
                                                <rcp:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="False" />
                                            </rcp:RibbonButton.QuickAccessToolBarControlSizeDefinition>
                                            <rcp:RibbonButton.Resources>
                                                <rd:Thickness Left="1" Top="1" Right="1" Bottom="0">
                                                    <rd:ComponentResourceKey.Key TypeInTargetAssembly="{x:Type ribbon:Ribbon}" ResourceId="LargeImageMargin" />
                                                </rd:Thickness>
                                            </rcp:RibbonButton.Resources>
                                        </rcp:RibbonButton>
                                        <Grid>
                                            <Border Name="UnderlayBorder" Opacity="0.5" Visibility="Collapsed" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" />
                                            <rcp:RibbonToggleButton x:Name="PART_ToggleButton" Template="{StaticResource Ħ}" Label="{TemplateBinding ribbon:RibbonMenuButton.Label}" RibbonTwoLineText.PathData="{StaticResource Ð}" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="#00FFFFFF" CornerRadius="0,2,2,0" MouseOverBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.MouseOverBorderBrush}" MouseOverBackground="{TemplateBinding ribbon:RibbonMenuButton.MouseOverBackground}" PressedBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}" PressedBackground="{TemplateBinding ribbon:RibbonMenuButton.PressedBackground}" CheckedBorderBrush="{TemplateBinding ribbon:RibbonSplitButton.CheckedBorderBrush}" CheckedBackground="{TemplateBinding ribbon:RibbonSplitButton.CheckedBackground}" FocusedBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.FocusedBorderBrush}" FocusedBackground="{TemplateBinding ribbon:RibbonMenuButton.FocusedBackground}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" Padding="{TemplateBinding Control.Padding}" ToolTipTitle="{TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipFooterImageSource}" ClickMode="Press" ToolTipService.InitialShowDelay="{StaticResource Í}" ToolTipService.ShowDuration="{StaticResource Î}" ToolTipService.BetweenShowDelay="{StaticResource Ï}" Style="{x:Null}" FocusVisualStyle="{x:Null}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}">
                                                <rcp:RibbonToggleButton.ControlSizeDefinition>
                                                    <rcp:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="False" />
                                                </rcp:RibbonToggleButton.ControlSizeDefinition>
                                            </rcp:RibbonToggleButton>
                                        </Grid>
                                    </StackPanel>
                                </Border>
                            </Border>
                            <Popup Name="PART_Popup" HorizontalOffset="1" VerticalOffset="-1" AllowsTransparency="True" Placement="Bottom" Focusable="False" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen}">
                                <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p16:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" xmlns:p16="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                                    <Border Name="MenuBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                                        <Border Name="SubMenuInnerBorder" Background="{StaticResource Ñ}" BorderThickness="0" CornerRadius="2">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <ScrollViewer Name="PART_SubMenuScrollViewer" Grid.Row="1" Margin="1" Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                            <Rectangle Name="OpaqueRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=MenuBorder, Path=ActualHeight}" Width="{Binding ElementName=MenuBorder, Path=ActualWidth}" Fill="{Binding ElementName=MenuBorder, Path=Background}" />
                                                            <Rectangle Name="OverlayRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=SubMenuInnerBorder, Path=ActualHeight}" Width="{Binding ElementName=SubMenuInnerBorder, Path=ActualWidth}" Fill="{Binding ElementName=SubMenuInnerBorder, Path=Background}" />
                                                        </Canvas>
                                                        <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
                                                    </Grid>
                                                </ScrollViewer>
                                                <Border Name="ResizeControl" Grid.Row="2" Visibility="Collapsed" Background="{StaticResource Ò}" BorderThickness="0,1,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                                    <Thumb Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                                </Border>
                                            </Grid>
                                        </Border>
                                    </Border>
                                </sdsc:SystemDropShadowChrome>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <rd:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                                <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                                <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                            </rd:Trigger>
                            <rd:Trigger Property="ribbon:RibbonMenuButton.IsDropDownOpen" Value="True">
                                <rd:Setter TargetName="PART_HeaderButton" Property="ToolTipService.IsEnabled" Value="False" />
                                <rd:Setter TargetName="PART_ToggleButton" Property="ToolTipService.IsEnabled" Value="False" />
                            </rd:Trigger>
                            <rd:Trigger Property="ribbon:RibbonMenuButton.HasGallery" Value="True">
                                <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                                <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="Large" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                                <rd:Setter Property="windows:FrameworkElement.MinWidth" Value="44" />
                                <rd:Setter TargetName="PART_HeaderButton" Property="windows:FrameworkElement.Height" Value="37" />
                                <rd:Setter TargetName="PART_ToggleButton" Property="windows:FrameworkElement.Height" Value="29" />
                                <rd:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="True" />
                                <rd:Setter TargetName="StackPanel" Property="StackPanel.Orientation" Value="Vertical" />
                                <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.CornerRadius" Value="2,2,0,0" />
                                <rd:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.CornerRadius" Value="0,0,2,2" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Large" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                                    <rd:Setter.Value>
                                        <rcp:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="True" />
                                    </rd:Setter.Value>
                                </rd:Setter>
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Small" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}" Value="False" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.ControlSizeDefinition">
                                    <rd:Setter.Value>
                                        <rcp:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="False" />
                                    </rd:Setter.Value>
                                </rd:Setter>
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Small" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=LabelPosition}" Value="DropDown" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.ControlSizeDefinition">
                                    <rd:Setter.Value>
                                        <rcp:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="False" />
                                    </rd:Setter.Value>
                                </rd:Setter>
                                <rd:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                                    <rd:Setter.Value>
                                        <rcp:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="True" />
                                    </rd:Setter.Value>
                                </rd:Setter>
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Small" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=LabelPosition}" Value="Header" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.ControlSizeDefinition">
                                    <rd:Setter.Value>
                                        <rcp:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="True" />
                                    </rd:Setter.Value>
                                </rd:Setter>
                            </rd:MultiDataTrigger>
                            <rd:DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInQuickAccessToolBar}">
                                <rd:Setter TargetName="PART_HeaderButton" Property="windows:FrameworkElement.Height" Value="Auto" />
                                <rd:Setter TargetName="PART_ToggleButton" Property="windows:FrameworkElement.Height" Value="Auto" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Collapsed" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}" Value="False" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.ControlSizeDefinition">
                                    <rd:Setter.Value>
                                        <rcp:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="False" />
                                    </rd:Setter.Value>
                                </rd:Setter>
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Collapsed" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=LabelPosition}" Value="DropDown" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.ControlSizeDefinition">
                                    <rd:Setter.Value>
                                        <rcp:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="False" />
                                    </rd:Setter.Value>
                                </rd:Setter>
                                <rd:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                                    <rd:Setter.Value>
                                        <rcp:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="True" />
                                    </rd:Setter.Value>
                                </rd:Setter>
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Collapsed" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=LabelPosition}" Value="Header" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.ControlSizeDefinition">
                                    <rd:Setter.Value>
                                        <rcp:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="True" />
                                    </rd:Setter.Value>
                                </rd:Setter>
                            </rd:MultiDataTrigger>
                            <rd:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ĩ}" Property="Border.Background" />
                                <rd:Setter TargetName="PART_ToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Control.BorderBrush" />
                            </rd:Trigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition SourceName="PART_ToggleButton" Property="UIElement.IsMouseOver" Value="True" />
                                    <rd:Condition SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ĩ}" Property="Border.Background" />
                                <rd:Setter TargetName="PART_HeaderButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Control.BorderBrush" />
                            </rd:MultiTrigger>
                            <rd:Trigger SourceName="PART_ToggleButton" Property="UIElement.IsKeyboardFocused" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="PART_HeaderButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" Property="Control.BorderBrush" />
                            </rd:Trigger>
                            <rd:Trigger Property="ribbon:RibbonSplitButton.IsChecked" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="PART_ToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Control.BorderBrush" />
                            </rd:Trigger>
                            <rd:Trigger SourceName="PART_ToggleButton" Property="ToggleButton.IsChecked" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ĩ}" Property="Border.Background" />
                                <rd:Setter TargetName="PART_HeaderButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Control.BorderBrush" />
                            </rd:Trigger>
                            <rd:Trigger Property="ribbon:RibbonMenuButton.IsInControlGroup" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.BorderThickness" Value="0,0,1,0" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.CornerRadius" Value="0" />
                                <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.CornerRadius" Value="0" />
                            </rd:Trigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="True" />
                                    <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                            </rd:MultiTrigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="False" />
                                    <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                                <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}" Property="windows:FrameworkElement.Style" />
                            </rd:MultiTrigger>
                            <rd:Trigger Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="True">
                                <rd:Setter TargetName="ResizeControl" Property="Grid.Row" Value="0" />
                                <rd:Setter TargetName="ResizeControl" Property="Border.BorderThickness" Value="0,0,0,1" />
                            </rd:Trigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="True" />
                                    <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="True" />
                                    <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Õ}" Property="windows:FrameworkElement.Style" />
                            </rd:MultiTrigger>
                            <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitButton.HeaderQuickAccessToolBarId">
                                <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.CanAddToQuickAccessToolBarDirectly" Value="False" />
                            </rd:Trigger>
                            <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                                <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                                <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                            </rd:Trigger>
                            <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                                <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                            </rd:Trigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="False" />
                                    <rd:Condition Property="UIElement.IsMouseOver" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="PART_HeaderButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Property="Control.BorderBrush" />
                                <rd:Setter TargetName="UnderlayBorder" Property="UIElement.Visibility" Value="Visible" />
                                <rd:Setter TargetName="PART_ToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Control.BorderBrush" />
                            </rd:MultiTrigger>
                            <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                                <rd:Setter TargetName="MainGrid" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                                <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                                <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                                <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.CornerRadius" Value="0" />
                                <rd:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.CornerRadius" Value="0" />
                                <rd:Setter TargetName="UnderlayBorder" Property="UIElement.Opacity" Value="0" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <rd:Condition Binding="{Binding ElementName=PART_HeaderButton, Path=IsEnabled}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <rd:Condition Binding="{Binding ElementName=PART_HeaderButton, Path=IsEnabled}" Value="False" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="UnderlayBorder" Property="UIElement.Opacity" Value="1" />
                                <rd:Setter TargetName="UnderlayBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding ElementName=PART_ToggleButton, Path=IsKeyboardFocused}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="PART_HeaderButton" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Control.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="PART_ToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Control.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_ToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Control.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding ElementName=PART_ToggleButton, Path=IsKeyboardFocused}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_HeaderButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Control.BorderBrush" />
                                <rd:Setter TargetName="PART_ToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Control.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:Trigger Property="ribbon:RibbonMenuButton.IsInQuickAccessToolBar" Value="True">
                                <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.CanAddToQuickAccessToolBarDirectly" Value="False" />
                            </rd:Trigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Style.Triggers>
                <rd:Trigger Property="ribbon:RibbonSplitButton.IsCheckable" Value="True">
                    <rd:Setter Property="Control.Template">
                        <rd:Setter.Value>
                            <ControlTemplate TargetType="{x:Type ribbon:RibbonSplitButton}">
                                <Grid Name="MainGrid" SnapsToDevicePixels="True">
                                    <Border Name="OuterBorder" Background="{TemplateBinding Control.Background}" CornerRadius="2">
                                        <Border Name="InnerBorder" Background="#00FFFFFF" CornerRadius="2">
                                            <StackPanel Name="StackPanel" Orientation="Horizontal">
                                                <rcp:RibbonToggleButton x:Name="PART_HeaderButton" Template="{StaticResource Ħ}" Label="{TemplateBinding ribbon:RibbonMenuButton.Label}" LargeImageSource="{TemplateBinding ribbon:RibbonMenuButton.LargeImageSource}" SmallImageSource="{TemplateBinding ribbon:RibbonMenuButton.SmallImageSource}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="#00FFFFFF" CornerRadius="2,0,0,2" Focusable="False" ToolTipTitle="{TemplateBinding ribbon:RibbonMenuButton.ToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonMenuButton.ToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonMenuButton.ToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonMenuButton.ToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonMenuButton.ToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonMenuButton.ToolTipFooterImageSource}" MouseOverBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.MouseOverBorderBrush}" MouseOverBackground="{TemplateBinding ribbon:RibbonMenuButton.MouseOverBackground}" PressedBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}" PressedBackground="{TemplateBinding ribbon:RibbonMenuButton.PressedBackground}" CheckedBorderBrush="{TemplateBinding ribbon:RibbonSplitButton.CheckedBorderBrush}" CheckedBackground="{TemplateBinding ribbon:RibbonSplitButton.CheckedBackground}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" Padding="{TemplateBinding Control.Padding}" Command="{TemplateBinding ribbon:RibbonSplitButton.Command}" CommandParameter="{TemplateBinding ribbon:RibbonSplitButton.CommandParameter}" CommandTarget="{TemplateBinding ribbon:RibbonSplitButton.CommandTarget}" KeyTip="{TemplateBinding ribbon:RibbonSplitButton.HeaderKeyTip}" QuickAccessToolBarId="{TemplateBinding ribbon:RibbonSplitButton.HeaderQuickAccessToolBarId}" CanAddToQuickAccessToolBarDirectly="True" ToolTipService.InitialShowDelay="{StaticResource Í}" ToolTipService.ShowDuration="{StaticResource Î}" ToolTipService.BetweenShowDelay="{StaticResource Ï}" Style="{x:Null}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}">
                                                    <rcp:RibbonToggleButton.ControlSizeDefinition>
                                                        <rcp:RibbonControlSizeDefinition ImageSize="Large" IsLabelVisible="False" />
                                                    </rcp:RibbonToggleButton.ControlSizeDefinition>
                                                    <rcp:RibbonToggleButton.QuickAccessToolBarControlSizeDefinition>
                                                        <rcp:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="False" />
                                                    </rcp:RibbonToggleButton.QuickAccessToolBarControlSizeDefinition>
                                                    <rcp:RibbonToggleButton.Resources>
                                                        <rd:Thickness Left="1" Top="1" Right="1" Bottom="0">
                                                            <rd:ComponentResourceKey.Key TypeInTargetAssembly="{x:Type ribbon:Ribbon}" ResourceId="LargeImageMargin" />
                                                        </rd:Thickness>
                                                    </rcp:RibbonToggleButton.Resources>
                                                </rcp:RibbonToggleButton>
                                                <Grid>
                                                    <Border Name="UnderlayBorder" Opacity="0.5" Visibility="Collapsed" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" />
                                                    <rcp:RibbonToggleButton x:Name="PART_ToggleButton" Template="{StaticResource Ħ}" Label="{TemplateBinding ribbon:RibbonMenuButton.Label}" RibbonTwoLineText.PathData="{StaticResource Ð}" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="#00FFFFFF" CornerRadius="0,2,2,0" MouseOverBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.MouseOverBorderBrush}" MouseOverBackground="{TemplateBinding ribbon:RibbonMenuButton.MouseOverBackground}" PressedBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}" PressedBackground="{TemplateBinding ribbon:RibbonMenuButton.PressedBackground}" CheckedBorderBrush="{TemplateBinding ribbon:RibbonSplitButton.CheckedBorderBrush}" CheckedBackground="{TemplateBinding ribbon:RibbonSplitButton.CheckedBackground}" FocusedBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.FocusedBorderBrush}" FocusedBackground="{TemplateBinding ribbon:RibbonMenuButton.FocusedBackground}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" Padding="{TemplateBinding Control.Padding}" ToolTipTitle="{TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonSplitButton.DropDownToolTipFooterImageSource}" ClickMode="Press" ToolTipService.InitialShowDelay="{StaticResource Í}" ToolTipService.ShowDuration="{StaticResource Î}" ToolTipService.BetweenShowDelay="{StaticResource Ï}" Style="{x:Null}" FocusVisualStyle="{x:Null}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}">
                                                        <rcp:RibbonToggleButton.ControlSizeDefinition>
                                                            <rcp:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="False" />
                                                        </rcp:RibbonToggleButton.ControlSizeDefinition>
                                                    </rcp:RibbonToggleButton>
                                                    <Border Name="OverlayBottomBorder" BorderBrush="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="2" VerticalAlignment="Top" />
                                                    <Border Name="OverlayTopBorder" BorderBrush="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Margin="1,0" />
                                                </Grid>
                                            </StackPanel>
                                        </Border>
                                    </Border>
                                    <Popup Name="PART_Popup" HorizontalOffset="1" VerticalOffset="-1" AllowsTransparency="True" Placement="Bottom" Focusable="False" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen}">
                                        <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p18:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" xmlns:p18="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                                            <Border Name="MenuBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                                                <Border Name="SubMenuInnerBorder" Background="{StaticResource Ñ}" BorderThickness="0" CornerRadius="2">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition />
                                                            <RowDefinition Height="Auto" />
                                                        </Grid.RowDefinitions>
                                                        <ScrollViewer Name="PART_SubMenuScrollViewer" Grid.Row="1" Margin="1" Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                                    <Rectangle Name="OpaqueRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=MenuBorder, Path=ActualHeight}" Width="{Binding ElementName=MenuBorder, Path=ActualWidth}" Fill="{Binding ElementName=MenuBorder, Path=Background}" />
                                                                    <Rectangle Name="OverlayRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=SubMenuInnerBorder, Path=ActualHeight}" Width="{Binding ElementName=SubMenuInnerBorder, Path=ActualWidth}" Fill="{Binding ElementName=SubMenuInnerBorder, Path=Background}" />
                                                                </Canvas>
                                                                <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
                                                            </Grid>
                                                        </ScrollViewer>
                                                        <Border Name="ResizeControl" Grid.Row="2" Visibility="Collapsed" Background="{StaticResource Ò}" BorderThickness="0,1,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                                            <Thumb Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                                        </Border>
                                                    </Grid>
                                                </Border>
                                            </Border>
                                        </sdsc:SystemDropShadowChrome>
                                    </Popup>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <rd:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                                        <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                        <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                                        <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                        <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                                    </rd:Trigger>
                                    <rd:Trigger Property="ribbon:RibbonMenuButton.IsDropDownOpen" Value="True">
                                        <rd:Setter TargetName="PART_HeaderButton" Property="ToolTipService.IsEnabled" Value="False" />
                                        <rd:Setter TargetName="PART_ToggleButton" Property="ToolTipService.IsEnabled" Value="False" />
                                    </rd:Trigger>
                                    <rd:Trigger Property="ribbon:RibbonMenuButton.HasGallery" Value="True">
                                        <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                                        <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                                    </rd:Trigger>
                                    <rd:DataTrigger Value="Large" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                                        <rd:Setter Property="windows:FrameworkElement.MinWidth" Value="44" />
                                        <rd:Setter TargetName="PART_HeaderButton" Property="windows:FrameworkElement.Height" Value="37" />
                                        <rd:Setter TargetName="PART_ToggleButton" Property="windows:FrameworkElement.Height" Value="29" />
                                        <rd:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="True" />
                                        <rd:Setter TargetName="StackPanel" Property="StackPanel.Orientation" Value="Vertical" />
                                        <rd:Setter TargetName="PART_HeaderButton" Property="Control.VerticalContentAlignment" Value="Stretch" />
                                        <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.CornerRadius" Value="2,2,0,0" />
                                        <rd:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.CornerRadius" Value="0,0,2,2" />
                                    </rd:DataTrigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Large" />
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}" Value="True" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                                            <rd:Setter.Value>
                                                <rcp:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="True" />
                                            </rd:Setter.Value>
                                        </rd:Setter>
                                    </rd:MultiDataTrigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Small" />
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}" Value="False" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                                            <rd:Setter.Value>
                                                <rcp:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="False" />
                                            </rd:Setter.Value>
                                        </rd:Setter>
                                    </rd:MultiDataTrigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Small" />
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}" Value="True" />
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=LabelPosition}" Value="DropDown" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                                            <rd:Setter.Value>
                                                <rcp:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="False" />
                                            </rd:Setter.Value>
                                        </rd:Setter>
                                        <rd:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                                            <rd:Setter.Value>
                                                <rcp:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="True" />
                                            </rd:Setter.Value>
                                        </rd:Setter>
                                    </rd:MultiDataTrigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Small" />
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}" Value="True" />
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=LabelPosition}" Value="Header" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                                            <rd:Setter.Value>
                                                <rcp:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="True" />
                                            </rd:Setter.Value>
                                        </rd:Setter>
                                    </rd:MultiDataTrigger>
                                    <rd:DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInQuickAccessToolBar}">
                                        <rd:Setter TargetName="PART_HeaderButton" Property="windows:FrameworkElement.Height" Value="Auto" />
                                        <rd:Setter TargetName="PART_ToggleButton" Property="windows:FrameworkElement.Height" Value="Auto" />
                                    </rd:DataTrigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Collapsed" />
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}" Value="False" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                                            <rd:Setter.Value>
                                                <rcp:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="False" />
                                            </rd:Setter.Value>
                                        </rd:Setter>
                                    </rd:MultiDataTrigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Collapsed" />
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}" Value="True" />
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=LabelPosition}" Value="DropDown" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                                            <rd:Setter.Value>
                                                <rcp:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="False" />
                                            </rd:Setter.Value>
                                        </rd:Setter>
                                        <rd:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                                            <rd:Setter.Value>
                                                <rcp:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="True" />
                                            </rd:Setter.Value>
                                        </rd:Setter>
                                    </rd:MultiDataTrigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Collapsed" />
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}" Value="True" />
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=LabelPosition}" Value="Header" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.ControlSizeDefinition">
                                            <rd:Setter.Value>
                                                <rcp:RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="True" />
                                            </rd:Setter.Value>
                                        </rd:Setter>
                                    </rd:MultiDataTrigger>
                                    <rd:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="True">
                                        <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                                        <rd:Setter TargetName="InnerBorder" Value="{StaticResource ĩ}" Property="Border.Background" />
                                        <rd:Setter TargetName="PART_ToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Control.BorderBrush" />
                                    </rd:Trigger>
                                    <rd:MultiTrigger>
                                        <rd:MultiTrigger.Conditions>
                                            <rd:Condition SourceName="PART_ToggleButton" Property="UIElement.IsMouseOver" Value="True" />
                                            <rd:Condition SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="True" />
                                        </rd:MultiTrigger.Conditions>
                                        <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                                        <rd:Setter TargetName="InnerBorder" Value="{StaticResource ĩ}" Property="Border.Background" />
                                        <rd:Setter TargetName="PART_HeaderButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Control.BorderBrush" />
                                    </rd:MultiTrigger>
                                    <rd:Trigger SourceName="PART_ToggleButton" Property="UIElement.IsKeyboardFocused" Value="True">
                                        <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}" Property="Border.Background" />
                                        <rd:Setter TargetName="PART_HeaderButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" Property="Control.BorderBrush" />
                                    </rd:Trigger>
                                    <rd:Trigger Property="ribbon:RibbonSplitButton.IsChecked" Value="True">
                                        <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}" Property="Border.Background" />
                                        <rd:Setter TargetName="PART_ToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Control.BorderBrush" />
                                    </rd:Trigger>
                                    <rd:Trigger SourceName="PART_ToggleButton" Property="ToggleButton.IsChecked" Value="True">
                                        <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}" Property="Border.Background" />
                                        <rd:Setter TargetName="InnerBorder" Value="{StaticResource ĩ}" Property="Border.Background" />
                                        <rd:Setter TargetName="PART_HeaderButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Control.BorderBrush" />
                                    </rd:Trigger>
                                    <rd:Trigger Property="ribbon:RibbonMenuButton.IsInControlGroup" Value="True">
                                        <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Property="Border.BorderBrush" />
                                        <rd:Setter TargetName="OuterBorder" Property="Border.BorderThickness" Value="0,0,1,0" />
                                        <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0" />
                                        <rd:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0" />
                                        <rd:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.CornerRadius" Value="0" />
                                        <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.CornerRadius" Value="0" />
                                    </rd:Trigger>
                                    <rd:MultiTrigger>
                                        <rd:MultiTrigger.Conditions>
                                            <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="True" />
                                            <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="True" />
                                        </rd:MultiTrigger.Conditions>
                                        <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                                    </rd:MultiTrigger>
                                    <rd:MultiTrigger>
                                        <rd:MultiTrigger.Conditions>
                                            <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="False" />
                                            <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="True" />
                                        </rd:MultiTrigger.Conditions>
                                        <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                                        <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}" Property="windows:FrameworkElement.Style" />
                                    </rd:MultiTrigger>
                                    <rd:Trigger Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="True">
                                        <rd:Setter TargetName="ResizeControl" Property="Grid.Row" Value="0" />
                                        <rd:Setter TargetName="ResizeControl" Property="Border.BorderThickness" Value="0,0,0,1" />
                                    </rd:Trigger>
                                    <rd:MultiTrigger>
                                        <rd:MultiTrigger.Conditions>
                                            <rd:Condition Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="True" />
                                            <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="True" />
                                            <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="True" />
                                        </rd:MultiTrigger.Conditions>
                                        <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Õ}" Property="windows:FrameworkElement.Style" />
                                    </rd:MultiTrigger>
                                    <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitButton.HeaderQuickAccessToolBarId">
                                        <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.CanAddToQuickAccessToolBarDirectly" Value="False" />
                                    </rd:Trigger>
                                    <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                                        <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                                        <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                                    </rd:Trigger>
                                    <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                                        <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                                    </rd:Trigger>
                                    <rd:MultiTrigger>
                                        <rd:MultiTrigger.Conditions>
                                            <rd:Condition SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="False" />
                                            <rd:Condition Property="UIElement.IsMouseOver" Value="True" />
                                        </rd:MultiTrigger.Conditions>
                                        <rd:Setter TargetName="PART_HeaderButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Property="Control.BorderBrush" />
                                        <rd:Setter TargetName="UnderlayBorder" Property="UIElement.Visibility" Value="Visible" />
                                        <rd:Setter TargetName="PART_ToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Control.BorderBrush" />
                                    </rd:MultiTrigger>
                                    <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                                        <rd:Setter TargetName="MainGrid" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                                    </rd:Trigger>
                                    <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                        <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                                        <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                                        <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                                        <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                                        <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                        <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                                        <rd:Setter TargetName="OuterBorder" Property="Border.Background" Value="#00FFFFFF" />
                                        <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0" />
                                        <rd:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                                        <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                        <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                                        <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.CornerRadius" Value="0" />
                                        <rd:Setter TargetName="PART_ToggleButton" Property="ribbon:RibbonToggleButton.CornerRadius" Value="0" />
                                        <rd:Setter TargetName="UnderlayBorder" Property="UIElement.Opacity" Value="0" />
                                    </rd:DataTrigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                            <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="PART_ToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Control.BorderBrush" />
                                        <rd:Setter TargetName="OverlayBottomBorder" Property="Border.BorderThickness" Value="1" />
                                        <rd:Setter TargetName="OverlayTopBorder" Property="Border.BorderThickness" Value="0,1,0,0" />
                                    </rd:MultiDataTrigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                            <rd:Condition Binding="{Binding ElementName=PART_HeaderButton, Path=IsEnabled}" Value="True" />
                                            <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                        <rd:Setter TargetName="InnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                                    </rd:MultiDataTrigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                            <rd:Condition Binding="{Binding ElementName=PART_HeaderButton, Path=IsEnabled}" Value="False" />
                                            <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="UnderlayBorder" Property="UIElement.Opacity" Value="1" />
                                        <rd:Setter TargetName="UnderlayBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                    </rd:MultiDataTrigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding ElementName=PART_ToggleButton, Path=IsKeyboardFocused}" Value="True" />
                                            <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                        <rd:Setter TargetName="PART_HeaderButton" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Control.BorderBrush" />
                                    </rd:MultiDataTrigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                            <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="PART_ToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Control.BorderBrush" />
                                    </rd:MultiDataTrigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding ElementName=PART_ToggleButton, Path=IsKeyboardFocused}" Value="True" />
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                            <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="PART_HeaderButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Control.BorderBrush" />
                                        <rd:Setter TargetName="PART_ToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Control.BorderBrush" />
                                    </rd:MultiDataTrigger>
                                    <rd:Trigger Property="ribbon:RibbonMenuButton.IsInQuickAccessToolBar" Value="True">
                                        <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.CanAddToQuickAccessToolBarDirectly" Value="False" />
                                    </rd:Trigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                                            <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                                    </rd:MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </rd:Setter.Value>
                    </rd:Setter>
                </rd:Trigger>
            </rd:Style.Triggers>
        </rd:Style>
        <rd:Style x:Key="ö" TargetType="{x:Type ribbon:RibbonButton}">
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonButton}">
                        <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Control.Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="22" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="1" ContentSource="Content" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" />
                        </Grid>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <rd:Style x:Key="ù" TargetType="{x:Type ribbon:RibbonToggleButton}">
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonToggleButton}">
                        <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Control.Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="22" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="1" ContentSource="Content" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" />
                        </Grid>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <rd:Style x:Key="÷" TargetType="{x:Type ribbon:RibbonToggleButton}">
            <rd:Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.ShowDuration" Value="{StaticResource Î}" />
            <rd:Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource Ï}" />
            <rd:Setter Property="ButtonBase.ClickMode" Value="Press" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonToggleButton}">
                        <Grid SnapsToDevicePixels="True">
                            <Border Name="OuterBorder" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" />
                            <Path Data="{StaticResource ð}" Fill="{TemplateBinding Control.Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <rd:Style x:Key="{x:Type ribbon:RibbonSplitMenuItem}" TargetType="{x:Type ribbon:RibbonSplitMenuItem}">
            <rd:Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <rd:Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <rd:Setter Property="Control.Background" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="Control.Padding" Value="3,2,3,2" />
            <rd:Setter Property="ribbon:RibbonMenuItem.MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.MouseOverBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.PressedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.PressedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.CheckedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.CheckedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}" />
            <rd:Setter Property="ribbon:RibbonControlService.FocusedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonControlService.FocusedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}" />
            <rd:Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.ShowDuration" Value="{StaticResource Î}" />
            <rd:Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource Ï}" />
            <rd:Setter Property="ToolTipService.IsEnabled" Value="False" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonSplitMenuItem}">
                        <Grid Name="MainGrid" SnapsToDevicePixels="True" Margin="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="22" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="14" />
                            </Grid.ColumnDefinitions>
                            <Border Name="HighlightLeftBorder" Grid.ColumnSpan="2" CornerRadius="2,0,0,2" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" />
                            <Border Name="HighlightLeftBorderOverlay" Grid.ColumnSpan="2" CornerRadius="2,0,0,2" BorderBrush="#00FFFFFF" Background="#00FFFFFF" />
                            <Border Name="PART_SideBarBorder" Margin="-1,-1,0,-1" BorderThickness="0,0,1,0" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                <Grid Name="SideBarOverlay" Background="{StaticResource ì}">
                                    <Image Name="Image" Margin="4,3,6,1" Width="16" Height="16" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" />
                                    <Border Name="CheckMarkBorder" Background="{TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}" BorderBrush="{TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}" BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1" Width="20" Height="20" CornerRadius="2">
                                        <Path Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Data="{StaticResource ï}" />
                                    </Border>
                                </Grid>
                            </Border>
                            <rcp:RibbonButton x:Name="PART_HeaderButton" Grid.ColumnSpan="2" Style="{StaticResource ö}" Command="{TemplateBinding MenuItem.Command}" CommandParameter="{TemplateBinding MenuItem.CommandParameter}" CommandTarget="{TemplateBinding MenuItem.CommandTarget}" Content="{TemplateBinding HeaderedItemsControl.Header}" ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" SmallImageSource="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" Padding="{TemplateBinding Control.Padding}" Background="#00FFFFFF" Focusable="False" ToolTipTitle="{TemplateBinding ribbon:RibbonMenuItem.ToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonMenuItem.ToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonMenuItem.ToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterImageSource}" KeyTip="{TemplateBinding ribbon:RibbonSplitMenuItem.HeaderKeyTip}" QuickAccessToolBarId="{TemplateBinding ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId}" CanAddToQuickAccessToolBarDirectly="True" />
                            <Border Name="HighlightRightBorder" Grid.Column="2" CornerRadius="0,2,2,0" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}">
                                <rcp:RibbonToggleButton x:Name="PART_ArrowToggleButton" Visibility="Collapsed" Focusable="False" Style="{StaticResource ÷}" BorderThickness="1,0,0,0" Background="#00FFFFFF" ToolTipTitle="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterImageSource}" IsChecked="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                            </Border>
                            <Border Name="HighlightRightBorderOverlay" Grid.Column="2" CornerRadius="0,2,2,0" Background="#00FFFFFF" BorderBrush="#00FFFFFF" />
                            <Popup Name="PART_Popup" AllowsTransparency="True" VerticalOffset="-1" Placement="Custom" Focusable="False" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p16:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" xmlns:p16="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                                    <Border Name="MenuBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                                        <Border Name="SubMenuInnerBorder" Background="{StaticResource Ñ}" CornerRadius="2">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <ScrollViewer Name="PART_SubMenuScrollViewer" Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                            <Rectangle Name="OpaqueRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=MenuBorder, Path=ActualHeight}" Width="{Binding ElementName=MenuBorder, Path=ActualWidth}" Fill="{Binding ElementName=MenuBorder, Path=Background}" />
                                                            <Rectangle Name="OverlayRect" Fill="{StaticResource Ñ}" RadiusX="2" RadiusY="2" Height="{Binding ElementName=MenuBorder, Path=ActualHeight}" Width="{Binding ElementName=MenuBorder, Path=ActualWidth}" />
                                                        </Canvas>
                                                        <ItemsPresenter Name="ItemsPresenter" Margin="2" Grid.IsSharedSizeScope="True" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                    </Grid>
                                                </ScrollViewer>
                                                <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{StaticResource Ò}" BorderThickness="0,1,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                                    <Thumb Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                                </Border>
                                            </Grid>
                                        </Border>
                                    </Border>
                                </sdsc:SystemDropShadowChrome>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <rd:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                                <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                                <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                            </rd:Trigger>
                            <rd:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="True">
                                <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                                <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                            </rd:Trigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                                    <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                            </rd:MultiTrigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="False" />
                                    <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                                <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}" Property="windows:FrameworkElement.Style" />
                            </rd:MultiTrigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:RibbonMenuItem.IsDropDownPositionedLeft" Value="True" />
                                    <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                                    <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource ó}" Property="windows:FrameworkElement.Style" />
                            </rd:MultiTrigger>
                            <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                                <rd:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible" />
                                <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible" />
                                <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden" />
                            </rd:Trigger>
                            <rd:Trigger Property="ItemsControl.HasItems" Value="True">
                                <rd:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                            </rd:Trigger>
                            <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
                                <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                            </rd:Trigger>
                            <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId">
                                <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.CanAddToQuickAccessToolBarDirectly" Value="False" />
                            </rd:Trigger>
                            <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                                <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                                <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                            </rd:Trigger>
                            <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                                <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                            </rd:Trigger>
                            <rd:Trigger Property="MenuItem.IsHighlighted" Value="True">
                                <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Control.BorderBrush" />
                                <rd:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="#00FFFFFF" />
                            </rd:Trigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="MenuItem.IsHighlighted" Value="True" />
                                    <rd:Condition SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                            </rd:MultiTrigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="MenuItem.IsHighlighted" Value="True" />
                                    <rd:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="HighlightRightBorderOverlay" Value="{StaticResource ë}" Property="Border.Background" />
                            </rd:MultiTrigger>
                            <rd:Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
                                <rd:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                            </rd:Trigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="MenuItem.IsHighlighted" Value="True" />
                                    <rd:Condition Property="UIElement.IsMouseOver" Value="True" />
                                    <rd:Condition SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="False" />
                                    <rd:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="HighlightLeftBorderOverlay" Value="{StaticResource ë}" Property="Border.Background" />
                            </rd:MultiTrigger>
                            <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                                <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Control.BorderBrush" />
                            </rd:Trigger>
                            <rd:Trigger Property="MenuItem.IsPressed" Value="True">
                                <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Control.BorderBrush" />
                                <rd:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="#00FFFFFF" />
                            </rd:Trigger>
                            <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                                <rd:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Opacity" Value="0.5" />
                                <rd:Setter TargetName="PART_ArrowToggleButton" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                            </rd:Trigger>
                            <rd:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="False">
                                <rd:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5" />
                                <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5" />
                                <rd:Setter TargetName="PART_HeaderButton" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                                <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                                <rd:Setter TargetName="HighlightLeftBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="HighlightRightBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="HighlightLeftBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="HighlightRightBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="HighlightLeftBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="HighlightRightBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                                <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                                <rd:Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="PART_SideBarBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="PART_SubMenuScrollViewer" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
                                <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="SubMenuInnerBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="Shape.Fill" />
                                <rd:Setter TargetName="CheckMark" Value="{StaticResource ñ}" Property="Path.Data" />
                                <rd:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Property="Border.BorderBrush" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                                <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                                <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.BorderBrush" />
                                <rd:Setter TargetName="HighlightLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="HighlightRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="HighlightLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="HighlightRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding ElementName=PART_ArrowToggleButton, Path=IsChecked}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Control.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding ElementName=PART_HeaderButton, Path=IsEnabled}" Value="False" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="PART_HeaderButton" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                                <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1" />
                                <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Shape.Fill" />
                            </rd:MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Style.Triggers>
                <rd:Trigger Property="MenuItem.IsCheckable" Value="True">
                    <rd:Setter Property="Control.Template">
                        <rd:Setter.Value>
                            <ControlTemplate TargetType="{x:Type ribbon:RibbonSplitMenuItem}">
                                <Grid Name="MainGrid" SnapsToDevicePixels="True" Margin="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="22" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="14" />
                                    </Grid.ColumnDefinitions>
                                    <Border Name="HighlightLeftBorder" Grid.ColumnSpan="2" CornerRadius="2,0,0,2" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" />
                                    <Border Name="HighlightLeftBorderOverlay" Grid.ColumnSpan="2" CornerRadius="2,0,0,2" BorderBrush="#00FFFFFF" Background="#00FFFFFF" />
                                    <Border Name="PART_SideBarBorder" Margin="-1,-1,0,-1" BorderThickness="0,0,1,0" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                        <Grid Name="SideBarOverlay" Background="{StaticResource ì}">
                                            <Image Name="Image" Margin="4,3,6,1" Width="16" Height="16" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" />
                                            <Border Name="CheckMarkBorder" Background="{TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}" BorderBrush="{TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}" BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1" Width="20" Height="20" CornerRadius="2">
                                                <Path Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Data="{StaticResource ï}" />
                                            </Border>
                                        </Grid>
                                    </Border>
                                    <rcp:RibbonToggleButton x:Name="PART_HeaderButton" Grid.ColumnSpan="2" Style="{StaticResource ù}" Command="{TemplateBinding MenuItem.Command}" CommandParameter="{TemplateBinding MenuItem.CommandParameter}" CommandTarget="{TemplateBinding MenuItem.CommandTarget}" Content="{TemplateBinding HeaderedItemsControl.Header}" ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" SmallImageSource="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" Padding="{TemplateBinding Control.Padding}" Background="#00FFFFFF" Focusable="False" ToolTipTitle="{TemplateBinding ribbon:RibbonMenuItem.ToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonMenuItem.ToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonMenuItem.ToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterImageSource}" KeyTip="{TemplateBinding ribbon:RibbonSplitMenuItem.HeaderKeyTip}" QuickAccessToolBarId="{TemplateBinding ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId}" CanAddToQuickAccessToolBarDirectly="True" />
                                    <Border Name="HighlightRightBorder" Grid.Column="2" CornerRadius="0,2,2,0" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}">
                                        <rcp:RibbonToggleButton x:Name="PART_ArrowToggleButton" Visibility="Collapsed" Focusable="False" Style="{StaticResource ÷}" BorderThickness="1,0,0,0" Background="#00FFFFFF" ToolTipTitle="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterImageSource}" IsChecked="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                                    </Border>
                                    <Border Name="HighlightRightBorderOverlay" Grid.Column="2" CornerRadius="0,2,2,0" Background="#00FFFFFF" BorderBrush="#00FFFFFF" />
                                    <Popup Name="PART_Popup" AllowsTransparency="True" VerticalOffset="-1" Placement="Custom" Focusable="False" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                        <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p18:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" xmlns:p18="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                                            <Border Name="MenuBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                                                <Border Name="SubMenuInnerBorder" Background="{StaticResource Ñ}" CornerRadius="2">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition />
                                                            <RowDefinition Height="Auto" />
                                                        </Grid.RowDefinitions>
                                                        <ScrollViewer Name="PART_SubMenuScrollViewer" Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                                    <Rectangle Name="OpaqueRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=MenuBorder, Path=ActualHeight}" Width="{Binding ElementName=MenuBorder, Path=ActualWidth}" Fill="{Binding ElementName=MenuBorder, Path=Background}" />
                                                                    <Rectangle Name="OverlayRect" Fill="{StaticResource Ñ}" RadiusX="2" RadiusY="2" Height="{Binding ElementName=MenuBorder, Path=ActualHeight}" Width="{Binding ElementName=MenuBorder, Path=ActualWidth}" />
                                                                </Canvas>
                                                                <ItemsPresenter Name="ItemsPresenter" Margin="2" Grid.IsSharedSizeScope="True" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                            </Grid>
                                                        </ScrollViewer>
                                                        <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{StaticResource Ò}" BorderThickness="0,1,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                                            <Thumb Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                                        </Border>
                                                    </Grid>
                                                </Border>
                                            </Border>
                                        </sdsc:SystemDropShadowChrome>
                                    </Popup>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <rd:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                                        <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                        <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                                        <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                        <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                                    </rd:Trigger>
                                    <rd:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="True">
                                        <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                                        <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                                    </rd:Trigger>
                                    <rd:Trigger Property="ItemsControl.HasItems" Value="True">
                                        <rd:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                                    </rd:Trigger>
                                    <rd:MultiTrigger>
                                        <rd:MultiTrigger.Conditions>
                                            <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                                            <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                                        </rd:MultiTrigger.Conditions>
                                        <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                                    </rd:MultiTrigger>
                                    <rd:MultiTrigger>
                                        <rd:MultiTrigger.Conditions>
                                            <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="False" />
                                            <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                                        </rd:MultiTrigger.Conditions>
                                        <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                                        <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}" Property="windows:FrameworkElement.Style" />
                                    </rd:MultiTrigger>
                                    <rd:MultiTrigger>
                                        <rd:MultiTrigger.Conditions>
                                            <rd:Condition Property="ribbon:RibbonMenuItem.IsDropDownPositionedLeft" Value="True" />
                                            <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                                            <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                                        </rd:MultiTrigger.Conditions>
                                        <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource ó}" Property="windows:FrameworkElement.Style" />
                                    </rd:MultiTrigger>
                                    <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                                        <rd:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible" />
                                        <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible" />
                                        <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden" />
                                    </rd:Trigger>
                                    <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
                                        <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                                    </rd:Trigger>
                                    <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId">
                                        <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.CanAddToQuickAccessToolBarDirectly" Value="False" />
                                    </rd:Trigger>
                                    <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                                        <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                                        <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                                    </rd:Trigger>
                                    <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                                        <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                                    </rd:Trigger>
                                    <rd:Trigger Property="MenuItem.IsHighlighted" Value="True">
                                        <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                                        <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                                        <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Control.BorderBrush" />
                                        <rd:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                        <rd:Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="#00FFFFFF" />
                                        <rd:Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="#00FFFFFF" />
                                    </rd:Trigger>
                                    <rd:MultiTrigger>
                                        <rd:MultiTrigger.Conditions>
                                            <rd:Condition Property="MenuItem.IsHighlighted" Value="True" />
                                            <rd:Condition SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="True" />
                                        </rd:MultiTrigger.Conditions>
                                        <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                                        <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                                    </rd:MultiTrigger>
                                    <rd:MultiTrigger>
                                        <rd:MultiTrigger.Conditions>
                                            <rd:Condition Property="MenuItem.IsHighlighted" Value="True" />
                                            <rd:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                                        </rd:MultiTrigger.Conditions>
                                        <rd:Setter TargetName="HighlightRightBorderOverlay" Value="{StaticResource ë}" Property="Border.Background" />
                                    </rd:MultiTrigger>
                                    <rd:Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
                                        <rd:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                                    </rd:Trigger>
                                    <rd:MultiTrigger>
                                        <rd:MultiTrigger.Conditions>
                                            <rd:Condition Property="MenuItem.IsHighlighted" Value="True" />
                                            <rd:Condition Property="UIElement.IsMouseOver" Value="True" />
                                            <rd:Condition SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="False" />
                                            <rd:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                                        </rd:MultiTrigger.Conditions>
                                        <rd:Setter TargetName="HighlightLeftBorderOverlay" Value="{StaticResource ë}" Property="Border.Background" />
                                    </rd:MultiTrigger>
                                    <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                                        <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Control.BorderBrush" />
                                    </rd:Trigger>
                                    <rd:Trigger Property="MenuItem.IsPressed" Value="True">
                                        <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                                        <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                                        <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                                        <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                                        <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Control.BorderBrush" />
                                        <rd:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                        <rd:Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="#00FFFFFF" />
                                        <rd:Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="#00FFFFFF" />
                                    </rd:Trigger>
                                    <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                                        <rd:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Opacity" Value="0.5" />
                                        <rd:Setter TargetName="PART_ArrowToggleButton" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                                    </rd:Trigger>
                                    <rd:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="False">
                                        <rd:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5" />
                                        <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5" />
                                        <rd:Setter TargetName="PART_HeaderButton" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                                    </rd:Trigger>
                                    <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                        <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                                        <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                                        <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                                        <rd:Setter TargetName="HighlightLeftBorder" Property="Border.CornerRadius" Value="0" />
                                        <rd:Setter TargetName="HighlightRightBorder" Property="Border.CornerRadius" Value="0" />
                                        <rd:Setter TargetName="HighlightLeftBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                        <rd:Setter TargetName="HighlightRightBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                        <rd:Setter TargetName="HighlightLeftBorder" Property="Border.Background" Value="#00FFFFFF" />
                                        <rd:Setter TargetName="HighlightRightBorder" Property="Border.Background" Value="#00FFFFFF" />
                                        <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                                        <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                                        <rd:Setter TargetName="SideBarOverlay" Property="Panel.Background" Value="#00FFFFFF" />
                                        <rd:Setter TargetName="PART_SideBarBorder" Property="Border.Background" Value="#00FFFFFF" />
                                        <rd:Setter TargetName="PART_SideBarBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                        <rd:Setter TargetName="PART_SubMenuScrollViewer" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
                                        <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                        <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                                        <rd:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                                        <rd:Setter TargetName="SubMenuInnerBorder" Property="Border.CornerRadius" Value="0" />
                                        <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                        <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                                        <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="Shape.Fill" />
                                        <rd:Setter TargetName="CheckMark" Value="{StaticResource ñ}" Property="Path.Data" />
                                        <rd:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0" />
                                        <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                                        <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Property="Border.BorderBrush" />
                                    </rd:DataTrigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True" />
                                            <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                                        <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                                        <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.BorderBrush" />
                                        <rd:Setter TargetName="HighlightLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                        <rd:Setter TargetName="HighlightRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                        <rd:Setter TargetName="HighlightLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                                        <rd:Setter TargetName="HighlightRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                                        <rd:Setter TargetName="PART_SideBarBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                    </rd:MultiDataTrigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                            <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.BorderBrush" />
                                    </rd:MultiDataTrigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding ElementName=PART_ArrowToggleButton, Path=IsChecked}" Value="True" />
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True" />
                                            <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Control.Background" />
                                    </rd:MultiDataTrigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                                            <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                                    </rd:MultiDataTrigger>
                                    <rd:MultiDataTrigger>
                                        <rd:MultiDataTrigger.Conditions>
                                            <rd:Condition Binding="{Binding ElementName=PART_HeaderButton, Path=IsEnabled}" Value="False" />
                                            <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                        </rd:MultiDataTrigger.Conditions>
                                        <rd:Setter TargetName="PART_HeaderButton" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                                        <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1" />
                                        <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Border.BorderBrush" />
                                        <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Shape.Fill" />
                                    </rd:MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </rd:Setter.Value>
                    </rd:Setter>
                </rd:Trigger>
            </rd:Style.Triggers>
        </rd:Style>
        <rd:Style x:Key="{x:Type ribbon:RibbonTab}" TargetType="{x:Type ribbon:RibbonTab}">
            <rd:Setter Property="controls:KeyTipService.IsKeyTipScope" Value="True" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonTab}">
                        <Grid Name="MainGrid" ClipToBounds="True" Visibility="{windows:TemplateBinding IsSelected, Converter={StaticResource à}}">
                            <Line Name="OuterLeftLine" StrokeThickness="2" X1="0" Y1="0" Y2="0" Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.Background}" X2="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TabHeaderLeft}" />
                            <Line Name="OuterRightLine" StrokeThickness="2" Y1="0" Y2="0" Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.Background}" X1="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TabHeaderRight}" X2="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}" />
                            <ScrollViewer Name="ScrollViewer" Style="{StaticResource Ī}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,1,0,0">
                                        <Rectangle Name="OpaqueRect" Height="{Binding ElementName=ScrollViewer, Path=ActualHeight}" Width="{Binding ElementName=ScrollViewer, Path=ActualWidth}" Fill="{Binding RelativeSource={RelativeSource Self}, Path=(ribbon:RibbonControlService.Ribbon).Background}" />
                                        <Rectangle Name="OverlayRect" Fill="{StaticResource Ù}" Height="{Binding ElementName=ScrollViewer, Path=ActualHeight}" Width="{Binding ElementName=ScrollViewer, Path=ActualWidth}" />
                                        <Rectangle Name="InnerOverlayRect" Fill="{StaticResource Ø}" Height="{Binding ElementName=ScrollViewer, Path=ActualHeight}" Width="{Binding ElementName=ScrollViewer, Path=ActualWidth}" />
                                    </Canvas>
                                    <ItemsPresenter Name="ItemsPresenter" />
                                </Grid>
                            </ScrollViewer>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <rd:Trigger SourceName="ScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                                <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=ScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=ScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                                <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=ScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=ScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                                <rd:Setter TargetName="InnerOverlayRect" Value="{Binding ElementName=ScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                <rd:Setter TargetName="InnerOverlayRect" Value="{Binding ElementName=ScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                            </rd:Trigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ContextualTabGroup}" Value="{x:Null}" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterLeftLine" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonTab}}, Path=Ribbon.BorderBrush}" Property="Shape.Stroke" />
                                <rd:Setter TargetName="OuterRightLine" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonTab}}, Path=Ribbon.BorderBrush}" Property="Shape.Stroke" />
                            </rd:MultiDataTrigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="OuterLeftLine" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Shape.Stroke" />
                                <rd:Setter TargetName="OuterRightLine" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Shape.Stroke" />
                            </rd:DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <rd:Style x:Key="{x:Type ribbon:RibbonTabHeaderItemsControl}" TargetType="{x:Type ribbon:RibbonTabHeaderItemsControl}">
            <rd:Setter Property="Control.Background" Value="#00FFFFFF" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonTabHeaderItemsControl}">
                        <Border Name="MainBorder" Background="{TemplateBinding Control.Background}">
                            <ScrollViewer Name="ScrollViewer" Style="{StaticResource Ī}">
                                <ItemsPresenter Name="ItemsPresenter" />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="MainBorder" Property="Border.Background" Value="#00FFFFFF" />
                            </rd:DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <rd:Style x:Key="{x:Type controls:KeyTipControl}" TargetType="{x:Type controls:KeyTipControl}">
            <rd:Setter Property="Control.Background" Value="{StaticResource È}" />
            <rd:Setter Property="Control.BorderBrush" Value="{StaticResource É}" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="Control.Padding" Value="3,0" />
            <rd:Setter Property="Control.FontSize" Value="{windows:DynamicResource {x:Static SystemFonts.CaptionFontSizeKey}}" />
            <rd:Setter Property="Control.FontStyle" Value="{windows:DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}" />
            <rd:Setter Property="Control.FontWeight" Value="{windows:DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}" />
            <rd:Setter Property="Control.FontFamily" Value="{windows:DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}" />
            <rd:Setter Property="Control.Foreground" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <rd:Setter Property="windows:FrameworkElement.MinWidth" Value="20" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:KeyTipControl}">
                        <Border Name="OuterBorder" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="1">
                            <Border Name="InnerBorder" Padding="{TemplateBinding Control.Padding}" Background="{StaticResource Ê}">
                                <TextBlock Text="{TemplateBinding controls:KeyTipControl.Text}" HorizontalAlignment="Center" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                                <rd:Setter Value="{StaticResource Ë}" TargetName="OuterBorder" Property="TextElement.Foreground" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter Value="{windows:DynamicResource {x:Static SystemColors.InfoTextBrushKey}}" TargetName="OuterBorder" Property="Border.BorderBrush" />
                                <rd:Setter Value="{windows:DynamicResource {x:Static SystemColors.InfoBrushKey}}" TargetName="OuterBorder" Property="Border.Background" />
                                <rd:Setter Value="{windows:DynamicResource {x:Static SystemColors.InfoTextBrushKey}}" TargetName="OuterBorder" Property="TextElement.Foreground" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" TargetName="OuterBorder" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <SolidColorBrush x:Key="â" Color="#FF114EAF" />
        <LinearGradientBrush x:Key="ã" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#90FFFFFF" />
            <GradientStop Offset="0.5" Color="#30FFFFFF" />
            <GradientStop Offset="0.5" Color="Transparent" />
            <GradientStop Offset="1" Color="#70FFFFFF" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ä" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#60FFFFFF" />
            <GradientStop Offset="0.5" Color="#20FFFFFF" />
            <GradientStop Offset="0.5" Color="Transparent" />
            <GradientStop Offset="1" Color="Transparent" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="å" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#A0FFFFFF" />
            <GradientStop Offset="0.5" Color="#60FFFFFF" />
            <GradientStop Offset="0.5" Color="Transparent" />
            <GradientStop Offset="1" Color="#D0FFFFFF" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="æ" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#90FFFFFF" />
            <GradientStop Offset="0.5" Color="#20FFFFFF" />
            <GradientStop Offset="0.5" Color="Transparent" />
            <GradientStop Offset="1" Color="Transparent" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ç" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#A0FFFFFF" />
            <GradientStop Offset="0.2" Color="#90FFFFFF" />
            <GradientStop Offset="0.4" Color="#80FFFFFF" />
            <GradientStop Offset="0.6" Color="#50FFFFFF" />
            <GradientStop Offset="0.8" Color="Transparent" />
            <GradientStop Offset="1" Color="#30FFFFFF" />
        </LinearGradientBrush>
        <RadialGradientBrush x:Key="è">
            <GradientStop Offset="0" Color="LightGray" />
            <GradientStop Offset="0.4" Color="White" />
        </RadialGradientBrush>
        <Geometry x:Key="é">M 0 0 L 2.25 3 L 4.5 0 Z</Geometry>
        <rd:Style x:Key="ê" TargetType="{x:Type ribbon:RibbonToggleButton}">
            <rd:Setter Property="Control.BorderBrush" Value="{StaticResource â}" />
            <rd:Setter Property="Control.Background" Value="{StaticResource â}" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="Control.Foreground" Value="{StaticResource è}" />
            <rd:Setter Property="ButtonBase.ClickMode" Value="Press" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="FocusManager.IsFocusScope" Value="False" />
            <rd:Setter Property="windows:FrameworkElement.VerticalAlignment" Value="Bottom" />
            <rd:Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.ShowDuration" Value="{StaticResource Î}" />
            <rd:Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource Ï}" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonToggleButton}">
                        <Grid SnapsToDevicePixels="True" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}">
                            <Border Name="OuterBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="0,2,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                            <Border Name="MiddleBorder" BorderBrush="#00FFFFFF" Background="{StaticResource ã}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="0,2,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Border Name="InnerBorder" BorderBrush="{StaticResource ä}" Background="#00FFFFFF" BorderThickness="1" CornerRadius="0,2,0,0" />
                            </Border>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Image IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="16" Margin="0,-0.5,0,0" RenderOptions.BitmapScalingMode="NearestNeighbor" RenderOptions.EdgeMode="Aliased" Source="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ribbon:RibbonApplicationMenu}}, Path=SmallImageSource}" />
                                <Path Name="DownArrow" Data="{StaticResource é}" Stroke="{StaticResource ã}" StrokeThickness=".5" Fill="{TemplateBinding Control.Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3.5,0,0,0">
                                    <Path.RenderTransform>
                                        <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                    </Path.RenderTransform>
                                </Path>
                            </StackPanel>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                                    <rd:Condition Property="ToggleButton.IsChecked" Value="False" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="MiddleBorder" Value="{StaticResource ë}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MiddleBorder" Value="{StaticResource å}" Property="Border.Background" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource æ}" Property="Border.BorderBrush" />
                            </rd:MultiTrigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="UIElement.IsMouseOver" Value="True" />
                                    <rd:Condition Property="ToggleButton.IsChecked" Value="False" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="MiddleBorder" Value="{StaticResource ë}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MiddleBorder" Value="{StaticResource å}" Property="Border.Background" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource æ}" Property="Border.BorderBrush" />
                            </rd:MultiTrigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="MiddleBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="MiddleBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="MiddleBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="DownArrow" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Shape.Stroke" />
                                <rd:Setter TargetName="DownArrow" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Property="Shape.Fill" />
                            </rd:DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <rd:Style x:Key="{x:Type ribbon:RibbonApplicationMenu}" TargetType="{x:Type ribbon:RibbonApplicationMenu}">
            <rd:Style.Resources>
                <rd:Style TargetType="{x:Type ribbon:RibbonSeparator}">
                    <rd:Setter Property="windows:FrameworkElement.OverridesDefaultStyle" Value="True" />
                    <rd:Setter Property="UIElement.Focusable" Value="False" />
                    <rd:Setter Property="Control.BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonApplicationMenu}}, Path=Ribbon.BorderBrush}" />
                    <rd:Setter Property="Control.Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonApplicationMenu}}, Path=Ribbon.Background}" />
                    <rd:Setter Property="Control.FontWeight" Value="Bold" />
                    <rd:Setter Property="Control.Template">
                        <rd:Setter.Value>
                            <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
                                <Border Name="MainBorder" BorderThickness="0,1,0,1" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}">
                                    <Border Name="Overlay" Background="{StaticResource ì}">
                                        <TextBlock Name="Text" Margin="2,1,2,1" Text="{TemplateBinding ribbon:RibbonSeparator.Label}" />
                                    </Border>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                        <rd:Setter TargetName="Text" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextBlock.Foreground" />
                                        <rd:Setter TargetName="Overlay" Property="Border.Background" Value="#00FFFFFF" />
                                        <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                                        <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                                    </rd:DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </rd:Setter.Value>
                    </rd:Setter>
                    <rd:Style.Triggers>
                        <rd:Trigger Property="ribbon:RibbonSeparator.Label" Value="{x:Null}">
                            <rd:Setter Property="Control.Template">
                                <rd:Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
                                        <Grid Name="Grid" Margin="1" SnapsToDevicePixels="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                                <ColumnDefinition Width="*" MinWidth="44" />
                                                <ColumnDefinition Width="22" />
                                            </Grid.ColumnDefinitions>
                                            <Line Name="Line" Grid.Column="1" Grid.ColumnSpan="2" X1="0" Y1="0" X2="1" Y2="0" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" Stretch="Fill" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                                <rd:Setter TargetName="Line" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Shape.Stroke" />
                                                <rd:Setter TargetName="Grid" Property="windows:FrameworkElement.Margin" Value="0" />
                                            </rd:DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </rd:Setter.Value>
                            </rd:Setter>
                        </rd:Trigger>
                    </rd:Style.Triggers>
                </rd:Style>
            </rd:Style.Resources>
            <rd:Setter Property="Control.BorderBrush" Value="{StaticResource â}" />
            <rd:Setter Property="Control.Background" Value="{StaticResource â}" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="windows:FrameworkElement.Height" Value="23" />
            <rd:Setter Property="windows:FrameworkElement.Width" Value="56" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonApplicationMenu}">
                        <Grid Name="OuterGrid" Focusable="False" SnapsToDevicePixels="True">
                            <rcp:RibbonToggleButton x:Name="PART_ToggleButton" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" Style="{StaticResource ê}" FocusVisualStyle="{TemplateBinding windows:FrameworkElement.FocusVisualStyle}" ToolTipTitle="{TemplateBinding ribbon:RibbonMenuButton.ToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonMenuButton.ToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonMenuButton.ToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonMenuButton.ToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonMenuButton.ToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonMenuButton.ToolTipFooterImageSource}" SmallImageSource="{TemplateBinding ribbon:RibbonMenuButton.SmallImageSource}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}" />
                            <Border Name="CenterBorder" Height="1" Margin="-1,-1,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Top" />
                            <Popup Name="PART_Popup" AllowsTransparency="True" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" SnapsToDevicePixels="True" IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen}" PlacementTarget="{Binding ElementName=CenterBorder}">
                                <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p16:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" xmlns:p16="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                                    <Grid>
                                        <Border Name="PopupBorder" BorderThickness="1" CornerRadius="2" BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.BorderBrush}" Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.Background}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="24" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <Border Name="HeaderBorder" Background="#00FFFFFF" BorderThickness="0,0,0,1" CornerRadius="2,2,0,0" BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.BorderBrush}" />
                                                <Border Name="HeaderOverlayBorder" BorderBrush="{StaticResource ë}" Background="{StaticResource å}" BorderThickness="0,0,0,1" CornerRadius="2,2,0,0" />
                                                <Grid Grid.Row="1">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="2" />
                                                        <ColumnDefinition Width="300" />
                                                    </Grid.ColumnDefinitions>
                                                    <Border Name="MainPaneBorder" Background="{StaticResource í}">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto" />
                                                                <RowDefinition />
                                                                <RowDefinition Height="Auto" />
                                                            </Grid.RowDefinitions>
                                                            <ScrollViewer Name="PART_SubMenuScrollViewer" Grid.Row="1" ScrollViewer.CanContentScroll="True" Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                                                    <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                                        <Rectangle Name="OpaqueRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=MainPaneBorder, Path=ActualHeight}" Width="{Binding ElementName=MainPaneBorder, Path=ActualWidth}" Fill="{Binding ElementName=MainPaneBorder, Path=Background}" />
                                                                        <Rectangle Name="OverlayRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=MainPaneBorder, Path=ActualHeight}" Width="{Binding ElementName=MainPaneBorder, Path=ActualWidth}" Fill="{Binding ElementName=MainPaneBorder, Path=Background}" />
                                                                    </Canvas>
                                                                    <ItemsPresenter Name="ItemsPresenter" Grid.IsSharedSizeScope="True" />
                                                                </Grid>
                                                            </ScrollViewer>
                                                            <Border Name="ResizeControl" Grid.Row="2" Visibility="Collapsed" Background="{StaticResource Ò}" BorderThickness="0,1,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                                                <Thumb Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                                            </Border>
                                                        </Grid>
                                                    </Border>
                                                    <Border Name="PART_SubmenuPlaceholder" Grid.Column="2" Background="{StaticResource ë}" Height="{Binding ElementName=MainPaneBorder, Path=ActualHeight}">
                                                        <ContentPresenter Name="PART_AuxiliaryPaneContentPresenter" ContentSource="AuxiliaryPaneContent" ContentTemplate="{TemplateBinding ribbon:RibbonApplicationMenu.AuxiliaryPaneContentTemplate}" ContentTemplateSelector="{TemplateBinding ribbon:RibbonApplicationMenu.AuxiliaryPaneContentTemplateSelector}" />
                                                    </Border>
                                                    <Border Name="VerticalBorder" Grid.Column="1" HorizontalAlignment="Left" Background="#FFFFFFFF" Width="2" BorderThickness="1,0,0,0" BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.BorderBrush}" />
                                                    <Border Name="VerticalOverlayBorder" Grid.Column="1" HorizontalAlignment="Left" Background="#00FFFFFF" Width="2" BorderThickness="1,0,0,0" BorderBrush="{StaticResource ë}" />
                                                </Grid>
                                                <Border Name="FooterBorder" Grid.Row="2" Background="#00FFFFFF" BorderThickness="0,1,0,0" CornerRadius="0,0,2,2" BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.BorderBrush}">
                                                    <Border Name="FooterBackgroundOverlayBorder" BorderBrush="#00FFFFFF" Background="{StaticResource ç}" CornerRadius="0,0,2,2">
                                                        <ContentPresenter Name="PART_FooterPaneContentPresenter" Margin="2" MinHeight="12" ContentSource="FooterPaneContent" ContentTemplate="{TemplateBinding ribbon:RibbonApplicationMenu.FooterPaneContentTemplate}" ContentTemplateSelector="{TemplateBinding ribbon:RibbonApplicationMenu.FooterPaneContentTemplateSelector}" />
                                                    </Border>
                                                </Border>
                                                <Border Name="FooterOverlayBorder" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="{StaticResource ë}" Background="#00FFFFFF" BorderThickness="0,1,0,0" CornerRadius="0,0,2,2" />
                                            </Grid>
                                        </Border>
                                        <Canvas>
                                            <rcp:RibbonToggleButton x:Name="PART_PopupToggleButton" Canvas.Top="-24" Canvas.Left="3" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" Style="{StaticResource ê}" Focusable="False" x:AutomationProperties.Name="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(AutomationProperties.Name)}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}" />
                                        </Canvas>
                                    </Grid>
                                </sdsc:SystemDropShadowChrome>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <rd:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                                <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                                <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                            </rd:Trigger>
                            <rd:Trigger Property="ribbon:RibbonMenuButton.HasGallery" Value="True">
                                <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                                <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                            </rd:Trigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="True" />
                                    <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                            </rd:MultiTrigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="False" />
                                    <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                                <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}" Property="windows:FrameworkElement.Style" />
                            </rd:MultiTrigger>
                            <rd:Trigger Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="True">
                                <rd:Setter TargetName="ResizeControl" Property="Grid.Row" Value="0" />
                                <rd:Setter TargetName="ResizeControl" Property="Border.BorderThickness" Value="0,0,0,1" />
                            </rd:Trigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="True" />
                                    <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="True" />
                                    <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Õ}" Property="windows:FrameworkElement.Style" />
                            </rd:MultiTrigger>
                            <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                                <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                                <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                            </rd:Trigger>
                            <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                                <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                                <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                                <rd:Setter TargetName="OuterGrid" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="TextElement.Foreground" />
                                <rd:Setter TargetName="PopupBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="PopupBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="PopupBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="HeaderBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="HeaderBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="HeaderOverlayBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="HeaderOverlayBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="HeaderOverlayBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="MainPaneBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="PART_SubmenuPlaceholder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="VerticalBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="VerticalBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="VerticalOverlayBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="FooterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="FooterBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="FooterOverlayBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="FooterOverlayBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="FooterBackgroundOverlayBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="FooterBackgroundOverlayBorder" Property="Border.CornerRadius" Value="0" />
                                <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                            </rd:DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Style.Triggers>
                <rd:Trigger Property="ribbon:RibbonMenuButton.IsDropDownOpen" Value="True">
                    <rd:Setter Property="ToolTipService.IsEnabled" Value="False" />
                </rd:Trigger>
            </rd:Style.Triggers>
        </rd:Style>
        <ControlTemplate x:Key="õ" TargetType="{x:Type ribbon:RibbonApplicationSplitMenuItem}">
            <Grid Name="MainGrid" SnapsToDevicePixels="True" Margin="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="*" MinWidth="44" />
                    <ColumnDefinition Width="22" />
                </Grid.ColumnDefinitions>
                <Border Name="HighlightLeftBorder" Grid.ColumnSpan="2" CornerRadius="2,0,0,2" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" />
                <Border Name="HighlightLeftBorderOverlay" Grid.ColumnSpan="2" CornerRadius="2,0,0,2" BorderBrush="#00FFFFFF" Background="#00FFFFFF" />
                <Image Name="Image" Margin="6,4,6,4" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                <Border Name="CheckMarkBorder" Background="{TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}" BorderBrush="{TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}" BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1" Width="30" Height="30" CornerRadius="2">
                    <Path Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Data="{StaticResource ï}">
                        <Path.RenderTransform>
                            <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                        </Path.RenderTransform>
                    </Path>
                </Border>
                <rcp:RibbonButton x:Name="PART_HeaderButton" Grid.ColumnSpan="2" Style="{StaticResource ö}" Command="{TemplateBinding MenuItem.Command}" CommandParameter="{TemplateBinding MenuItem.CommandParameter}" CommandTarget="{TemplateBinding MenuItem.CommandTarget}" Content="{TemplateBinding HeaderedItemsControl.Header}" ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" SmallImageSource="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" Padding="{TemplateBinding Control.Padding}" HorizontalContentAlignment="Left" Background="#00FFFFFF" Focusable="False" ToolTipTitle="{TemplateBinding ribbon:RibbonMenuItem.ToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonMenuItem.ToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonMenuItem.ToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterImageSource}" KeyTip="{TemplateBinding ribbon:RibbonSplitMenuItem.HeaderKeyTip}" QuickAccessToolBarId="{TemplateBinding ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId}" CanAddToQuickAccessToolBarDirectly="True" />
                <Border Name="HighlightRightBorder" Grid.Column="2" CornerRadius="0,2,2,0" HorizontalAlignment="Stretch" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}">
                    <rcp:RibbonToggleButton x:Name="PART_ArrowToggleButton" Visibility="Collapsed" Focusable="False" Style="{StaticResource ÷}" BorderThickness="1,0,0,0" Background="#00FFFFFF" ToolTipTitle="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterImageSource}" IsChecked="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                </Border>
                <Border Name="HighlightRightBorderOverlay" Grid.Column="2" CornerRadius="0,2,2,0" HorizontalAlignment="Stretch" BorderBrush="#00FFFFFF" Background="#00FFFFFF" />
                <Popup Name="PART_Popup" AllowsTransparency="True" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Relative" Focusable="False" SnapsToDevicePixels="True" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                    <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p13:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" xmlns:p13="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                        <Grid>
                            <Border Name="PopupBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding Path=Ribbon.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=Ribbon.Background, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Border Name="PopupOverlayBorder" BorderBrush="{StaticResource ë}" Background="{StaticResource í}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ScrollViewer Name="PART_SubMenuScrollViewer" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                <Rectangle Name="OpaqueRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" Fill="{Binding ElementName=PopupBorder, Path=Background}" />
                                                <Rectangle Name="OverlayRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" Fill="{Binding ElementName=PopupOverlayBorder, Path=Background}" />
                                            </Canvas>
                                            <ItemsPresenter Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
                                        </Grid>
                                    </ScrollViewer>
                                    <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{StaticResource Ò}" BorderThickness="0,1,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                        <Thumb Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                    </Border>
                                </Grid>
                            </Border>
                        </Grid>
                    </sdsc:SystemDropShadowChrome>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <rd:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                </rd:Trigger>
                <rd:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="True">
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="False" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                    <rd:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden" />
                </rd:Trigger>
                <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                </rd:Trigger>
                <rd:Trigger Property="ItemsControl.HasItems" Value="True">
                    <rd:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                </rd:Trigger>
                <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId">
                    <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.CanAddToQuickAccessToolBarDirectly" Value="False" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                    <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                    <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsHighlighted" Value="True">
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Control.BorderBrush" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="MenuItem.IsHighlighted" Value="True" />
                        <rd:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="HighlightRightBorderOverlay" Value="{StaticResource ë}" Property="Border.Background" />
                </rd:MultiTrigger>
                <rd:Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
                    <rd:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="MenuItem.IsHighlighted" Value="True" />
                        <rd:Condition SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="False" />
                        <rd:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="HighlightLeftBorderOverlay" Value="{StaticResource ë}" Property="Border.Background" />
                </rd:MultiTrigger>
                <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Control.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsPressed" Value="True">
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Control.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="PART_HeaderButton" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                    <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="HighlightLeftBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="HighlightRightBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="HighlightLeftBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightRightBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightLeftBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightRightBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightLeftBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                    <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                    <rd:Setter TargetName="PopupBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="PopupBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PopupOverlayBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="PopupOverlayBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="Shape.Fill" />
                    <rd:Setter TargetName="CheckMark" Value="{StaticResource ñ}" Property="Path.Data" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Property="Border.BorderBrush" />
                </rd:DataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.BorderBrush" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Shape.Fill" />
                </rd:MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ø" TargetType="{x:Type ribbon:RibbonApplicationSplitMenuItem}">
            <Grid Name="MainGrid" SnapsToDevicePixels="True" Margin="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="*" MinWidth="44" />
                    <ColumnDefinition Width="22" />
                </Grid.ColumnDefinitions>
                <Border Name="HighlightLeftBorder" Grid.ColumnSpan="2" CornerRadius="2,0,0,2" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" />
                <Border Name="HighlightLeftBorderOverlay" Grid.ColumnSpan="2" CornerRadius="2,0,0,2" BorderBrush="#00FFFFFF" Background="#00FFFFFF" />
                <Image Name="Image" Margin="6,4,6,4" Source="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                <Border Name="CheckMarkBorder" Background="{TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}" BorderBrush="{TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}" BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1" Width="30" Height="30" CornerRadius="2">
                    <Path Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Data="{StaticResource ï}">
                        <Path.RenderTransform>
                            <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                        </Path.RenderTransform>
                    </Path>
                </Border>
                <rcp:RibbonToggleButton x:Name="PART_HeaderButton" Grid.ColumnSpan="2" Style="{StaticResource ù}" Command="{TemplateBinding MenuItem.Command}" CommandParameter="{TemplateBinding MenuItem.CommandParameter}" CommandTarget="{TemplateBinding MenuItem.CommandTarget}" Content="{TemplateBinding HeaderedItemsControl.Header}" ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" SmallImageSource="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" Padding="{TemplateBinding Control.Padding}" HorizontalContentAlignment="Left" Background="#00FFFFFF" Focusable="False" ToolTipTitle="{TemplateBinding ribbon:RibbonMenuItem.ToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonMenuItem.ToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonMenuItem.ToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterImageSource}" KeyTip="{TemplateBinding ribbon:RibbonSplitMenuItem.HeaderKeyTip}" QuickAccessToolBarId="{TemplateBinding ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId}" CanAddToQuickAccessToolBarDirectly="True" />
                <Border Name="HighlightRightBorder" Grid.Column="2" CornerRadius="0,2,2,0" HorizontalAlignment="Stretch" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}">
                    <rcp:RibbonToggleButton x:Name="PART_ArrowToggleButton" Visibility="Collapsed" Focusable="False" Style="{StaticResource ÷}" BorderThickness="1,0,0,0" Background="#00FFFFFF" ToolTipTitle="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterImageSource}" IsChecked="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                </Border>
                <Border Name="HighlightRightBorderOverlay" Grid.Column="2" CornerRadius="0,2,2,0" HorizontalAlignment="Stretch" BorderBrush="#00FFFFFF" Background="#00FFFFFF" />
                <Popup Name="PART_Popup" AllowsTransparency="True" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Relative" Focusable="False" SnapsToDevicePixels="True" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                    <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p13:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" xmlns:p13="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                        <Grid>
                            <Border Name="PopupBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding Path=Ribbon.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Path=Ribbon.Background, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Border Name="PopupOverlayBorder" BorderBrush="{StaticResource ë}" Background="{StaticResource í}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ScrollViewer Name="PART_SubMenuScrollViewer" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                <Rectangle Name="OpaqueRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" Fill="{Binding ElementName=PopupBorder, Path=Background}" />
                                                <Rectangle Name="OverlayRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" Fill="{Binding ElementName=PopupOverlayBorder, Path=Background}" />
                                            </Canvas>
                                            <ItemsPresenter Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
                                        </Grid>
                                    </ScrollViewer>
                                    <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{StaticResource Ò}" BorderThickness="0,1,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                        <Thumb Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                    </Border>
                                </Grid>
                            </Border>
                        </Grid>
                    </sdsc:SystemDropShadowChrome>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <rd:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                </rd:Trigger>
                <rd:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="True">
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="False" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                    <rd:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden" />
                </rd:Trigger>
                <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                </rd:Trigger>
                <rd:Trigger Property="ItemsControl.HasItems" Value="True">
                    <rd:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                </rd:Trigger>
                <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId">
                    <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.CanAddToQuickAccessToolBarDirectly" Value="False" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                    <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                    <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsHighlighted" Value="True">
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Control.BorderBrush" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="MenuItem.IsHighlighted" Value="True" />
                        <rd:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="HighlightRightBorderOverlay" Value="{StaticResource ë}" Property="Border.Background" />
                </rd:MultiTrigger>
                <rd:Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
                    <rd:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="MenuItem.IsHighlighted" Value="True" />
                        <rd:Condition SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="False" />
                        <rd:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="HighlightLeftBorderOverlay" Value="{StaticResource ë}" Property="Border.Background" />
                </rd:MultiTrigger>
                <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Control.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsPressed" Value="True">
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Control.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="PART_HeaderButton" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                    <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="HighlightLeftBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="HighlightRightBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="HighlightLeftBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightRightBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightLeftBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightRightBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightLeftBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                    <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                    <rd:Setter TargetName="PopupBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="PopupBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PopupOverlayBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="PopupOverlayBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="Shape.Fill" />
                    <rd:Setter TargetName="CheckMark" Value="{StaticResource ñ}" Property="Path.Data" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Property="Border.BorderBrush" />
                </rd:DataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.BorderBrush" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Shape.Fill" />
                </rd:MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ú" TargetType="{x:Type ribbon:RibbonApplicationSplitMenuItem}">
            <Grid Name="MainGrid" Margin="1" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="44" SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="22" />
                </Grid.ColumnDefinitions>
                <Border Name="HighlightLeftBorder" Grid.ColumnSpan="2" CornerRadius="2,0,0,2" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" />
                <Border Name="HighlightLeftBorderOverlay" Grid.ColumnSpan="2" CornerRadius="2,0,0,2" BorderBrush="#00FFFFFF" Background="#00FFFFFF" />
                <Image Name="Image" Margin="4,3,6,1" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                <Border Name="CheckMarkBorder" Background="{TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}" BorderBrush="{TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}" BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1" Width="30" Height="30" CornerRadius="2">
                    <Path Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Data="{StaticResource ï}">
                        <Path.RenderTransform>
                            <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                        </Path.RenderTransform>
                    </Path>
                </Border>
                <rcp:RibbonButton x:Name="PART_HeaderButton" Grid.ColumnSpan="2" Style="{StaticResource ö}" Command="{TemplateBinding MenuItem.Command}" CommandParameter="{TemplateBinding MenuItem.CommandParameter}" CommandTarget="{TemplateBinding MenuItem.CommandTarget}" Content="{TemplateBinding HeaderedItemsControl.Header}" ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" SmallImageSource="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" Padding="{TemplateBinding Control.Padding}" HorizontalContentAlignment="Left" Background="#00FFFFFF" Focusable="False" ToolTipTitle="{TemplateBinding ribbon:RibbonMenuItem.ToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonMenuItem.ToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonMenuItem.ToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterImageSource}" KeyTip="{TemplateBinding ribbon:RibbonSplitMenuItem.HeaderKeyTip}" QuickAccessToolBarId="{TemplateBinding ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId}" CanAddToQuickAccessToolBarDirectly="True" />
                <Border Name="HighlightRightBorder" Grid.Column="2" CornerRadius="0,2,2,0" HorizontalAlignment="Stretch" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}">
                    <rcp:RibbonToggleButton x:Name="PART_ArrowToggleButton" Visibility="Collapsed" Focusable="False" Style="{StaticResource ÷}" BorderThickness="1,0,0,0" Background="#00FFFFFF" ToolTipTitle="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterImageSource}" IsChecked="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                </Border>
                <Border Name="HighlightRightBorderOverlay" Grid.Column="2" CornerRadius="0,2,2,0" HorizontalAlignment="Stretch" BorderBrush="#00FFFFFF" Background="#00FFFFFF" />
                <Popup Name="PART_Popup" AllowsTransparency="True" VerticalOffset="-1" Placement="Custom" Focusable="False" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" SnapsToDevicePixels="True" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                    <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p13:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" xmlns:p13="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                        <Border Name="MenuBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ScrollViewer Name="PART_SubMenuScrollViewer" Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <Rectangle Name="OpaqueRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" Fill="{Binding ElementName=PopupBorder, Path=Background}" />
                                            <Rectangle Name="OverlayRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" Fill="{Binding ElementName=PopupOverlayBorder, Path=Background}" />
                                            <Rectangle Name="InnerOverlayRect" Fill="{StaticResource Ñ}" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" />
                                        </Canvas>
                                        <ItemsPresenter Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
                                    </Grid>
                                </ScrollViewer>
                                <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{StaticResource Ò}" BorderThickness="0,1,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                    <Thumb Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                </Border>
                            </Grid>
                        </Border>
                    </sdsc:SystemDropShadowChrome>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <rd:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                    <rd:Setter TargetName="InnerOverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="InnerOverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                </rd:Trigger>
                <rd:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="True">
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="False" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.IsDropDownPositionedLeft" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource ó}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                    <rd:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden" />
                </rd:Trigger>
                <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                </rd:Trigger>
                <rd:Trigger Property="ItemsControl.HasItems" Value="True">
                    <rd:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                </rd:Trigger>
                <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId">
                    <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.CanAddToQuickAccessToolBarDirectly" Value="False" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                    <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                    <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsHighlighted" Value="True">
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Control.BorderBrush" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="MenuItem.IsHighlighted" Value="True" />
                        <rd:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="HighlightRightBorderOverlay" Value="{StaticResource ë}" Property="Border.Background" />
                </rd:MultiTrigger>
                <rd:Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
                    <rd:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="MenuItem.IsHighlighted" Value="True" />
                        <rd:Condition SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="False" />
                        <rd:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="HighlightLeftBorderOverlay" Value="{StaticResource ë}" Property="Border.Background" />
                </rd:MultiTrigger>
                <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Control.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsPressed" Value="True">
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Control.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="PART_HeaderButton" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                    <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="HighlightLeftBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="HighlightRightBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="HighlightLeftBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightRightBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightLeftBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightRightBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightLeftBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                    <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                    <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="Shape.Fill" />
                    <rd:Setter TargetName="CheckMark" Value="{StaticResource ñ}" Property="Path.Data" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Property="Border.BorderBrush" />
                </rd:DataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.BorderBrush" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Shape.Fill" />
                </rd:MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="û" TargetType="{x:Type ribbon:RibbonApplicationSplitMenuItem}">
            <Grid Name="MainGrid" Margin="1" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="44" SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="22" />
                </Grid.ColumnDefinitions>
                <Border Name="HighlightLeftBorder" Grid.ColumnSpan="2" CornerRadius="2,0,0,2" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" />
                <Border Name="HighlightLeftBorderOverlay" Grid.ColumnSpan="2" CornerRadius="2,0,0,2" BorderBrush="#00FFFFFF" Background="#00FFFFFF" />
                <Image Name="Image" Margin="4,3,6,1" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                <Border Name="CheckMarkBorder" Background="{TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}" BorderBrush="{TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}" BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1" Width="30" Height="30" CornerRadius="2">
                    <Path Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Data="{StaticResource ï}">
                        <Path.RenderTransform>
                            <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                        </Path.RenderTransform>
                    </Path>
                </Border>
                <rcp:RibbonToggleButton x:Name="PART_HeaderButton" Grid.ColumnSpan="2" Style="{StaticResource ù}" Command="{TemplateBinding MenuItem.Command}" CommandParameter="{TemplateBinding MenuItem.CommandParameter}" CommandTarget="{TemplateBinding MenuItem.CommandTarget}" Content="{TemplateBinding HeaderedItemsControl.Header}" ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" SmallImageSource="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" Padding="{TemplateBinding Control.Padding}" HorizontalContentAlignment="Left" Background="#00FFFFFF" Focusable="False" ToolTipTitle="{TemplateBinding ribbon:RibbonMenuItem.ToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonMenuItem.ToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonMenuItem.ToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterImageSource}" KeyTip="{TemplateBinding ribbon:RibbonSplitMenuItem.HeaderKeyTip}" QuickAccessToolBarId="{TemplateBinding ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId}" CanAddToQuickAccessToolBarDirectly="True" />
                <Border Name="HighlightRightBorder" Grid.Column="2" CornerRadius="0,2,2,0" HorizontalAlignment="Stretch" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}">
                    <rcp:RibbonToggleButton x:Name="PART_ArrowToggleButton" Visibility="Collapsed" Focusable="False" Style="{StaticResource ÷}" BorderThickness="1,0,0,0" Background="#00FFFFFF" ToolTipTitle="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterImageSource}" IsChecked="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                </Border>
                <Border Name="HighlightRightBorderOverlay" Grid.Column="2" CornerRadius="0,2,2,0" HorizontalAlignment="Stretch" BorderBrush="#00FFFFFF" Background="#00FFFFFF" />
                <Popup Name="PART_Popup" AllowsTransparency="True" VerticalOffset="-1" Placement="Custom" Focusable="False" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" SnapsToDevicePixels="True" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                    <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p13:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" xmlns:p13="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                        <Border Name="MenuBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ScrollViewer Name="PART_SubMenuScrollViewer" Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <Rectangle Name="OpaqueRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" Fill="{Binding ElementName=PopupBorder, Path=Background}" />
                                            <Rectangle Name="OverlayRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" Fill="{Binding ElementName=PopupOverlayBorder, Path=Background}" />
                                            <Rectangle Name="InnerOverlayRect" Fill="{StaticResource Ñ}" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" />
                                        </Canvas>
                                        <ItemsPresenter Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
                                    </Grid>
                                </ScrollViewer>
                                <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{StaticResource Ò}" BorderThickness="0,1,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                    <Thumb Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                </Border>
                            </Grid>
                        </Border>
                    </sdsc:SystemDropShadowChrome>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <rd:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                    <rd:Setter TargetName="InnerOverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="InnerOverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                </rd:Trigger>
                <rd:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="True">
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="False" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.IsDropDownPositionedLeft" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource ó}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                    <rd:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden" />
                </rd:Trigger>
                <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                </rd:Trigger>
                <rd:Trigger Property="ItemsControl.HasItems" Value="True">
                    <rd:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                </rd:Trigger>
                <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId">
                    <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.CanAddToQuickAccessToolBarDirectly" Value="False" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                    <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                    <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsHighlighted" Value="True">
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Control.BorderBrush" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="MenuItem.IsHighlighted" Value="True" />
                        <rd:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="HighlightRightBorderOverlay" Value="{StaticResource ë}" Property="Border.Background" />
                </rd:MultiTrigger>
                <rd:Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
                    <rd:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="MenuItem.IsHighlighted" Value="True" />
                        <rd:Condition SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="False" />
                        <rd:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="HighlightLeftBorderOverlay" Value="{StaticResource ë}" Property="Border.Background" />
                </rd:MultiTrigger>
                <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Control.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsPressed" Value="True">
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Control.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="PART_HeaderButton" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                    <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="HighlightLeftBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="HighlightRightBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="HighlightLeftBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightRightBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightLeftBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightRightBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightLeftBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                    <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                    <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="Shape.Fill" />
                    <rd:Setter TargetName="CheckMark" Value="{StaticResource ñ}" Property="Path.Data" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Property="Border.BorderBrush" />
                </rd:DataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.BorderBrush" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Shape.Fill" />
                </rd:MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ü" TargetType="{x:Type ribbon:RibbonApplicationSplitMenuItem}">
            <Grid Name="MainGrid" Margin="1" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <Border Name="HighlightLeftBorder" CornerRadius="2,0,0,2" Grid.ColumnSpan="4" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" />
                <Border Name="HighlightLeftBorderOverlay" CornerRadius="2,0,0,2" Grid.ColumnSpan="4" BorderBrush="#00FFFFFF" Background="#00FFFFFF" />
                <Image Name="Image" Margin="1" Width="16" Height="16" Source="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" VerticalAlignment="Center" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                <Border Name="CheckMarkBorder" Background="{TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}" BorderBrush="{TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}" BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1" Width="20" Height="20" CornerRadius="2">
                    <Path Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Data="{StaticResource ï}" />
                </Border>
                <rcp:RibbonButton x:Name="PART_HeaderButton" Grid.ColumnSpan="4" Style="{StaticResource ö}" Command="{TemplateBinding MenuItem.Command}" CommandParameter="{TemplateBinding MenuItem.CommandParameter}" CommandTarget="{TemplateBinding MenuItem.CommandTarget}" Content="{TemplateBinding HeaderedItemsControl.Header}" ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" SmallImageSource="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" Padding="{TemplateBinding Control.Padding}" HorizontalContentAlignment="Left" Background="#00FFFFFF" Focusable="False" ToolTipTitle="{TemplateBinding ribbon:RibbonMenuItem.ToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonMenuItem.ToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonMenuItem.ToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterImageSource}" KeyTip="{TemplateBinding ribbon:RibbonSplitMenuItem.HeaderKeyTip}" QuickAccessToolBarId="{TemplateBinding ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId}" CanAddToQuickAccessToolBarDirectly="True" />
                <Border Name="HighlightRightBorder" Grid.Column="4" CornerRadius="0,2,2,0" HorizontalAlignment="Stretch" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}">
                    <rcp:RibbonToggleButton x:Name="PART_ArrowToggleButton" Visibility="Collapsed" Focusable="False" Style="{StaticResource ÷}" BorderThickness="1,0,0,0" Background="#00FFFFFF" ToolTipTitle="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterImageSource}" IsChecked="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                </Border>
                <Border Name="HighlightRightBorderOverlay" Grid.Column="4" CornerRadius="0,2,2,0" HorizontalAlignment="Stretch" BorderBrush="#00FFFFFF" Background="#00FFFFFF" />
                <Popup Name="PART_Popup" AllowsTransparency="True" VerticalOffset="-1" Placement="Custom" Focusable="False" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" SnapsToDevicePixels="True" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                    <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p13:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" xmlns:p13="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                        <Border Name="MenuBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ScrollViewer Name="PART_SubMenuScrollViewer" Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <Rectangle Name="OpaqueRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" Fill="{Binding ElementName=PopupBorder, Path=Background}" />
                                            <Rectangle Name="OverlayRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" Fill="{Binding ElementName=PopupOverlayBorder, Path=Background}" />
                                            <Rectangle Name="InnerOverlayRect" Fill="{StaticResource Ñ}" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" />
                                        </Canvas>
                                        <ItemsPresenter Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
                                    </Grid>
                                </ScrollViewer>
                                <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{StaticResource Ò}" BorderThickness="0,1,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                    <Thumb Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                </Border>
                            </Grid>
                        </Border>
                    </sdsc:SystemDropShadowChrome>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <rd:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                    <rd:Setter TargetName="InnerOverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="InnerOverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                </rd:Trigger>
                <rd:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="True">
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="False" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.IsDropDownPositionedLeft" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource ó}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                    <rd:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden" />
                </rd:Trigger>
                <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                </rd:Trigger>
                <rd:Trigger Property="ItemsControl.HasItems" Value="True">
                    <rd:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                </rd:Trigger>
                <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId">
                    <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonButton.CanAddToQuickAccessToolBarDirectly" Value="False" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                    <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                    <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsHighlighted" Value="True">
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Control.BorderBrush" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="MenuItem.IsHighlighted" Value="True" />
                        <rd:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="HighlightRightBorderOverlay" Value="{StaticResource ë}" Property="Border.Background" />
                </rd:MultiTrigger>
                <rd:Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
                    <rd:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="MenuItem.IsHighlighted" Value="True" />
                        <rd:Condition SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="False" />
                        <rd:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="HighlightLeftBorderOverlay" Value="{StaticResource ë}" Property="Border.Background" />
                </rd:MultiTrigger>
                <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Control.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsPressed" Value="True">
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Control.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="PART_HeaderButton" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                    <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="HighlightLeftBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="HighlightRightBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="HighlightLeftBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightRightBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightLeftBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightRightBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightLeftBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                    <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                    <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="Shape.Fill" />
                    <rd:Setter TargetName="CheckMark" Value="{StaticResource ñ}" Property="Path.Data" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Property="Border.BorderBrush" />
                </rd:DataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.BorderBrush" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Shape.Fill" />
                </rd:MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ý" TargetType="{x:Type ribbon:RibbonApplicationSplitMenuItem}">
            <Grid Name="MainGrid" Margin="1" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <Border Name="HighlightLeftBorder" CornerRadius="2,0,0,2" Grid.ColumnSpan="4" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" />
                <Border Name="HighlightLeftBorderOverlay" CornerRadius="2,0,0,2" Grid.ColumnSpan="4" BorderBrush="#00FFFFFF" Background="#00FFFFFF" />
                <Image Name="Image" Margin="1" Width="16" Height="16" Source="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" VerticalAlignment="Center" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                <Border Name="CheckMarkBorder" Background="{TemplateBinding ribbon:RibbonMenuItem.CheckedBackground}" BorderBrush="{TemplateBinding ribbon:RibbonMenuItem.CheckedBorderBrush}" BorderThickness="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1" Width="20" Height="20" CornerRadius="2">
                    <Path Name="CheckMark" Margin="4,0,6,0" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Data="{StaticResource ï}" />
                </Border>
                <rcp:RibbonToggleButton x:Name="PART_HeaderButton" Grid.ColumnSpan="4" Style="{StaticResource ù}" Command="{TemplateBinding MenuItem.Command}" CommandParameter="{TemplateBinding MenuItem.CommandParameter}" CommandTarget="{TemplateBinding MenuItem.CommandTarget}" Content="{TemplateBinding HeaderedItemsControl.Header}" ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" SmallImageSource="{TemplateBinding ribbon:RibbonMenuItem.ImageSource}" Padding="{TemplateBinding Control.Padding}" HorizontalContentAlignment="Left" Background="#00FFFFFF" Focusable="False" ToolTipTitle="{TemplateBinding ribbon:RibbonMenuItem.ToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonMenuItem.ToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonMenuItem.ToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonMenuItem.ToolTipFooterImageSource}" KeyTip="{TemplateBinding ribbon:RibbonSplitMenuItem.HeaderKeyTip}" QuickAccessToolBarId="{TemplateBinding ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId}" CanAddToQuickAccessToolBarDirectly="True" />
                <Border Name="HighlightRightBorder" Grid.Column="4" CornerRadius="0,2,2,0" HorizontalAlignment="Stretch" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}">
                    <rcp:RibbonToggleButton x:Name="PART_ArrowToggleButton" Visibility="Collapsed" Focusable="False" Style="{StaticResource ÷}" BorderThickness="1,0,0,0" Background="#00FFFFFF" ToolTipTitle="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipTitle}" ToolTipDescription="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipDescription}" ToolTipImageSource="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding ribbon:RibbonSplitMenuItem.DropDownToolTipFooterImageSource}" IsChecked="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                </Border>
                <Border Name="HighlightRightBorderOverlay" Grid.Column="4" CornerRadius="0,2,2,0" HorizontalAlignment="Stretch" BorderBrush="#00FFFFFF" Background="#00FFFFFF" />
                <Popup Name="PART_Popup" AllowsTransparency="True" VerticalOffset="-1" Placement="Custom" Focusable="False" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" SnapsToDevicePixels="True" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                    <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p13:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" xmlns:p13="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                        <Border Name="MenuBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ScrollViewer Name="PART_SubMenuScrollViewer" Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <Rectangle Name="OpaqueRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" Fill="{Binding ElementName=PopupBorder, Path=Background}" />
                                            <Rectangle Name="OverlayRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" Fill="{Binding ElementName=PopupOverlayBorder, Path=Background}" />
                                            <Rectangle Name="InnerOverlayRect" Fill="{StaticResource Ñ}" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PopupBorder, Path=ActualHeight}" Width="{Binding ElementName=PopupBorder, Path=ActualWidth}" />
                                        </Canvas>
                                        <ItemsPresenter Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
                                    </Grid>
                                </ScrollViewer>
                                <Border Name="ResizeControl" Grid.Row="1" Visibility="Collapsed" Background="{StaticResource Ò}" BorderThickness="0,1,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                    <Thumb Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                </Border>
                            </Grid>
                        </Border>
                    </sdsc:SystemDropShadowChrome>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <rd:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                    <rd:Setter TargetName="InnerOverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="InnerOverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                </rd:Trigger>
                <rd:Trigger Property="ribbon:RibbonMenuItem.HasGallery" Value="True">
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="False" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuItem.IsDropDownPositionedLeft" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuItem.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource ó}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                    <rd:Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Hidden" />
                </rd:Trigger>
                <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonMenuItem.ImageSource">
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                </rd:Trigger>
                <rd:Trigger Property="ItemsControl.HasItems" Value="True">
                    <rd:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                </rd:Trigger>
                <rd:Trigger Value="{x:Null}" Property="ribbon:RibbonSplitMenuItem.HeaderQuickAccessToolBarId">
                    <rd:Setter TargetName="PART_HeaderButton" Property="ribbon:RibbonToggleButton.CanAddToQuickAccessToolBarDirectly" Value="False" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                    <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                    <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsHighlighted" Value="True">
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Control.BorderBrush" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="MenuItem.IsHighlighted" Value="True" />
                        <rd:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="HighlightRightBorderOverlay" Value="{StaticResource ë}" Property="Border.Background" />
                </rd:MultiTrigger>
                <rd:Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
                    <rd:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="MenuItem.IsHighlighted" Value="True" />
                        <rd:Condition SourceName="PART_HeaderButton" Property="UIElement.IsMouseOver" Value="False" />
                        <rd:Condition SourceName="PART_ArrowToggleButton" Property="UIElement.Visibility" Value="Visible" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="HighlightLeftBorderOverlay" Value="{StaticResource ë}" Property="Border.Background" />
                </rd:MultiTrigger>
                <rd:Trigger Property="MenuItem.IsChecked" Value="True">
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Control.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="MenuItem.IsPressed" Value="True">
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Control.BorderBrush" />
                </rd:Trigger>
                <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="PART_ArrowToggleButton" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_HeaderButton" Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="PART_HeaderButton" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                    <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="HighlightLeftBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="HighlightRightBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="HighlightLeftBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightRightBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightLeftBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightRightBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightLeftBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="HighlightRightBorderOverlay" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                    <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                    <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="Shape.Fill" />
                    <rd:Setter TargetName="CheckMark" Value="{StaticResource ñ}" Property="Path.Data" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Property="Border.BorderBrush" />
                </rd:DataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsHighlighted}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.BorderBrush" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="HighlightLeftBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="HighlightRightBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="PART_ArrowToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                    <rd:Setter TargetName="CheckMarkBorder" Property="UIElement.Opacity" Value="1" />
                    <rd:Setter TargetName="CheckMarkBorder" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="CheckMark" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Shape.Fill" />
                </rd:MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <rd:Style x:Key="{x:Type ribbon:RibbonApplicationSplitMenuItem}" TargetType="{x:Type ribbon:RibbonApplicationSplitMenuItem}">
            <rd:Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <rd:Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <rd:Setter Property="Control.Background" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="Control.Padding" Value="3,2,3,2" />
            <rd:Setter Property="ribbon:RibbonMenuItem.MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.MouseOverBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.PressedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.PressedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.CheckedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuItem.CheckedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}" />
            <rd:Setter Property="ribbon:RibbonControlService.FocusedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonControlService.FocusedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}" />
            <rd:Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.ShowDuration" Value="{StaticResource Î}" />
            <rd:Setter Property="ToolTipService.IsEnabled" Value="False" />
            <rd:Setter Property="Control.Template" Value="{StaticResource õ}" />
            <rd:Style.Triggers>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonApplicationSplitMenuItem.Level" Value="Top" />
                        <rd:Condition Property="MenuItem.IsCheckable" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter Property="Control.Template" Value="{StaticResource ø}" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonApplicationSplitMenuItem.Level" Value="Middle" />
                        <rd:Condition Property="MenuItem.IsCheckable" Value="False" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter Property="Control.Template" Value="{StaticResource ú}" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonApplicationSplitMenuItem.Level" Value="Middle" />
                        <rd:Condition Property="MenuItem.IsCheckable" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter Property="Control.Template" Value="{StaticResource û}" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonApplicationSplitMenuItem.Level" Value="Sub" />
                        <rd:Condition Property="MenuItem.IsCheckable" Value="False" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter Property="Control.Template" Value="{StaticResource ü}" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonApplicationSplitMenuItem.Level" Value="Sub" />
                        <rd:Condition Property="MenuItem.IsCheckable" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter Property="Control.Template" Value="{StaticResource ý}" />
                </rd:MultiTrigger>
            </rd:Style.Triggers>
        </rd:Style>
        <rd:Style x:Key="ÿ" TargetType="{x:Type TextBox}">
            <rd:Setter Property="windows:FrameworkElement.OverridesDefaultStyle" Value="True" />
            <rd:Setter Property="UIElement.AllowDrop" Value="True" />
            <rd:Setter Property="windows:FrameworkElement.MinWidth" Value="0" />
            <rd:Setter Property="windows:FrameworkElement.MinHeight" Value="0" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer Name="PART_ContentHost" VerticalAlignment="Center" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden" Background="#00FFFFFF">
                            <ScrollViewer.ContentTemplate>
                                <rd:DataTemplate>
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <Rectangle Name="OpaqueRect" Height="{Binding ElementName=PART_ContentHost, Path=ActualHeight}" Width="{Binding ElementName=PART_ContentHost, Path=ActualWidth}" Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:Ribbon}}, Path=Background}" />
                                            <Rectangle Name="OverlayRect" Height="{Binding ElementName=PART_ContentHost, Path=ActualHeight}" Width="{Binding ElementName=PART_ContentHost, Path=ActualWidth}" Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonComboBox}}, Path=Background}" />
                                        </Canvas>
                                        <ContentPresenter Content="{Binding}" />
                                    </Grid>
                                    <rd:DataTemplate.Triggers>
                                        <rd:DataTrigger Value="false" Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollViewer}}, Path=(ScrollViewer.CanContentScroll)}">
                                            <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                            <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                                            <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                            <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                                        </rd:DataTrigger>
                                        <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                            <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                                        </rd:DataTrigger>
                                    </rd:DataTemplate.Triggers>
                                </rd:DataTemplate>
                            </ScrollViewer.ContentTemplate>
                        </ScrollViewer>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <LinearGradientBrush x:Key="Ā" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#E4F0FE" Offset="0" />
            <GradientStop Color="#E4F0FE" Offset="0.49" />
            <GradientStop Color="#CFDFF3" Offset="0.5" />
            <GradientStop Color="#E8F1FD" Offset="1.0" />
        </LinearGradientBrush>
        <rd:Style x:Key="ā" TargetType="{x:Type ribbon:RibbonToggleButton}">
            <rd:Setter Property="ribbon:RibbonToggleButton.MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.MouseOverBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.PressedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.PressedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.CheckedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.CheckedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.FocusedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.FocusedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}" />
            <rd:Setter Property="ButtonBase.ClickMode" Value="Press" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonToggleButton}">
                        <Grid Background="#00FFFFFF">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="ToggleButtonGroup" />
                            </Grid.ColumnDefinitions>
                            <Border Name="OuterBorder" Grid.Column="1" Width="14" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
                                <Border Name="InnerBorder" Background="#00FFFFFF" BorderBrush="#00FFFFFF" BorderThickness="1" SnapsToDevicePixels="True">
                                    <Path Name="Arrow" Fill="{TemplateBinding Control.Foreground}" Data="{StaticResource Ð}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <rd:Trigger Property="UIElement.IsMouseOver" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ë}" Property="Border.BorderBrush" />
                            </rd:Trigger>
                            <rd:Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ë}" Property="Border.BorderBrush" />
                            </rd:Trigger>
                            <rd:Trigger Property="ToggleButton.IsChecked" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource Ă}" Property="Border.BorderBrush" />
                            </rd:Trigger>
                            <rd:Trigger Property="ButtonBase.IsPressed" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                            </rd:Trigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="Arrow" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Shape.Fill" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="Arrow" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Shape.Fill" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="Arrow" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Shape.Fill" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="Arrow" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Shape.Fill" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <rd:Style x:Key="ă" TargetType="{x:Type ribbon:RibbonToggleButton}">
            <rd:Setter Property="ribbon:RibbonToggleButton.MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.MouseOverBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.PressedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.PressedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.CheckedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.CheckedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.CheckedBackground}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.FocusedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonToggleButton.FocusedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}" />
            <rd:Setter Property="ButtonBase.ClickMode" Value="Press" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonToggleButton}">
                        <Border Name="OuterBorder" Width="14" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
                            <Border Name="InnerBorder" Background="#00FFFFFF" BorderBrush="#00FFFFFF" BorderThickness="1" SnapsToDevicePixels="True">
                                <Path Name="Arrow" Fill="{TemplateBinding Control.Foreground}" Data="{StaticResource Ð}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <rd:Trigger Property="UIElement.IsMouseOver" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource ë}" Property="Border.BorderBrush" />
                            </rd:Trigger>
                            <rd:Trigger Property="ToggleButton.IsChecked" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Value="{StaticResource Ă}" Property="Border.BorderBrush" />
                            </rd:Trigger>
                            <rd:Trigger Property="ButtonBase.IsPressed" Value="True">
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                            </rd:Trigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="Arrow" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Shape.Fill" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="Arrow" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Shape.Fill" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF" />
                                <rd:Setter TargetName="Arrow" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Shape.Fill" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="OuterBorder" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <ControlTemplate x:Key="Ą" TargetType="{x:Type ribbon:RibbonComboBox}">
            <Border Name="MainBorder">
                <Grid Margin="1,0,1,0" SnapsToDevicePixels="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Name="OuterTextColumn" Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Image Name="Image" Source="{TemplateBinding ribbon:RibbonMenuButton.LargeImageSource}" RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Grid.Row="0" Grid.Column="1" Margin="1" Width="32" Height="32" />
                    <Grid Name="Grid" Grid.Row="1" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Name="TextColumn" Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid Name="TwoLineTextPanel" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <rcp:RibbonTwoLineText x:Name="TwoLineText" Text="{TemplateBinding ribbon:RibbonMenuButton.Label}" TextAlignment="Center" LineHeight="13px" LineStackingStrategy="BlockLineHeight" Margin="2,0,2,0" />
                            <Rectangle Name="FocusVisual" Margin="1" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" Visibility="Collapsed" />
                        </Grid>
                        <Border Name="Border" Grid.Column="1" Grid.ColumnSpan="2" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" Height="{StaticResource ą}" />
                        <Grid Grid.Column="1" Height="{StaticResource ą}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox Name="PART_EditableTextBox" Width="{TemplateBinding ribbon:RibbonComboBox.SelectionBoxWidth}" Margin="{TemplateBinding Control.Padding}" Style="{StaticResource ÿ}" IsReadOnly="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" />
                            <rcp:RibbonToggleButton x:Name="PART_ToggleButton" Grid.Column="1" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="#00FFFFFF" BorderBrush="#00FFFFFF" Style="{StaticResource ă}" CheckedBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}" CheckedBackground="{TemplateBinding ribbon:RibbonMenuButton.PressedBackground}" PressedBackground="{TemplateBinding ribbon:RibbonMenuButton.PressedBackground}" PressedBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}" IsTabStop="False" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </Grid>
                    <Popup Name="PART_Popup" HorizontalOffset="1" VerticalOffset="-1" AllowsTransparency="True" Placement="Bottom" Focusable="False" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" PlacementTarget="{Binding ElementName=Border}" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                        <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p14:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" MinWidth="{Binding ElementName=Border, Path=ActualWidth}" xmlns:p14="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                            <Border Name="MenuBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                                <Border Name="SubMenuInnerBorder" Background="{StaticResource Ñ}" CornerRadius="2">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <ItemsPresenter Name="ItemsPresenter" Grid.Row="1" Grid.IsSharedSizeScope="True" Margin="1" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                        <Border Name="ResizeControl" Grid.Row="2" Visibility="Collapsed" Background="{StaticResource Ò}" BorderThickness="0,1,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                            <Thumb Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                        </Border>
                                    </Grid>
                                </Border>
                            </Border>
                        </sdsc:SystemDropShadowChrome>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <rd:DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.Width.IsStar}">
                    <rd:Setter TargetName="TextColumn" Property="ColumnDefinition.Width" Value="*" />
                    <rd:Setter TargetName="OuterTextColumn" Property="ColumnDefinition.Width" Value="*" />
                    <rd:Setter TargetName="PART_EditableTextBox" Property="windows:FrameworkElement.Width" Value="Auto" />
                    <rd:Setter TargetName="Grid" Property="windows:FrameworkElement.HorizontalAlignment" Value="Stretch" />
                </rd:DataTrigger>
                <rd:DataTrigger Value="Large" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                    <rd:Setter Property="windows:FrameworkElement.MinWidth" Value="44" />
                    <rd:Setter Property="windows:FrameworkElement.Height" Value="66" />
                    <rd:Setter TargetName="Image" Property="windows:FrameworkElement.Height" Value="32" />
                    <rd:Setter TargetName="Image" Property="windows:FrameworkElement.Width" Value="32" />
                    <rd:Setter TargetName="Grid" Property="windows:FrameworkElement.MinHeight" Value="26" />
                    <rd:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="True" />
                </rd:DataTrigger>
                <rd:DataTrigger Value="Small" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                    <rd:Setter Value="{StaticResource Ć}" Property="windows:FrameworkElement.Height" />
                    <rd:Setter TargetName="Image" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallImageSource}" Property="Image.Source" />
                    <rd:Setter TargetName="Image" Property="windows:FrameworkElement.Height" Value="16" />
                    <rd:Setter TargetName="Image" Property="windows:FrameworkElement.Width" Value="16" />
                    <rd:Setter TargetName="Image" Property="windows:FrameworkElement.HorizontalAlignment" Value="Left" />
                    <rd:Setter TargetName="Image" Property="windows:FrameworkElement.Margin" Value="2,0,1,0" />
                    <rd:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.Margin" Value="2,0,1,0" />
                    <rd:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="False" />
                    <rd:Setter TargetName="Image" Property="Grid.Column" Value="0" />
                    <rd:Setter TargetName="Image" Property="Grid.Row" Value="1" />
                </rd:DataTrigger>
                <rd:DataTrigger Value="Collapsed" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                    <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                </rd:DataTrigger>
                <rd:DataTrigger Value="False" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}">
                    <rd:Setter TargetName="TwoLineTextPanel" Property="UIElement.Visibility" Value="Collapsed" />
                </rd:DataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                        <rd:Condition Binding="{Binding ElementName=PART_ToggleButton, Path=IsMouseOver}" Value="False" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PART_ToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Control.BorderBrush" />
                    <rd:Setter TargetName="PART_ToggleButton" Value="{StaticResource Ā}" Property="Control.Background" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                        <rd:Condition Binding="{Binding ElementName=PART_ToggleButton, Path=IsMouseOver}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                        <rd:Condition Binding="{Binding ElementName=PART_EditableTextBox, Path=IsKeyboardFocused}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}" Property="Border.Background" />
                    <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="PART_ToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.MouseOverBorderBrush}" Property="Control.BorderBrush" />
                    <rd:Setter TargetName="PART_ToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.MouseOverBackground}" Property="Control.Background" />
                </rd:MultiDataTrigger>
                <rd:Trigger Property="ribbon:RibbonComboBox.ShowKeyboardCues" Value="True">
                    <rd:Setter TargetName="FocusVisual" Property="UIElement.Visibility" Value="Visible" />
                </rd:Trigger>
                <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5" />
                    <rd:Setter TargetName="Border" Value="{StaticResource ć}" Property="Border.Background" />
                    <rd:Setter TargetName="Border" Value="{StaticResource Ĉ}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="MainBorder" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:Trigger Property="ribbon:RibbonMenuButton.IsInControlGroup" Value="True">
                    <rd:Setter TargetName="MainBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="MainBorder" Property="Border.BorderThickness" Value="0,0,1,0" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="False" />
                        <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:Trigger Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="True">
                    <rd:Setter TargetName="ResizeControl" Property="Grid.Row" Value="0" />
                    <rd:Setter TargetName="ResizeControl" Property="Border.BorderThickness" Value="0,0,0,1" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Õ}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                    <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                    <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                </rd:Trigger>
                <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                    <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                    <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter Value="{windows:DynamicResource {x:Static SystemColors.WindowBrushKey}}" Property="Control.Background" />
                    <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="Border" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="FocusVisual" Value="{windows:DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Property="Shape.Stroke" />
                    <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                </rd:DataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInControlGroup}" Value="True" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Property="Border.BorderBrush" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                        <rd:Condition Binding="{Binding ElementName=PART_EditableTextBox, Path=IsKeyboardFocused}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="PART_ToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Control.BorderBrush" />
                    <rd:Setter TargetName="PART_ToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Control.Background" />
                    <rd:Setter TargetName="PART_ToggleButton" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
                </rd:MultiDataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                </rd:MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <rd:Style x:Key="{x:Type ribbon:RibbonComboBox}" TargetType="{x:Type ribbon:RibbonComboBox}">
            <rd:Style.Resources>
                <rd:Style TargetType="{x:Type ribbon:RibbonSeparator}">
                    <rd:Setter Property="windows:FrameworkElement.OverridesDefaultStyle" Value="True" />
                    <rd:Setter Property="UIElement.Focusable" Value="False" />
                    <rd:Setter Property="Control.BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.BorderBrush}" />
                    <rd:Setter Property="Control.Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.Background}" />
                    <rd:Setter Property="Control.FontWeight" Value="Bold" />
                    <rd:Setter Property="Control.Template">
                        <rd:Setter.Value>
                            <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
                                <Border Name="MainBorder" BorderThickness="0,1,0,1" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}">
                                    <Border Name="Overlay" Background="{StaticResource ì}">
                                        <TextBlock Name="Text" Margin="2,1,2,1" Text="{TemplateBinding ribbon:RibbonSeparator.Label}" />
                                    </Border>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                        <rd:Setter TargetName="Text" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextBlock.Foreground" />
                                        <rd:Setter TargetName="Overlay" Property="Border.Background" Value="#00FFFFFF" />
                                        <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                                        <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                                    </rd:DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </rd:Setter.Value>
                    </rd:Setter>
                    <rd:Style.Triggers>
                        <rd:Trigger Property="ribbon:RibbonSeparator.Label" Value="{x:Null}">
                            <rd:Setter Property="Control.Template">
                                <rd:Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
                                        <Grid Name="Grid" SnapsToDevicePixels="True" Margin="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="22" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="14" />
                                            </Grid.ColumnDefinitions>
                                            <Border Name="SideBarBorder" BorderThickness="0,0,1,0" Margin="0,-1,0,-1" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}">
                                                <Border Name="SideBarOverlay" Background="{StaticResource ì}" />
                                            </Border>
                                            <Line Name="Line" Grid.Column="1" Grid.ColumnSpan="2" Margin="2,0,0,0" X1="0" Y1="0" X2="1" Y2="0" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" Stretch="Fill" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                                <rd:Setter TargetName="SideBarBorder" Property="Border.Background" Value="#00FFFFFF" />
                                                <rd:Setter TargetName="SideBarBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                                <rd:Setter TargetName="SideBarOverlay" Property="Border.Background" Value="#00FFFFFF" />
                                                <rd:Setter TargetName="Line" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Shape.Stroke" />
                                            </rd:DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </rd:Setter.Value>
                            </rd:Setter>
                        </rd:Trigger>
                    </rd:Style.Triggers>
                </rd:Style>
            </rd:Style.Resources>
            <rd:Setter Property="Control.Background" Value="{StaticResource ĉ}" />
            <rd:Setter Property="Control.BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="Control.Padding" Value="2,1,2,1" />
            <rd:Setter Property="UIElement.AllowDrop" Value="True" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <rd:Setter Property="Control.VerticalContentAlignment" Value="Center" />
            <rd:Setter Property="ribbon:RibbonComboBox.SelectionBoxWidth" Value="80" />
            <rd:Setter Property="ribbon:RibbonMenuButton.MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuButton.MouseOverBackground" Value="#FFFFFFFF" />
            <rd:Setter Property="ribbon:RibbonMenuButton.FocusedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.BorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuButton.FocusedBackground" Value="#FFFFFFFF" />
            <rd:Setter Property="ribbon:RibbonMenuButton.PressedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuButton.PressedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}" />
            <rd:Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.ShowDuration" Value="{StaticResource Î}" />
            <rd:Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource Ï}" />
            <rd:Setter Property="ribbon:RibbonMenuButton.QuickAccessToolBarControlSizeDefinition">
                <rd:Setter.Value>
                    <rcp:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="False" />
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonComboBox}">
                        <Border Name="MainBorder">
                            <Grid Margin="1,0,1,0" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Name="OuterTextColumn" Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Image Name="Image" Source="{TemplateBinding ribbon:RibbonMenuButton.LargeImageSource}" RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Grid.Row="0" Grid.Column="1" Margin="1" Width="32" Height="32" />
                                <Grid Name="Grid" Grid.Row="1" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Name="TextColumn" Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid Name="TwoLineTextPanel" VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <rcp:RibbonTwoLineText x:Name="TwoLineText" Text="{TemplateBinding ribbon:RibbonMenuButton.Label}" TextAlignment="Center" LineHeight="13px" LineStackingStrategy="BlockLineHeight" Margin="2,0,2,0" />
                                        <Rectangle Name="FocusVisual" Margin="1" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" Visibility="Collapsed" />
                                    </Grid>
                                    <Border Name="Border" Grid.Column="1" Grid.ColumnSpan="2" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Height="{StaticResource ą}" />
                                    <Grid Grid.Column="1" Height="{StaticResource ą}" Grid.IsSharedSizeScope="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="ToggleButtonGroup" />
                                        </Grid.ColumnDefinitions>
                                        <Grid IsHitTestVisible="False" Margin="{TemplateBinding Control.Padding}" Width="{TemplateBinding ribbon:RibbonComboBox.SelectionBoxWidth}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                                            <ContentPresenter Name="PART_ContentHost" Content="{TemplateBinding ribbon:RibbonComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ribbon:RibbonComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ribbon:RibbonComboBox.SelectionBoxItemTemplateSelector}" ContentStringFormat="{TemplateBinding ribbon:RibbonComboBox.SelectionBoxItemStringFormat}" Margin="2,0,2,0" />
                                        </Grid>
                                        <rcp:RibbonToggleButton x:Name="PART_ToggleButton" Grid.ColumnSpan="2" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="#00FFFFFF" BorderBrush="#00FFFFFF" Style="{StaticResource ā}" CheckedBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}" CheckedBackground="{TemplateBinding ribbon:RibbonMenuButton.PressedBackground}" PressedBackground="{TemplateBinding ribbon:RibbonMenuButton.PressedBackground}" PressedBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Grid>
                                </Grid>
                                <Popup Name="PART_Popup" HorizontalOffset="1" VerticalOffset="-1" AllowsTransparency="True" Placement="Bottom" Focusable="False" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" PlacementTarget="{Binding ElementName=Border}" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                    <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p17:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" MinWidth="{Binding ElementName=Border, Path=ActualWidth}" xmlns:p17="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                                        <Border Name="MenuBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                                            <Border Name="SubMenuInnerBorder" Background="{StaticResource Ñ}" CornerRadius="2">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>
                                                    <ItemsPresenter Name="ItemsPresenter" Grid.Row="1" Grid.IsSharedSizeScope="True" Margin="1" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                                    <Border Name="ResizeControl" Grid.Row="2" Visibility="Collapsed" Background="{StaticResource Ò}" BorderThickness="0,1,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                                        <Thumb Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                                    </Border>
                                                </Grid>
                                            </Border>
                                        </Border>
                                    </sdsc:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <rd:DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.Width.IsStar}">
                                <rd:Setter TargetName="TextColumn" Property="ColumnDefinition.Width" Value="*" />
                                <rd:Setter TargetName="OuterTextColumn" Property="ColumnDefinition.Width" Value="*" />
                                <rd:Setter TargetName="PART_ContentHost" Property="windows:FrameworkElement.Width" Value="Auto" />
                                <rd:Setter TargetName="PART_ContentHost" Property="windows:FrameworkElement.HorizontalAlignment" Value="Stretch" />
                                <rd:Setter TargetName="Grid" Property="windows:FrameworkElement.HorizontalAlignment" Value="Stretch" />
                            </rd:DataTrigger>
                            <rd:DataTrigger Value="Large" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                                <rd:Setter Property="windows:FrameworkElement.MinWidth" Value="44" />
                                <rd:Setter Property="windows:FrameworkElement.Height" Value="66" />
                                <rd:Setter TargetName="Image" Property="windows:FrameworkElement.Height" Value="32" />
                                <rd:Setter TargetName="Image" Property="windows:FrameworkElement.Width" Value="32" />
                                <rd:Setter TargetName="Grid" Property="windows:FrameworkElement.MinHeight" Value="26" />
                                <rd:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="True" />
                            </rd:DataTrigger>
                            <rd:DataTrigger Value="Small" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                                <rd:Setter Value="{StaticResource Ć}" Property="windows:FrameworkElement.Height" />
                                <rd:Setter TargetName="Image" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallImageSource}" Property="Image.Source" />
                                <rd:Setter TargetName="Image" Property="windows:FrameworkElement.Height" Value="16" />
                                <rd:Setter TargetName="Image" Property="windows:FrameworkElement.Width" Value="16" />
                                <rd:Setter TargetName="Image" Property="windows:FrameworkElement.HorizontalAlignment" Value="Left" />
                                <rd:Setter TargetName="Image" Property="windows:FrameworkElement.Margin" Value="2,0,1,0" />
                                <rd:Setter TargetName="TwoLineText" Property="windows:FrameworkElement.Margin" Value="2,0,1,0" />
                                <rd:Setter TargetName="TwoLineText" Property="ribbon:RibbonTwoLineText.HasTwoLines" Value="False" />
                                <rd:Setter TargetName="Image" Property="Grid.Column" Value="0" />
                                <rd:Setter TargetName="Image" Property="Grid.Row" Value="1" />
                            </rd:DataTrigger>
                            <rd:DataTrigger Value="Collapsed" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}">
                                <rd:Setter TargetName="Image" Property="UIElement.Visibility" Value="Collapsed" />
                            </rd:DataTrigger>
                            <rd:DataTrigger Value="False" Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.IsLabelVisible}">
                                <rd:Setter TargetName="TwoLineTextPanel" Property="UIElement.Visibility" Value="Collapsed" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="PART_ToggleButton" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MouseOverBorderBrush}" Property="Control.BorderBrush" />
                                <rd:Setter TargetName="PART_ToggleButton" Value="{StaticResource Ā}" Property="Control.Background" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <rd:Condition Binding="{Binding ElementName=PART_ToggleButton, Path=IsKeyboardFocused}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBackground}" Property="Border.Background" />
                                <rd:Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedBorderBrush}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:Trigger Property="ribbon:RibbonComboBox.ShowKeyboardCues" Value="True">
                                <rd:Setter TargetName="FocusVisual" Property="UIElement.Visibility" Value="Visible" />
                            </rd:Trigger>
                            <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                                <rd:Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5" />
                                <rd:Setter TargetName="Border" Value="{StaticResource ć}" Property="Border.Background" />
                                <rd:Setter TargetName="Border" Value="{StaticResource Ĉ}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MainBorder" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                            </rd:Trigger>
                            <rd:Trigger Property="ribbon:RibbonMenuButton.IsInControlGroup" Value="True">
                                <rd:Setter TargetName="MainBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MainBorder" Property="Border.BorderThickness" Value="0,0,1,0" />
                            </rd:Trigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="True" />
                                    <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                            </rd:MultiTrigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="False" />
                                    <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                                <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}" Property="windows:FrameworkElement.Style" />
                            </rd:MultiTrigger>
                            <rd:Trigger Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="True">
                                <rd:Setter TargetName="ResizeControl" Property="Grid.Row" Value="0" />
                                <rd:Setter TargetName="ResizeControl" Property="Border.BorderThickness" Value="0,0,0,1" />
                            </rd:Trigger>
                            <rd:MultiTrigger>
                                <rd:MultiTrigger.Conditions>
                                    <rd:Condition Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="True" />
                                    <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="True" />
                                    <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="True" />
                                </rd:MultiTrigger.Conditions>
                                <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Õ}" Property="windows:FrameworkElement.Style" />
                            </rd:MultiTrigger>
                            <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                                <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                                <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                            </rd:Trigger>
                            <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                                <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                                <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                                <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter Value="{windows:DynamicResource {x:Static SystemColors.WindowBrushKey}}" Property="Control.Background" />
                                <rd:Setter TargetName="Border" Property="Border.Background" Value="#00FFFFFF" />
                                <rd:Setter TargetName="Border" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="FocusVisual" Value="{windows:DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Property="Shape.Stroke" />
                                <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:DataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInControlGroup}" Value="True" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Property="Border.BorderBrush" />
                            </rd:MultiDataTrigger>
                            <rd:MultiDataTrigger>
                                <rd:MultiDataTrigger.Conditions>
                                    <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                                    <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                </rd:MultiDataTrigger.Conditions>
                                <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                            </rd:MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Style.Triggers>
                <rd:Trigger Property="ribbon:RibbonMenuButton.IsDropDownOpen" Value="True">
                    <rd:Setter Property="ToolTipService.IsEnabled" Value="False" />
                </rd:Trigger>
                <rd:Trigger Property="ribbon:RibbonComboBox.IsEditable" Value="True">
                    <rd:Setter Property="Control.Template" Value="{StaticResource Ą}" />
                </rd:Trigger>
            </rd:Style.Triggers>
        </rd:Style>
        <rd:Style x:Key="{x:Type ribbon:RibbonContextMenu}" TargetType="{x:Type ribbon:RibbonContextMenu}">
            <rd:Style.Resources>
                <rd:Style TargetType="{x:Type ribbon:RibbonSeparator}">
                    <rd:Setter Property="windows:FrameworkElement.OverridesDefaultStyle" Value="True" />
                    <rd:Setter Property="UIElement.Focusable" Value="False" />
                    <rd:Setter Property="Control.BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonContextMenu}}, Path=PlacementTarget.(ribbon:RibbonControlService.Ribbon).BorderBrush}" />
                    <rd:Setter Property="Control.Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonContextMenu}}, Path=PlacementTarget.(ribbon:RibbonControlService.Ribbon).Background}" />
                    <rd:Setter Property="Control.FontWeight" Value="Bold" />
                    <rd:Setter Property="Control.Template">
                        <rd:Setter.Value>
                            <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
                                <Border Name="MainBorder" BorderThickness="0,1,0,1" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}">
                                    <Border Name="Overlay" Background="{StaticResource ì}">
                                        <TextBlock Name="Text" Margin="2,1,2,1" Text="{TemplateBinding ribbon:RibbonSeparator.Label}" />
                                    </Border>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                        <rd:Setter TargetName="Text" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextBlock.Foreground" />
                                        <rd:Setter TargetName="Overlay" Property="Border.Background" Value="#00FFFFFF" />
                                        <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                                        <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                                    </rd:DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </rd:Setter.Value>
                    </rd:Setter>
                    <rd:Style.Triggers>
                        <rd:Trigger Property="ribbon:RibbonSeparator.Label" Value="{x:Null}">
                            <rd:Setter Property="Control.Template">
                                <rd:Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
                                        <Grid Name="Grid" SnapsToDevicePixels="True" Margin="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="22" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="14" />
                                            </Grid.ColumnDefinitions>
                                            <Border Name="SideBarBorder" BorderThickness="0,0,1,0" Margin="0,-1,0,-1" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}">
                                                <Border Name="SideBarOverlay" Background="{StaticResource ì}" />
                                            </Border>
                                            <Line Name="Line" Grid.Column="1" Grid.ColumnSpan="2" Margin="2,0,0,0" X1="0" Y1="0" X2="1" Y2="0" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" Stretch="Fill" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                                <rd:Setter TargetName="SideBarBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                                <rd:Setter TargetName="SideBarBorder" Property="Border.Background" Value="#00FFFFFF" />
                                                <rd:Setter TargetName="SideBarOverlay" Property="Border.Background" Value="#00FFFFFF" />
                                                <rd:Setter TargetName="Line" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Shape.Stroke" />
                                            </rd:DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </rd:Setter.Value>
                            </rd:Setter>
                        </rd:Trigger>
                    </rd:Style.Triggers>
                </rd:Style>
            </rd:Style.Resources>
            <rd:Setter Property="Control.Background" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="Control.Template">
                <rd:Setter.Value>
                    <ControlTemplate TargetType="{x:Type ribbon:RibbonContextMenu}">
                        <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" SnapsToDevicePixels="True" RenderOptions.ClearTypeHint="Enabled">
                            <Border Name="PART_ResizeBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PlacementTarget.(ribbon:RibbonControlService.Ribbon).BorderBrush}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PlacementTarget.(ribbon:RibbonControlService.Ribbon).Background}">
                                <Border Name="SubMenuInnerBorder" Background="{StaticResource Ñ}" BorderThickness="0" CornerRadius="2">
                                    <ScrollViewer Name="SubMenuScrollViewer" Margin="1" Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                <Rectangle Name="OpaqueRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=PART_ResizeBorder, Path=ActualHeight}" Width="{Binding ElementName=PART_ResizeBorder, Path=ActualWidth}" Fill="{Binding ElementName=PART_ResizeBorder, Path=Background}" />
                                                <Rectangle Name="OverlayRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=SubMenuInnerBorder, Path=ActualHeight}" Width="{Binding ElementName=SubMenuInnerBorder, Path=ActualWidth}" Fill="{Binding ElementName=SubMenuInnerBorder, Path=Background}" />
                                            </Canvas>
                                            <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </sdsc:SystemDropShadowChrome>
                        <ControlTemplate.Triggers>
                            <rd:Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                                <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                                <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                                <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                            </rd:Trigger>
                            <rd:Trigger Property="ribbon:RibbonContextMenu.HasGallery" Value="True">
                                <rd:Setter TargetName="SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                                <rd:Setter TargetName="SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                            </rd:Trigger>
                            <rd:Trigger Property="ContextMenu.HasDropShadow" Value="True">
                                <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                                <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                            </rd:Trigger>
                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                                <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                                <rd:Setter TargetName="SubMenuScrollViewer" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
                                <rd:Setter TargetName="PART_ResizeBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                <rd:Setter TargetName="PART_ResizeBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                                <rd:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                            </rd:DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </rd:Setter.Value>
            </rd:Setter>
        </rd:Style>
        <ControlTemplate x:Key="×" TargetType="{x:Type ribbon:RibbonMenuButton}">
            <Grid Name="MainGrid" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <rcp:RibbonToggleButton x:Name="PART_ToggleButton" Template="{StaticResource Ħ}" RibbonTwoLineText.PathData="{TemplateBinding ribbon:RibbonTwoLineText.PathData}" Label="{TemplateBinding ribbon:RibbonMenuButton.Label}" LargeImageSource="{TemplateBinding ribbon:RibbonMenuButton.LargeImageSource}" SmallImageSource="{TemplateBinding ribbon:RibbonMenuButton.SmallImageSource}" ControlSizeDefinition="{TemplateBinding ribbon:RibbonMenuButton.ControlSizeDefinition}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" CornerRadius="2" MouseOverBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.MouseOverBorderBrush}" MouseOverBackground="{TemplateBinding ribbon:RibbonMenuButton.MouseOverBackground}" CheckedBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.PressedBorderBrush}" CheckedBackground="{TemplateBinding ribbon:RibbonMenuButton.PressedBackground}" FocusedBorderBrush="{TemplateBinding ribbon:RibbonMenuButton.FocusedBorderBrush}" FocusedBackground="{TemplateBinding ribbon:RibbonMenuButton.FocusedBackground}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Padding="{TemplateBinding Control.Padding}" ClickMode="Press" Style="{x:Null}" FocusVisualStyle="{x:Null}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}">
                    <rcp:RibbonToggleButton.Resources>
                        <rd:Thickness Left="1" Top="1" Right="1" Bottom="2" />
                    </rcp:RibbonToggleButton.Resources>
                </rcp:RibbonToggleButton>
                <Popup Name="PART_Popup" HorizontalOffset="1" VerticalOffset="-1" AllowsTransparency="True" Placement="Bottom" Focusable="False" PopupAnimation="{windows:DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen}">
                    <sdsc:SystemDropShadowChrome Name="Shadow" Color="Transparent" p13:KeyTipService.IsKeyTipScope="True" RenderOptions.ClearTypeHint="Enabled" xmlns:p13="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Ribbon,Version=4.0.0.0,Culture=neutral,PublicKeyToken=b77a5c561934e089">
                        <Border Name="MenuBorder" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}">
                            <Border Name="SubMenuInnerBorder" Background="{StaticResource Ñ}" BorderThickness="0" CornerRadius="2">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ScrollViewer Name="PART_SubMenuScrollViewer" Grid.Row="1" Margin="1" Style="{windows:DynamicResource {windows:ComponentResourceKey TypeInTargetAssembly={x:Type windows:FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                <Rectangle Name="OpaqueRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=MenuBorder, Path=ActualHeight}" Width="{Binding ElementName=MenuBorder, Path=ActualWidth}" Fill="{Binding ElementName=MenuBorder, Path=Background}" />
                                                <Rectangle Name="OverlayRect" RadiusX="2" RadiusY="2" Height="{Binding ElementName=SubMenuInnerBorder, Path=ActualHeight}" Width="{Binding ElementName=SubMenuInnerBorder, Path=ActualWidth}" Fill="{Binding ElementName=SubMenuInnerBorder, Path=Background}" />
                                            </Canvas>
                                            <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
                                        </Grid>
                                    </ScrollViewer>
                                    <Border Name="ResizeControl" Grid.Row="2" Visibility="Collapsed" Background="{StaticResource Ò}" BorderThickness="0,1,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.BorderBrush}">
                                        <Thumb Name="PART_ResizeThumb" Style="{StaticResource Ó}" />
                                    </Border>
                                </Grid>
                            </Border>
                        </Border>
                    </sdsc:SystemDropShadowChrome>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <rd:Trigger SourceName="PART_SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OpaqueRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" Property="Canvas.Top" />
                    <rd:Setter TargetName="OverlayRect" Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left" />
                </rd:Trigger>
                <rd:DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInQuickAccessToolBar}">
                    <rd:Setter TargetName="PART_ToggleButton" Property="windows:FrameworkElement.Height" Value="Auto" />
                </rd:DataTrigger>
                <rd:Trigger Property="UIElement.IsEnabled" Value="False">
                    <rd:Setter TargetName="MainGrid" Value="{StaticResource Ë}" Property="TextElement.Foreground" />
                </rd:Trigger>
                <rd:Trigger Property="ribbon:RibbonMenuButton.HasGallery" Value="True">
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                </rd:MultiTrigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="False" />
                        <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="ResizeControl" Property="UIElement.Visibility" Value="Visible" />
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Ô}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:Trigger Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="True">
                    <rd:Setter TargetName="ResizeControl" Property="Grid.Row" Value="0" />
                    <rd:Setter TargetName="ResizeControl" Property="Border.BorderThickness" Value="0,0,0,1" />
                </rd:Trigger>
                <rd:MultiTrigger>
                    <rd:MultiTrigger.Conditions>
                        <rd:Condition Property="ribbon:RibbonMenuButton.IsDropDownPositionedAbove" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeHorizontally" Value="True" />
                        <rd:Condition Property="ribbon:RibbonMenuButton.CanUserResizeVertically" Value="True" />
                    </rd:MultiTrigger.Conditions>
                    <rd:Setter TargetName="PART_ResizeThumb" Value="{StaticResource Õ}" Property="windows:FrameworkElement.Style" />
                </rd:MultiTrigger>
                <rd:Trigger Property="ItemsControl.HasItems" Value="False">
                    <rd:Setter TargetName="PART_ToggleButton" Value="{x:Null}" Property="ribbon:RibbonTwoLineText.PathData" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                    <rd:Setter TargetName="Shadow" Property="windows:FrameworkElement.Margin" Value="0,0,5,5" />
                    <rd:Setter TargetName="Shadow" Value="{StaticResource Ö}" Property="classic:SystemDropShadowChrome.Color" />
                </rd:Trigger>
                <rd:Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                </rd:Trigger>
                <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                    <rd:Setter TargetName="BackgroundCanvas" Property="UIElement.Visibility" Value="Collapsed" />
                    <rd:Setter TargetName="Shadow" Property="classic:SystemDropShadowChrome.Color" Value="Transparent" />
                    <rd:Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                    <rd:Setter TargetName="PART_SubMenuScrollViewer" Value="{windows:DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
                    <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="MenuBorder" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="MenuBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                    <rd:Setter TargetName="ResizeControl" Value="{windows:DynamicResource {x:Static SystemColors.MenuBrushKey}}" Property="Border.Background" />
                    <rd:Setter TargetName="SubMenuInnerBorder" Property="Border.Background" Value="#00FFFFFF" />
                    <rd:Setter TargetName="SubMenuInnerBorder" Property="Border.CornerRadius" Value="0" />
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="TextElement.Foreground" />
                </rd:DataTrigger>
                <rd:MultiDataTrigger>
                    <rd:MultiDataTrigger.Conditions>
                        <rd:Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                        <rd:Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                    </rd:MultiDataTrigger.Conditions>
                    <rd:Setter TargetName="MainGrid" Value="{windows:DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                </rd:MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <rd:Style x:Key="{x:Type ribbon:RibbonMenuButton}" TargetType="{x:Type ribbon:RibbonMenuButton}">
            <rd:Style.Resources>
                <rd:Style TargetType="{x:Type ribbon:RibbonSeparator}">
                    <rd:Setter Property="windows:FrameworkElement.OverridesDefaultStyle" Value="True" />
                    <rd:Setter Property="UIElement.Focusable" Value="False" />
                    <rd:Setter Property="Control.BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.BorderBrush}" />
                    <rd:Setter Property="Control.Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ribbon:RibbonMenuButton}}, Path=Ribbon.Background}" />
                    <rd:Setter Property="Control.FontWeight" Value="Bold" />
                    <rd:Setter Property="Control.Template">
                        <rd:Setter.Value>
                            <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
                                <Border Name="MainBorder" SnapsToDevicePixels="True" BorderThickness="0,1,0,1" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}">
                                    <Border Name="Overlay" Background="{StaticResource ì}">
                                        <TextBlock Name="Text" Margin="2,1,2,1" Text="{TemplateBinding ribbon:RibbonSeparator.Label}" />
                                    </Border>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                        <rd:Setter TargetName="Text" Value="{windows:DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Property="TextBlock.Foreground" />
                                        <rd:Setter TargetName="Overlay" Property="Border.Background" Value="#00FFFFFF" />
                                        <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Property="Border.BorderBrush" />
                                        <rd:Setter TargetName="MainBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
                                    </rd:DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </rd:Setter.Value>
                    </rd:Setter>
                    <rd:Style.Triggers>
                        <rd:Trigger Property="ribbon:RibbonSeparator.Label" Value="{x:Null}">
                            <rd:Setter Property="Control.Template">
                                <rd:Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ribbon:RibbonSeparator}">
                                        <Grid Name="Grid" SnapsToDevicePixels="True" Margin="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="22" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="14" />
                                            </Grid.ColumnDefinitions>
                                            <Border Name="SideBarBorder" BorderThickness="0,0,1,0" Margin="0,-1,0,-1" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}">
                                                <Border Name="SideBarOverlay" Background="{StaticResource ì}" />
                                            </Border>
                                            <Line Name="Line" Grid.Column="1" Grid.ColumnSpan="2" Margin="2,0,0,0" X1="0" Y1="0" X2="1" Y2="0" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" Stretch="Fill" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <rd:DataTrigger Value="True" Binding="{Binding Path=(SystemParameters.HighContrast)}">
                                                <rd:Setter TargetName="SideBarBorder" Property="Border.Background" Value="#00FFFFFF" />
                                                <rd:Setter TargetName="SideBarBorder" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Border.BorderBrush" />
                                                <rd:Setter TargetName="SideBarOverlay" Property="Border.Background" Value="#00FFFFFF" />
                                                <rd:Setter TargetName="Line" Value="{windows:DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Shape.Stroke" />
                                            </rd:DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </rd:Setter.Value>
                            </rd:Setter>
                        </rd:Trigger>
                    </rd:Style.Triggers>
                </rd:Style>
            </rd:Style.Resources>
            <rd:Setter Property="Control.Background" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
            <rd:Setter Property="Control.BorderThickness" Value="1" />
            <rd:Setter Property="windows:FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <rd:Setter Property="Control.HorizontalContentAlignment" Value="Center" />
            <rd:Setter Property="Control.Padding" Value="2,0,2,0" />
            <rd:Setter Property="ribbon:RibbonMenuButton.MouseOverBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuButton.MouseOverBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.MouseOverBackground}" />
            <rd:Setter Property="ribbon:RibbonMenuButton.PressedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuButton.PressedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.PressedBackground}" />
            <rd:Setter Property="ribbon:RibbonMenuButton.FocusedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBorderBrush}" />
            <rd:Setter Property="ribbon:RibbonMenuButton.FocusedBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Ribbon.FocusedBackground}" />
            <rd:Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource Í}" />
            <rd:Setter Property="ToolTipService.ShowDuration" Value="{StaticResource Î}" />
            <rd:Setter Property="ToolTipService.BetweenShowDelay" Value="{StaticResource Ï}" />
            <rd:Setter Property="ribbon:RibbonTwoLineText.PathData" Value="{StaticResource Ð}" />
            <rd:Setter Property="ribbon:RibbonMenuButton.QuickAccessToolBarControlSizeDefinition">
                <rd:Setter.Value>
                    <rcp:RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="False" />
                </rd:Setter.Value>
            </rd:Setter>
            <rd:Setter Property="Control.Template" Value="{StaticResource ×}" />
            <rd:Style.Triggers>
                <rd:Trigger Property="ribbon:RibbonMenuButton.IsDropDownOpen" Value="True">
                    <rd:Setter Property="ToolTipService.IsEnabled" Value="False" />
                </rd:Trigger>
            </rd:Style.Triggers>
        </rd:Style>
    </rd:ResourceDictionary>
</ResourceDictionary>